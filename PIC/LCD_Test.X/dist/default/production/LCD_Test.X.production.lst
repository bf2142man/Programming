

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat May 28 19:50:49 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F883 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  001E                     _ADRESH	set	30
   214  001F                     _ADCON0	set	31
   215  0006                     _PORTBbits	set	6
   216  0007                     _PORTCbits	set	7
   217  0007                     _PORTC	set	7
   218  0006                     _PORTB	set	6
   219  003C                     _RC4	set	60
   220  00F9                     _GO_nDONE	set	249
   221  0033                     _RB3	set	51
   222  0032                     _RB2	set	50
   223  0031                     _RB1	set	49
   224  0030                     _RB0	set	48
   225  009E                     _ADRESL	set	158
   226  009F                     _ADCON1	set	159
   227  0087                     _TRISC	set	135
   228  0086                     _TRISB	set	134
   229  0189                     _ANSELH	set	393
   230                           
   231                           	psect	strings
   232  0002                     __pstrings:
   233  0002                     stringtab:
   234  0002                     __stringtab:
   235                           
   236                           ;	String table - string pointers are 1 byte each
   237  0002  1BFF               	btfsc	btemp+1,7
   238  0003  280C               	ljmp	stringcode
   239  0004  1383               	bcf	3,7
   240  0005  187F               	btfsc	btemp+1,0
   241  0006  1783               	bsf	3,7
   242  0007  0800               	movf	0,w
   243  0008  0A84               	incf	4,f
   244  0009  1903               	skipnz
   245  000A  0AFF               	incf	btemp+1,f
   246  000B  0008               	return
   247  000C                     stringcode:
   248  000C                     stringdir:
   249  000C  3000               	movlw	high stringdir
   250  000D  008A               	movwf	10
   251  000E  0804               	movf	4,w
   252  000F  0A84               	incf	4,f
   253  0010  0782               	addwf	2,f
   254  0011                     __stringbase:
   255  0011  3400               	retlw	0
   256  0012                     __end_of__stringtab:
   257  0012                     STR_2:
   258  0012  3420               	retlw	32	;' '
   259  0013  3420               	retlw	32	;' '
   260  0014  3420               	retlw	32	;' '
   261  0015  3420               	retlw	32	;' '
   262  0016  3420               	retlw	32	;' '
   263  0017  3420               	retlw	32	;' '
   264  0018  3420               	retlw	32	;' '
   265  0019  3420               	retlw	32	;' '
   266  001A  3420               	retlw	32	;' '
   267  001B  3420               	retlw	32	;' '
   268  001C  3420               	retlw	32	;' '
   269  001D  3420               	retlw	32	;' '
   270  001E  3420               	retlw	32	;' '
   271  001F  3420               	retlw	32	;' '
   272  0020  3420               	retlw	32	;' '
   273  0021  3420               	retlw	32	;' '
   274  0022  3420               	retlw	32	;' '
   275  0023  3420               	retlw	32	;' '
   276  0024  3420               	retlw	32	;' '
   277  0025  3420               	retlw	32	;' '
   278  0026  3400               	retlw	0
   279  0027                     STR_7:
   280  0027  3431               	retlw	49	;'1'
   281  0028  3430               	retlw	48	;'0'
   282  0029  3420               	retlw	32	;' '
   283  002A  3473               	retlw	115	;'s'
   284  002B  3465               	retlw	101	;'e'
   285  002C  3463               	retlw	99	;'c'
   286  002D  346F               	retlw	111	;'o'
   287  002E  346E               	retlw	110	;'n'
   288  002F  3464               	retlw	100	;'d'
   289  0030  3420               	retlw	32	;' '
   290  0031  3464               	retlw	100	;'d'
   291  0032  3465               	retlw	101	;'e'
   292  0033  346C               	retlw	108	;'l'
   293  0034  3461               	retlw	97	;'a'
   294  0035  3479               	retlw	121	;'y'
   295  0036  3420               	retlw	32	;' '
   296  0037  3420               	retlw	32	;' '
   297  0038  3420               	retlw	32	;' '
   298  0039  3420               	retlw	32	;' '
   299  003A  3420               	retlw	32	;' '
   300  003B  3400               	retlw	0
   301  003C                     STR_1:
   302  003C  3420               	retlw	32	;' '
   303  003D  3431               	retlw	49	;'1'
   304  003E  3420               	retlw	32	;' '
   305  003F  3473               	retlw	115	;'s'
   306  0040  3465               	retlw	101	;'e'
   307  0041  3463               	retlw	99	;'c'
   308  0042  346F               	retlw	111	;'o'
   309  0043  346E               	retlw	110	;'n'
   310  0044  3464               	retlw	100	;'d'
   311  0045  3420               	retlw	32	;' '
   312  0046  3464               	retlw	100	;'d'
   313  0047  3465               	retlw	101	;'e'
   314  0048  346C               	retlw	108	;'l'
   315  0049  3461               	retlw	97	;'a'
   316  004A  3479               	retlw	121	;'y'
   317  004B  3420               	retlw	32	;' '
   318  004C  3420               	retlw	32	;' '
   319  004D  3420               	retlw	32	;' '
   320  004E  3420               	retlw	32	;' '
   321  004F  3420               	retlw	32	;' '
   322  0050  3400               	retlw	0
   323  0051                     STR_3:
   324  0051  3420               	retlw	32	;' '
   325  0052  3432               	retlw	50	;'2'
   326  0053  3420               	retlw	32	;' '
   327  0054  3473               	retlw	115	;'s'
   328  0055  3465               	retlw	101	;'e'
   329  0056  3463               	retlw	99	;'c'
   330  0057  346F               	retlw	111	;'o'
   331  0058  346E               	retlw	110	;'n'
   332  0059  3464               	retlw	100	;'d'
   333  005A  3420               	retlw	32	;' '
   334  005B  3464               	retlw	100	;'d'
   335  005C  3465               	retlw	101	;'e'
   336  005D  346C               	retlw	108	;'l'
   337  005E  3461               	retlw	97	;'a'
   338  005F  3479               	retlw	121	;'y'
   339  0060  3420               	retlw	32	;' '
   340  0061  3420               	retlw	32	;' '
   341  0062  3420               	retlw	32	;' '
   342  0063  3420               	retlw	32	;' '
   343  0064  3420               	retlw	32	;' '
   344  0065  3400               	retlw	0
   345  0066                     STR_5:
   346  0066  3420               	retlw	32	;' '
   347  0067  3435               	retlw	53	;'5'
   348  0068  3420               	retlw	32	;' '
   349  0069  3473               	retlw	115	;'s'
   350  006A  3465               	retlw	101	;'e'
   351  006B  3463               	retlw	99	;'c'
   352  006C  346F               	retlw	111	;'o'
   353  006D  346E               	retlw	110	;'n'
   354  006E  3464               	retlw	100	;'d'
   355  006F  3420               	retlw	32	;' '
   356  0070  3464               	retlw	100	;'d'
   357  0071  3465               	retlw	101	;'e'
   358  0072  346C               	retlw	108	;'l'
   359  0073  3461               	retlw	97	;'a'
   360  0074  3479               	retlw	121	;'y'
   361  0075  3420               	retlw	32	;' '
   362  0076  3420               	retlw	32	;' '
   363  0077  3420               	retlw	32	;' '
   364  0078  3420               	retlw	32	;' '
   365  0079  3420               	retlw	32	;' '
   366  007A  3400               	retlw	0
   367  0012                     
   368                           	psect	cinit
   369  07FD                     start_initialization:	
   370                           ; #config settings
   371                           
   372  07FD                     __initialization:
   373  07FD                     end_of_initialization:	
   374                           ;End of C runtime variable initialization code
   375                           
   376  07FD                     __end_of__initialization:
   377  07FD  0183               	clrf	3
   378  07FE  118A  2EA1         	ljmp	_main	;jump to C main() function
   379                           
   380                           	psect	cstackCOMMON
   381  0070                     __pcstackCOMMON:
   382  0070                     ?_LCDPutCmd:
   383  0070                     ?_LCD_Initialize:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_ToggleEnable:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_ToggleEnable:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_LCDPutChar:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_ADC_Initialize:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ??_ADC_Initialize:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_main:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_ADC_Read:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?___lwdiv:	
   408                           ; 2 bytes @ 0x0
   409                           
   410  0070                     ?___lwmod:	
   411                           ; 2 bytes @ 0x0
   412                           
   413  0070                     ___lwdiv@divisor:	
   414                           ; 2 bytes @ 0x0
   415                           
   416  0070                     ___lwmod@divisor:	
   417                           ; 2 bytes @ 0x0
   418                           
   419                           
   420                           ; 2 bytes @ 0x0
   421  0070                     	ds	1
   422  0071                     ?_LCDWriteNibble:
   423  0071                     LCDWriteNibble@rs:	
   424                           ; 1 bytes @ 0x1
   425                           
   426                           
   427                           ; 1 bytes @ 0x1
   428  0071                     	ds	1
   429  0072                     ??_LCDWriteNibble:
   430  0072                     ??_ADC_Read:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     LCDWriteNibble@ch:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     ___lwdiv@dividend:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     ___lwmod@dividend:	
   440                           ; 2 bytes @ 0x2
   441                           
   442                           
   443                           ; 2 bytes @ 0x2
   444  0072                     	ds	1
   445  0073                     ??_LCDPutCmd:
   446  0073                     ??_LCDPutChar:	
   447                           ; 1 bytes @ 0x3
   448                           
   449                           
   450                           ; 1 bytes @ 0x3
   451  0073                     	ds	1
   452  0074                     ??___lwdiv:
   453  0074                     ??___lwmod:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     ADC_Read@channel:	
   457                           ; 1 bytes @ 0x4
   458                           
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     LCDPutChar@ch:
   463  0075                     LCDPutCmd@ch:	
   464                           ; 1 bytes @ 0x5
   465                           
   466  0075                     ___lwmod@counter:	
   467                           ; 1 bytes @ 0x5
   468                           
   469  0075                     ___lwdiv@quotient:	
   470                           ; 1 bytes @ 0x5
   471                           
   472                           
   473                           ; 2 bytes @ 0x5
   474  0075                     	ds	1
   475  0076                     ??_LCD_Initialize:
   476  0076                     ?_LCDPutStr:	
   477                           ; 1 bytes @ 0x6
   478                           
   479  0076                     ?_LCDGoto:	
   480                           ; 1 bytes @ 0x6
   481                           
   482  0076                     LCDGoto@ln:	
   483                           ; 1 bytes @ 0x6
   484                           
   485  0076                     LCDPutStr@str:	
   486                           ; 1 bytes @ 0x6
   487                           
   488                           
   489                           ; 2 bytes @ 0x6
   490  0076                     	ds	1
   491  0077                     ??_LCDGoto:
   492  0077                     ___lwdiv@counter:	
   493                           ; 1 bytes @ 0x7
   494                           
   495                           
   496                           ; 1 bytes @ 0x7
   497  0077                     	ds	1
   498  0078                     ?_utoa:
   499  0078                     ??_LCDPutStr:	
   500                           ; 1 bytes @ 0x8
   501                           
   502  0078                     utoa@val:	
   503                           ; 1 bytes @ 0x8
   504                           
   505                           
   506                           ; 2 bytes @ 0x8
   507  0078                     	ds	1
   508  0079                     LCDPutStr@i:
   509  0079                     _LCDGoto$131:	
   510                           ; 1 bytes @ 0x9
   511                           
   512                           
   513                           ; 2 bytes @ 0x9
   514  0079                     	ds	1
   515  007A                     utoa@base:
   516                           
   517                           ; 2 bytes @ 0xA
   518  007A                     	ds	1
   519  007B                     LCDGoto@pos:
   520                           
   521                           ; 1 bytes @ 0xB
   522  007B                     	ds	1
   523  007C                     ??_utoa:
   524                           
   525                           ; 1 bytes @ 0xC
   526  007C                     	ds	1
   527  007D                     ??_itoa:
   528                           
   529                           ; 1 bytes @ 0xD
   530  007D                     	ds	1
   531                           
   532                           	psect	cstackBANK0
   533  0020                     __pcstackBANK0:
   534  0020                     utoa@v:
   535                           
   536                           ; 2 bytes @ 0x0
   537  0020                     	ds	2
   538  0022                     utoa@c:
   539                           
   540                           ; 1 bytes @ 0x2
   541  0022                     	ds	1
   542  0023                     utoa@buf:
   543                           
   544                           ; 1 bytes @ 0x3
   545  0023                     	ds	1
   546  0024                     ?_itoa:
   547  0024                     itoa@val:	
   548                           ; 1 bytes @ 0x4
   549                           
   550                           
   551                           ; 2 bytes @ 0x4
   552  0024                     	ds	2
   553  0026                     itoa@base:
   554                           
   555                           ; 2 bytes @ 0x6
   556  0026                     	ds	2
   557  0028                     itoa@buf:
   558                           
   559                           ; 1 bytes @ 0x8
   560  0028                     	ds	1
   561  0029                     ??_main:
   562                           
   563                           ; 1 bytes @ 0x9
   564  0029                     	ds	3
   565  002C                     main@Buffer:
   566                           
   567                           ; 7 bytes @ 0xC
   568  002C                     	ds	7
   569  0033                     main@adc:
   570                           
   571                           ; 2 bytes @ 0x13
   572  0033                     	ds	2
   573                           
   574                           	psect	maintext
   575  06A1                     __pmaintext:	
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 228 in file "LCD_Main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  Buffer          7   12[BANK0 ] unsigned char [7]
   586 ;;  adc             2   19[BANK0 ] int 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : B00/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   596 ;;      Params:         0       0       0       0
   597 ;;      Locals:         0       9       0       0
   598 ;;      Temps:          0       3       0       0
   599 ;;      Totals:         0      12       0       0
   600 ;;Total ram usage:       12 bytes
   601 ;; Hardware stack levels required when called: 4
   602 ;; This function calls:
   603 ;;		_ADC_Initialize
   604 ;;		_ADC_Read
   605 ;;		_LCDGoto
   606 ;;		_LCDPutCmd
   607 ;;		_LCDPutStr
   608 ;;		_LCD_Initialize
   609 ;;		_itoa
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615  06A1                     _main:	
   616                           ;psect for function _main
   617                           
   618  06A1                     l1216:	
   619                           ;incstack = 0
   620                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   621                           
   622                           
   623                           ;LCD_Main.c: 230: ADC_Initialize();
   624  06A1  118A  246B  118A   	fcall	_ADC_Initialize
   625                           
   626                           ;LCD_Main.c: 231: int adc;;LCD_Main.c: 234: LCD_Initialize();
   627  06A4  118A  251E  118A   	fcall	_LCD_Initialize
   628  06A7                     l93:	
   629                           ;LCD_Main.c: 237:   while(1)
   630                           
   631                           
   632                           ;LCD_Main.c: 238:   {;LCD_Main.c: 239:     adc = (ADC_Read(0));
   633  06A7  3000               	movlw	0
   634  06A8  118A  24F4  118A   	fcall	_ADC_Read
   635  06AB  0871               	movf	?_ADC_Read+1,w
   636  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   637  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   638  06AE  00B4               	movwf	main@adc+1
   639  06AF  0870               	movf	?_ADC_Read,w
   640  06B0  00B3               	movwf	main@adc
   641  06B1                     l1218:
   642                           
   643                           ;LCD_Main.c: 240:     char Buffer[7];;LCD_Main.c: 241:     itoa(Buffer, adc, 10);
   644  06B1  0834               	movf	main@adc+1,w
   645  06B2  00A5               	movwf	itoa@val+1
   646  06B3  0833               	movf	main@adc,w
   647  06B4  00A4               	movwf	itoa@val
   648  06B5  300A               	movlw	10
   649  06B6  00A6               	movwf	itoa@base
   650  06B7  3000               	movlw	0
   651  06B8  00A7               	movwf	itoa@base+1
   652  06B9  302C               	movlw	(low (main@Buffer| 0))& (0+255)
   653  06BA  118A  24AB  118A   	fcall	_itoa
   654  06BD                     l1220:
   655                           
   656                           ;LCD_Main.c: 244:     if (adc > 700 & adc < 800)
   657  06BD  1283               	bcf	3,5	;RP0=0, select bank0
   658  06BE  1303               	bcf	3,6	;RP1=0, select bank0
   659  06BF  0834               	movf	main@adc+1,w
   660  06C0  3A80               	xorlw	128
   661  06C1  00FF               	movwf	btemp+1
   662  06C2  3082               	movlw	130
   663  06C3  027F               	subwf	btemp+1,w
   664  06C4  1D03               	skipz
   665  06C5  2EC8               	goto	u705
   666  06C6  30BD               	movlw	189
   667  06C7  0233               	subwf	main@adc,w
   668  06C8                     u705:
   669  06C8  1C03               	skipc
   670  06C9  2ECB               	goto	u701
   671  06CA  2ECC               	goto	u700
   672  06CB                     u701:
   673  06CB  2F0C               	goto	l1240
   674  06CC                     u700:
   675  06CC                     l1222:
   676  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   677  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   678  06CE  0834               	movf	main@adc+1,w
   679  06CF  3A80               	xorlw	128
   680  06D0  00FF               	movwf	btemp+1
   681  06D1  3083               	movlw	131
   682  06D2  027F               	subwf	btemp+1,w
   683  06D3  1D03               	skipz
   684  06D4  2ED7               	goto	u715
   685  06D5  3020               	movlw	32
   686  06D6  0233               	subwf	main@adc,w
   687  06D7                     u715:
   688  06D7  1803               	skipnc
   689  06D8  2EDA               	goto	u711
   690  06D9  2EDB               	goto	u710
   691  06DA                     u711:
   692  06DA  2F0C               	goto	l1240
   693  06DB                     u710:
   694  06DB                     l1224:
   695                           
   696                           ;LCD_Main.c: 245:     {;LCD_Main.c: 246:        LCDGoto(0,0);
   697  06DB  01F6               	clrf	LCDGoto@ln
   698  06DC  3000               	movlw	0
   699  06DD  118A  2549  118A   	fcall	_LCDGoto
   700  06E0                     l1226:
   701                           
   702                           ;LCD_Main.c: 247:         LCDPutStr(" 1 second delay     ");
   703  06E0  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   704  06E1  00F6               	movwf	LCDPutStr@str
   705  06E2  3080               	movlw	128
   706  06E3  00F7               	movwf	LCDPutStr@str+1
   707  06E4  118A  24CF  118A   	fcall	_LCDPutStr
   708  06E7                     l1228:
   709                           
   710                           ;LCD_Main.c: 248:         LCDPutCmd(0x02);
   711  06E7  3002               	movlw	2
   712  06E8  118A  2477  118A   	fcall	_LCDPutCmd
   713  06EB                     l1230:
   714                           
   715                           ;LCD_Main.c: 249:         RC4 = 0;
   716  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   717  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   718  06ED  1207               	bcf	7,4	;volatile
   719  06EE                     l1232:
   720                           
   721                           ;LCD_Main.c: 250:          _delay((unsigned long)((1000)*(4194304/4000.0)));
   722  06EE  3006               	movlw	6
   723  06EF  1283               	bcf	3,5	;RP0=0, select bank0
   724  06F0  1303               	bcf	3,6	;RP1=0, select bank0
   725  06F1  00AB               	movwf	??_main+2
   726  06F2  3052               	movlw	82
   727  06F3  00AA               	movwf	??_main+1
   728  06F4  30C3               	movlw	195
   729  06F5  00A9               	movwf	??_main
   730  06F6                     u777:
   731  06F6  0BA9               	decfsz	??_main,f
   732  06F7  2EF6               	goto	u777
   733  06F8  0BAA               	decfsz	??_main+1,f
   734  06F9  2EF6               	goto	u777
   735  06FA  0BAB               	decfsz	??_main+2,f
   736  06FB  2EF6               	goto	u777
   737  06FC  0000               	nop
   738  06FD                     l1234:
   739                           
   740                           ;LCD_Main.c: 251:         RC4 = 1;
   741  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   742  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   743  06FF  1607               	bsf	7,4	;volatile
   744  0700                     l1236:
   745                           
   746                           ;LCD_Main.c: 252:         LCDPutStr("                    ");
   747  0700  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   748  0701  00F6               	movwf	LCDPutStr@str
   749  0702  3080               	movlw	128
   750  0703  00F7               	movwf	LCDPutStr@str+1
   751  0704  118A  24CF  118A   	fcall	_LCDPutStr
   752  0707                     l1238:
   753                           
   754                           ;LCD_Main.c: 253:         LCDPutCmd(0x02);
   755  0707  3002               	movlw	2
   756  0708  118A  2477  118A   	fcall	_LCDPutCmd
   757                           
   758                           ;LCD_Main.c: 254:     }
   759  070B  2FED               	goto	l1298
   760  070C                     l1240:
   761  070C  1283               	bcf	3,5	;RP0=0, select bank0
   762  070D  1303               	bcf	3,6	;RP1=0, select bank0
   763  070E  0834               	movf	main@adc+1,w
   764  070F  3A80               	xorlw	128
   765  0710  00FF               	movwf	btemp+1
   766  0711  3082               	movlw	130
   767  0712  027F               	subwf	btemp+1,w
   768  0713  1D03               	skipz
   769  0714  2F17               	goto	u725
   770  0715  3059               	movlw	89
   771  0716  0233               	subwf	main@adc,w
   772  0717                     u725:
   773  0717  1C03               	skipc
   774  0718  2F1A               	goto	u721
   775  0719  2F1B               	goto	u720
   776  071A                     u721:
   777  071A  2F5B               	goto	l1260
   778  071B                     u720:
   779  071B                     l1242:
   780  071B  1283               	bcf	3,5	;RP0=0, select bank0
   781  071C  1303               	bcf	3,6	;RP1=0, select bank0
   782  071D  0834               	movf	main@adc+1,w
   783  071E  3A80               	xorlw	128
   784  071F  00FF               	movwf	btemp+1
   785  0720  3082               	movlw	130
   786  0721  027F               	subwf	btemp+1,w
   787  0722  1D03               	skipz
   788  0723  2F26               	goto	u735
   789  0724  30BC               	movlw	188
   790  0725  0233               	subwf	main@adc,w
   791  0726                     u735:
   792  0726  1803               	skipnc
   793  0727  2F29               	goto	u731
   794  0728  2F2A               	goto	u730
   795  0729                     u731:
   796  0729  2F5B               	goto	l1260
   797  072A                     u730:
   798  072A                     l1244:
   799                           
   800                           ;LCD_Main.c: 256:     {;LCD_Main.c: 257:         LCDGoto(0,0);
   801  072A  01F6               	clrf	LCDGoto@ln
   802  072B  3000               	movlw	0
   803  072C  118A  2549  118A   	fcall	_LCDGoto
   804  072F                     l1246:
   805                           
   806                           ;LCD_Main.c: 258:         LCDPutStr(" 2 second delay     ");
   807  072F  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   808  0730  00F6               	movwf	LCDPutStr@str
   809  0731  3080               	movlw	128
   810  0732  00F7               	movwf	LCDPutStr@str+1
   811  0733  118A  24CF  118A   	fcall	_LCDPutStr
   812  0736                     l1248:
   813                           
   814                           ;LCD_Main.c: 259:         LCDPutCmd(0x02);
   815  0736  3002               	movlw	2
   816  0737  118A  2477  118A   	fcall	_LCDPutCmd
   817  073A                     l1250:
   818                           
   819                           ;LCD_Main.c: 260:         RC4 = 0;
   820  073A  1283               	bcf	3,5	;RP0=0, select bank0
   821  073B  1303               	bcf	3,6	;RP1=0, select bank0
   822  073C  1207               	bcf	7,4	;volatile
   823  073D                     l1252:
   824                           
   825                           ;LCD_Main.c: 261:          _delay((unsigned long)((2000)*(4194304/4000.0)));
   826  073D  300B               	movlw	11
   827  073E  1283               	bcf	3,5	;RP0=0, select bank0
   828  073F  1303               	bcf	3,6	;RP1=0, select bank0
   829  0740  00AB               	movwf	??_main+2
   830  0741  30A4               	movlw	164
   831  0742  00AA               	movwf	??_main+1
   832  0743  3089               	movlw	137
   833  0744  00A9               	movwf	??_main
   834  0745                     u787:
   835  0745  0BA9               	decfsz	??_main,f
   836  0746  2F45               	goto	u787
   837  0747  0BAA               	decfsz	??_main+1,f
   838  0748  2F45               	goto	u787
   839  0749  0BAB               	decfsz	??_main+2,f
   840  074A  2F45               	goto	u787
   841  074B  0000               	nop
   842  074C                     l1254:
   843                           
   844                           ;LCD_Main.c: 262:         RC4 = 1;
   845  074C  1283               	bcf	3,5	;RP0=0, select bank0
   846  074D  1303               	bcf	3,6	;RP1=0, select bank0
   847  074E  1607               	bsf	7,4	;volatile
   848  074F                     l1256:
   849                           
   850                           ;LCD_Main.c: 263:         LCDPutStr("                    ");
   851  074F  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   852  0750  00F6               	movwf	LCDPutStr@str
   853  0751  3080               	movlw	128
   854  0752  00F7               	movwf	LCDPutStr@str+1
   855  0753  118A  24CF  118A   	fcall	_LCDPutStr
   856  0756                     l1258:
   857                           
   858                           ;LCD_Main.c: 264:         LCDPutCmd(0x02);
   859  0756  3002               	movlw	2
   860  0757  118A  2477  118A   	fcall	_LCDPutCmd
   861                           
   862                           ;LCD_Main.c: 265:     }
   863  075A  2FED               	goto	l1298
   864  075B                     l1260:
   865  075B  1283               	bcf	3,5	;RP0=0, select bank0
   866  075C  1303               	bcf	3,6	;RP1=0, select bank0
   867  075D  0834               	movf	main@adc+1,w
   868  075E  3A80               	xorlw	128
   869  075F  00FF               	movwf	btemp+1
   870  0760  3081               	movlw	129
   871  0761  027F               	subwf	btemp+1,w
   872  0762  1D03               	skipz
   873  0763  2F66               	goto	u745
   874  0764  30F5               	movlw	245
   875  0765  0233               	subwf	main@adc,w
   876  0766                     u745:
   877  0766  1C03               	skipc
   878  0767  2F69               	goto	u741
   879  0768  2F6A               	goto	u740
   880  0769                     u741:
   881  0769  2FAA               	goto	l1280
   882  076A                     u740:
   883  076A                     l1262:
   884  076A  1283               	bcf	3,5	;RP0=0, select bank0
   885  076B  1303               	bcf	3,6	;RP1=0, select bank0
   886  076C  0834               	movf	main@adc+1,w
   887  076D  3A80               	xorlw	128
   888  076E  00FF               	movwf	btemp+1
   889  076F  3082               	movlw	130
   890  0770  027F               	subwf	btemp+1,w
   891  0771  1D03               	skipz
   892  0772  2F75               	goto	u755
   893  0773  3058               	movlw	88
   894  0774  0233               	subwf	main@adc,w
   895  0775                     u755:
   896  0775  1803               	skipnc
   897  0776  2F78               	goto	u751
   898  0777  2F79               	goto	u750
   899  0778                     u751:
   900  0778  2FAA               	goto	l1280
   901  0779                     u750:
   902  0779                     l1264:
   903                           
   904                           ;LCD_Main.c: 267:     {;LCD_Main.c: 268:         LCDGoto(0,0);
   905  0779  01F6               	clrf	LCDGoto@ln
   906  077A  3000               	movlw	0
   907  077B  118A  2549  118A   	fcall	_LCDGoto
   908  077E                     l1266:
   909                           
   910                           ;LCD_Main.c: 269:         LCDPutStr(" 5 second delay     ");
   911  077E  3055               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   912  077F  00F6               	movwf	LCDPutStr@str
   913  0780  3080               	movlw	128
   914  0781  00F7               	movwf	LCDPutStr@str+1
   915  0782  118A  24CF  118A   	fcall	_LCDPutStr
   916  0785                     l1268:
   917                           
   918                           ;LCD_Main.c: 270:         LCDPutCmd(0x02);
   919  0785  3002               	movlw	2
   920  0786  118A  2477  118A   	fcall	_LCDPutCmd
   921  0789                     l1270:
   922                           
   923                           ;LCD_Main.c: 271:         RC4 = 0;
   924  0789  1283               	bcf	3,5	;RP0=0, select bank0
   925  078A  1303               	bcf	3,6	;RP1=0, select bank0
   926  078B  1207               	bcf	7,4	;volatile
   927  078C                     l1272:
   928                           
   929                           ;LCD_Main.c: 272:          _delay((unsigned long)((5000)*(4194304/4000.0)));
   930  078C  301B               	movlw	27
   931  078D  1283               	bcf	3,5	;RP0=0, select bank0
   932  078E  1303               	bcf	3,6	;RP1=0, select bank0
   933  078F  00AB               	movwf	??_main+2
   934  0790  3099               	movlw	153
   935  0791  00AA               	movwf	??_main+1
   936  0792  30DB               	movlw	219
   937  0793  00A9               	movwf	??_main
   938  0794                     u797:
   939  0794  0BA9               	decfsz	??_main,f
   940  0795  2F94               	goto	u797
   941  0796  0BAA               	decfsz	??_main+1,f
   942  0797  2F94               	goto	u797
   943  0798  0BAB               	decfsz	??_main+2,f
   944  0799  2F94               	goto	u797
   945  079A  0000               	nop
   946  079B                     l1274:
   947                           
   948                           ;LCD_Main.c: 273:         RC4 = 1;
   949  079B  1283               	bcf	3,5	;RP0=0, select bank0
   950  079C  1303               	bcf	3,6	;RP1=0, select bank0
   951  079D  1607               	bsf	7,4	;volatile
   952  079E                     l1276:
   953                           
   954                           ;LCD_Main.c: 274:         LCDPutStr("                    ");
   955  079E  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   956  079F  00F6               	movwf	LCDPutStr@str
   957  07A0  3080               	movlw	128
   958  07A1  00F7               	movwf	LCDPutStr@str+1
   959  07A2  118A  24CF  118A   	fcall	_LCDPutStr
   960  07A5                     l1278:
   961                           
   962                           ;LCD_Main.c: 275:         LCDPutCmd(0x02);
   963  07A5  3002               	movlw	2
   964  07A6  118A  2477  118A   	fcall	_LCDPutCmd
   965                           
   966                           ;LCD_Main.c: 276:     }
   967  07A9  2FED               	goto	l1298
   968  07AA                     l1280:
   969  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   970  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   971  07AC  0834               	movf	main@adc+1,w
   972  07AD  3A80               	xorlw	128
   973  07AE  00FF               	movwf	btemp+1
   974  07AF  3080               	movlw	128
   975  07B0  027F               	subwf	btemp+1,w
   976  07B1  1D03               	skipz
   977  07B2  2FB5               	goto	u765
   978  07B3  300A               	movlw	10
   979  07B4  0233               	subwf	main@adc,w
   980  07B5                     u765:
   981  07B5  1803               	skipnc
   982  07B6  2FB8               	goto	u761
   983  07B7  2FB9               	goto	u760
   984  07B8                     u761:
   985  07B8  2FEA               	goto	l100
   986  07B9                     u760:
   987  07B9                     l1282:
   988                           
   989                           ;LCD_Main.c: 278:     {;LCD_Main.c: 279:         LCDGoto(0,0);
   990  07B9  01F6               	clrf	LCDGoto@ln
   991  07BA  3000               	movlw	0
   992  07BB  118A  2549  118A   	fcall	_LCDGoto
   993  07BE                     l1284:
   994                           
   995                           ;LCD_Main.c: 280:         LCDPutStr("10 second delay     ");
   996  07BE  3016               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   997  07BF  00F6               	movwf	LCDPutStr@str
   998  07C0  3080               	movlw	128
   999  07C1  00F7               	movwf	LCDPutStr@str+1
  1000  07C2  118A  24CF  118A   	fcall	_LCDPutStr
  1001  07C5                     l1286:
  1002                           
  1003                           ;LCD_Main.c: 281:         LCDPutCmd(0x02);
  1004  07C5  3002               	movlw	2
  1005  07C6  118A  2477  118A   	fcall	_LCDPutCmd
  1006  07C9                     l1288:
  1007                           
  1008                           ;LCD_Main.c: 282:         RC4 = 0;
  1009  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1010  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1011  07CB  1207               	bcf	7,4	;volatile
  1012  07CC                     l1290:
  1013                           
  1014                           ;LCD_Main.c: 283:          _delay((unsigned long)((10000)*(4194304/4000.0)));
  1015  07CC  3036               	movlw	54
  1016  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1017  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1018  07CF  00AB               	movwf	??_main+2
  1019  07D0  3032               	movlw	50
  1020  07D1  00AA               	movwf	??_main+1
  1021  07D2  30B8               	movlw	184
  1022  07D3  00A9               	movwf	??_main
  1023  07D4                     u807:
  1024  07D4  0BA9               	decfsz	??_main,f
  1025  07D5  2FD4               	goto	u807
  1026  07D6  0BAA               	decfsz	??_main+1,f
  1027  07D7  2FD4               	goto	u807
  1028  07D8  0BAB               	decfsz	??_main+2,f
  1029  07D9  2FD4               	goto	u807
  1030  07DA  2FDB               	nop2
  1031  07DB                     l1292:
  1032                           
  1033                           ;LCD_Main.c: 284:         RC4 = 1;
  1034  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1035  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1036  07DD  1607               	bsf	7,4	;volatile
  1037  07DE                     l1294:
  1038                           
  1039                           ;LCD_Main.c: 285:         LCDPutStr("                    ");
  1040  07DE  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1041  07DF  00F6               	movwf	LCDPutStr@str
  1042  07E0  3080               	movlw	128
  1043  07E1  00F7               	movwf	LCDPutStr@str+1
  1044  07E2  118A  24CF  118A   	fcall	_LCDPutStr
  1045  07E5                     l1296:
  1046                           
  1047                           ;LCD_Main.c: 286:         LCDPutCmd(0x02);
  1048  07E5  3002               	movlw	2
  1049  07E6  118A  2477  118A   	fcall	_LCDPutCmd
  1050                           
  1051                           ;LCD_Main.c: 287:     }
  1052  07E9  2FED               	goto	l1298
  1053  07EA                     l100:	
  1054                           ;LCD_Main.c: 288:     else
  1055                           
  1056                           
  1057                           ;LCD_Main.c: 289:     {;LCD_Main.c: 290:      RC4 = 1;
  1058  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  1059  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  1060  07EC  1607               	bsf	7,4	;volatile
  1061  07ED                     l1298:
  1062                           
  1063                           ;LCD_Main.c: 293:     LCDGoto(0,1);
  1064  07ED  01F6               	clrf	LCDGoto@ln
  1065  07EE  0AF6               	incf	LCDGoto@ln,f
  1066  07EF  3000               	movlw	0
  1067  07F0  118A  2549  118A   	fcall	_LCDGoto
  1068  07F3                     l1300:
  1069                           
  1070                           ;LCD_Main.c: 294:     LCDPutStr(Buffer);
  1071  07F3  302C               	movlw	(low (main@Buffer| 0))& (0+255)
  1072  07F4  00F6               	movwf	LCDPutStr@str
  1073  07F5  3000               	movlw	0
  1074  07F6  00F7               	movwf	LCDPutStr@str+1
  1075  07F7  118A  24CF  118A   	fcall	_LCDPutStr
  1076  07FA  2EA7               	goto	l93
  1077  07FB  118A  2800         	ljmp	start
  1078  07FD                     __end_of_main:
  1079                           
  1080                           	psect	text1
  1081  04AB                     __ptext1:	
  1082 ;; *************** function _itoa *****************
  1083 ;; Defined at:
  1084 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  buf             1    wreg     PTR unsigned char 
  1087 ;;		 -> main@Buffer(7), 
  1088 ;;  val             2    4[BANK0 ] int 
  1089 ;;  base            2    6[BANK0 ] int 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  1092 ;;		 -> main@Buffer(7), 
  1093 ;;  cp              1    0        PTR unsigned char 
  1094 ;;		 -> main@Buffer(7), 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      PTR unsigned char 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1104 ;;      Params:         0       4       0       0
  1105 ;;      Locals:         0       1       0       0
  1106 ;;      Temps:          1       0       0       0
  1107 ;;      Totals:         1       5       0       0
  1108 ;;Total ram usage:        6 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 2
  1111 ;; This function calls:
  1112 ;;		_utoa
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118  04AB                     _itoa:	
  1119                           ;psect for function _itoa
  1120                           
  1121                           
  1122                           ;incstack = 0
  1123                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1124                           ;itoa@buf stored from wreg
  1125  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1126  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1127  04AD  00A8               	movwf	itoa@buf
  1128  04AE                     l1202:
  1129  04AE                     l1204:
  1130  04AE  1FA5               	btfss	itoa@val+1,7
  1131  04AF  2CB1               	goto	u691
  1132  04B0  2CB2               	goto	u690
  1133  04B1                     u691:
  1134  04B1  2CC2               	goto	l1212
  1135  04B2                     u690:
  1136  04B2                     l1206:
  1137  04B2  302D               	movlw	45
  1138  04B3  00FD               	movwf	??_itoa
  1139  04B4  0828               	movf	itoa@buf,w
  1140  04B5  0084               	movwf	4
  1141  04B6  087D               	movf	??_itoa,w
  1142  04B7  1383               	bcf	3,7	;select IRP bank0
  1143  04B8  0080               	movwf	0
  1144  04B9                     l1208:
  1145  04B9  3001               	movlw	1
  1146  04BA  00FD               	movwf	??_itoa
  1147  04BB  087D               	movf	??_itoa,w
  1148  04BC  07A8               	addwf	itoa@buf,f
  1149  04BD                     l1210:
  1150  04BD  09A4               	comf	itoa@val,f
  1151  04BE  09A5               	comf	itoa@val+1,f
  1152  04BF  0AA4               	incf	itoa@val,f
  1153  04C0  1903               	skipnz
  1154  04C1  0AA5               	incf	itoa@val+1,f
  1155  04C2                     l1212:
  1156  04C2  0825               	movf	itoa@val+1,w
  1157  04C3  00F9               	movwf	utoa@val+1
  1158  04C4  0824               	movf	itoa@val,w
  1159  04C5  00F8               	movwf	utoa@val
  1160  04C6  0827               	movf	itoa@base+1,w
  1161  04C7  00FB               	movwf	utoa@base+1
  1162  04C8  0826               	movf	itoa@base,w
  1163  04C9  00FA               	movwf	utoa@base
  1164  04CA  0828               	movf	itoa@buf,w
  1165  04CB  118A  2635  118A   	fcall	_utoa
  1166  04CE                     l644:
  1167  04CE  0008               	return
  1168  04CF                     __end_of_itoa:
  1169                           
  1170                           	psect	text2
  1171  0635                     __ptext2:	
  1172 ;; *************** function _utoa *****************
  1173 ;; Defined at:
  1174 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  buf             1    wreg     PTR unsigned char 
  1177 ;;		 -> main@Buffer(7), 
  1178 ;;  val             2    8[COMMON] unsigned int 
  1179 ;;  base            2   10[COMMON] int 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1182 ;;		 -> main@Buffer(7), 
  1183 ;;  v               2    0[BANK0 ] unsigned int 
  1184 ;;  c               1    2[BANK0 ] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      PTR unsigned char 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1194 ;;      Params:         4       0       0       0
  1195 ;;      Locals:         0       4       0       0
  1196 ;;      Temps:          1       0       0       0
  1197 ;;      Totals:         5       4       0       0
  1198 ;;Total ram usage:        9 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 1
  1201 ;; This function calls:
  1202 ;;		___lwdiv
  1203 ;;		___lwmod
  1204 ;; This function is called by:
  1205 ;;		_itoa
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209  0635                     _utoa:	
  1210                           ;psect for function _utoa
  1211                           
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1215                           ;utoa@buf stored from wreg
  1216  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0637  00A3               	movwf	utoa@buf
  1219  0638                     l1112:
  1220  0638  0879               	movf	utoa@val+1,w
  1221  0639  00A1               	movwf	utoa@v+1
  1222  063A  0878               	movf	utoa@val,w
  1223  063B  00A0               	movwf	utoa@v
  1224  063C                     l1114:
  1225  063C  087B               	movf	utoa@base+1,w
  1226  063D  00F1               	movwf	___lwdiv@divisor+1
  1227  063E  087A               	movf	utoa@base,w
  1228  063F  00F0               	movwf	___lwdiv@divisor
  1229  0640  0821               	movf	utoa@v+1,w
  1230  0641  00F3               	movwf	___lwdiv@dividend+1
  1231  0642  0820               	movf	utoa@v,w
  1232  0643  00F2               	movwf	___lwdiv@dividend
  1233  0644  118A  25F1  118A   	fcall	___lwdiv
  1234  0647  0871               	movf	?___lwdiv+1,w
  1235  0648  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0649  1303               	bcf	3,6	;RP1=0, select bank0
  1237  064A  00A1               	movwf	utoa@v+1
  1238  064B  0870               	movf	?___lwdiv,w
  1239  064C  00A0               	movwf	utoa@v
  1240  064D                     l1116:
  1241  064D  3001               	movlw	1
  1242  064E  00FC               	movwf	??_utoa
  1243  064F  087C               	movf	??_utoa,w
  1244  0650  07A3               	addwf	utoa@buf,f
  1245  0651                     l1118:
  1246  0651  0820               	movf	utoa@v,w
  1247  0652  0421               	iorwf	utoa@v+1,w
  1248  0653  1D03               	btfss	3,2
  1249  0654  2E56               	goto	u601
  1250  0655  2E57               	goto	u600
  1251  0656                     u601:
  1252  0656  2E3C               	goto	l1114
  1253  0657                     u600:
  1254  0657                     l1120:
  1255  0657  0823               	movf	utoa@buf,w
  1256  0658  0084               	movwf	4
  1257  0659  1383               	bcf	3,7	;select IRP bank0
  1258  065A  0180               	clrf	0
  1259  065B                     l1122:
  1260  065B  3001               	movlw	1
  1261  065C  02A3               	subwf	utoa@buf,f
  1262  065D                     l1124:
  1263  065D  087B               	movf	utoa@base+1,w
  1264  065E  00F1               	movwf	___lwmod@divisor+1
  1265  065F  087A               	movf	utoa@base,w
  1266  0660  00F0               	movwf	___lwmod@divisor
  1267  0661  0879               	movf	utoa@val+1,w
  1268  0662  00F3               	movwf	___lwmod@dividend+1
  1269  0663  0878               	movf	utoa@val,w
  1270  0664  00F2               	movwf	___lwmod@dividend
  1271  0665  118A  2575  118A   	fcall	___lwmod
  1272  0668  0870               	movf	?___lwmod,w
  1273  0669  00FC               	movwf	??_utoa
  1274  066A  087C               	movf	??_utoa,w
  1275  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1276  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1277  066D  00A2               	movwf	utoa@c
  1278  066E                     l1126:
  1279  066E  087B               	movf	utoa@base+1,w
  1280  066F  00F1               	movwf	___lwdiv@divisor+1
  1281  0670  087A               	movf	utoa@base,w
  1282  0671  00F0               	movwf	___lwdiv@divisor
  1283  0672  0879               	movf	utoa@val+1,w
  1284  0673  00F3               	movwf	___lwdiv@dividend+1
  1285  0674  0878               	movf	utoa@val,w
  1286  0675  00F2               	movwf	___lwdiv@dividend
  1287  0676  118A  25F1  118A   	fcall	___lwdiv
  1288  0679  0871               	movf	?___lwdiv+1,w
  1289  067A  00F9               	movwf	utoa@val+1
  1290  067B  0870               	movf	?___lwdiv,w
  1291  067C  00F8               	movwf	utoa@val
  1292  067D                     l1128:
  1293  067D  300A               	movlw	10
  1294  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1295  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0680  0222               	subwf	utoa@c,w
  1297  0681  1C03               	skipc
  1298  0682  2E84               	goto	u611
  1299  0683  2E85               	goto	u610
  1300  0684                     u611:
  1301  0684  2E89               	goto	l650
  1302  0685                     u610:
  1303  0685                     l1130:
  1304  0685  3007               	movlw	7
  1305  0686  00FC               	movwf	??_utoa
  1306  0687  087C               	movf	??_utoa,w
  1307  0688  07A2               	addwf	utoa@c,f
  1308  0689                     l650:
  1309  0689  3030               	movlw	48
  1310  068A  00FC               	movwf	??_utoa
  1311  068B  087C               	movf	??_utoa,w
  1312  068C  07A2               	addwf	utoa@c,f
  1313  068D                     l1132:
  1314  068D  0822               	movf	utoa@c,w
  1315  068E  00FC               	movwf	??_utoa
  1316  068F  0823               	movf	utoa@buf,w
  1317  0690  0084               	movwf	4
  1318  0691  087C               	movf	??_utoa,w
  1319  0692  1383               	bcf	3,7	;select IRP bank0
  1320  0693  0080               	movwf	0
  1321  0694                     l1134:
  1322  0694  3001               	movlw	1
  1323  0695  02A3               	subwf	utoa@buf,f
  1324  0696                     l1136:
  1325  0696  0878               	movf	utoa@val,w
  1326  0697  0479               	iorwf	utoa@val+1,w
  1327  0698  1D03               	btfss	3,2
  1328  0699  2E9B               	goto	u621
  1329  069A  2E9C               	goto	u620
  1330  069B                     u621:
  1331  069B  2E5D               	goto	l1124
  1332  069C                     u620:
  1333  069C                     l1138:
  1334                           
  1335                           ;	Return value of _utoa is never used
  1336  069C  3001               	movlw	1
  1337  069D  00FC               	movwf	??_utoa
  1338  069E  087C               	movf	??_utoa,w
  1339  069F  07A3               	addwf	utoa@buf,f
  1340  06A0                     l652:
  1341  06A0  0008               	return
  1342  06A1                     __end_of_utoa:
  1343                           
  1344                           	psect	text3
  1345  0575                     __ptext3:	
  1346 ;; *************** function ___lwmod *****************
  1347 ;; Defined at:
  1348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  divisor         2    0[COMMON] unsigned int 
  1351 ;;  dividend        2    2[COMMON] unsigned int 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  counter         1    5[COMMON] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2    0[COMMON] unsigned int 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1363 ;;      Params:         4       0       0       0
  1364 ;;      Locals:         1       0       0       0
  1365 ;;      Temps:          1       0       0       0
  1366 ;;      Totals:         6       0       0       0
  1367 ;;Total ram usage:        6 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_utoa
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376  0575                     ___lwmod:	
  1377                           ;psect for function ___lwmod
  1378                           
  1379  0575                     l1082:	
  1380                           ;incstack = 0
  1381                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1382                           
  1383  0575  0870               	movf	___lwmod@divisor,w
  1384  0576  0471               	iorwf	___lwmod@divisor+1,w
  1385  0577  1903               	btfsc	3,2
  1386  0578  2D7A               	goto	u541
  1387  0579  2D7B               	goto	u540
  1388  057A                     u541:
  1389  057A  2DAA               	goto	l1100
  1390  057B                     u540:
  1391  057B                     l1084:
  1392  057B  01F5               	clrf	___lwmod@counter
  1393  057C  0AF5               	incf	___lwmod@counter,f
  1394  057D  2D89               	goto	l1090
  1395  057E                     l1086:
  1396  057E  3001               	movlw	1
  1397  057F                     u555:
  1398  057F  1003               	clrc
  1399  0580  0DF0               	rlf	___lwmod@divisor,f
  1400  0581  0DF1               	rlf	___lwmod@divisor+1,f
  1401  0582  3EFF               	addlw	-1
  1402  0583  1D03               	skipz
  1403  0584  2D7F               	goto	u555
  1404  0585                     l1088:
  1405  0585  3001               	movlw	1
  1406  0586  00F4               	movwf	??___lwmod
  1407  0587  0874               	movf	??___lwmod,w
  1408  0588  07F5               	addwf	___lwmod@counter,f
  1409  0589                     l1090:
  1410  0589  1FF1               	btfss	___lwmod@divisor+1,7
  1411  058A  2D8C               	goto	u561
  1412  058B  2D8D               	goto	u560
  1413  058C                     u561:
  1414  058C  2D7E               	goto	l1086
  1415  058D                     u560:
  1416  058D                     l1092:
  1417  058D  0871               	movf	___lwmod@divisor+1,w
  1418  058E  0273               	subwf	___lwmod@dividend+1,w
  1419  058F  1D03               	skipz
  1420  0590  2D93               	goto	u575
  1421  0591  0870               	movf	___lwmod@divisor,w
  1422  0592  0272               	subwf	___lwmod@dividend,w
  1423  0593                     u575:
  1424  0593  1C03               	skipc
  1425  0594  2D96               	goto	u571
  1426  0595  2D97               	goto	u570
  1427  0596                     u571:
  1428  0596  2D9D               	goto	l1096
  1429  0597                     u570:
  1430  0597                     l1094:
  1431  0597  0870               	movf	___lwmod@divisor,w
  1432  0598  02F2               	subwf	___lwmod@dividend,f
  1433  0599  0871               	movf	___lwmod@divisor+1,w
  1434  059A  1C03               	skipc
  1435  059B  03F3               	decf	___lwmod@dividend+1,f
  1436  059C  02F3               	subwf	___lwmod@dividend+1,f
  1437  059D                     l1096:
  1438  059D  3001               	movlw	1
  1439  059E                     u585:
  1440  059E  1003               	clrc
  1441  059F  0CF1               	rrf	___lwmod@divisor+1,f
  1442  05A0  0CF0               	rrf	___lwmod@divisor,f
  1443  05A1  3EFF               	addlw	-1
  1444  05A2  1D03               	skipz
  1445  05A3  2D9E               	goto	u585
  1446  05A4                     l1098:
  1447  05A4  3001               	movlw	1
  1448  05A5  02F5               	subwf	___lwmod@counter,f
  1449  05A6  1D03               	btfss	3,2
  1450  05A7  2DA9               	goto	u591
  1451  05A8  2DAA               	goto	u590
  1452  05A9                     u591:
  1453  05A9  2D8D               	goto	l1092
  1454  05AA                     u590:
  1455  05AA                     l1100:
  1456  05AA  0873               	movf	___lwmod@dividend+1,w
  1457  05AB  00F1               	movwf	?___lwmod+1
  1458  05AC  0872               	movf	___lwmod@dividend,w
  1459  05AD  00F0               	movwf	?___lwmod
  1460  05AE                     l472:
  1461  05AE  0008               	return
  1462  05AF                     __end_of___lwmod:
  1463                           
  1464                           	psect	text4
  1465  05F1                     __ptext4:	
  1466 ;; *************** function ___lwdiv *****************
  1467 ;; Defined at:
  1468 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  divisor         2    0[COMMON] unsigned int 
  1471 ;;  dividend        2    2[COMMON] unsigned int 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  quotient        2    5[COMMON] unsigned int 
  1474 ;;  counter         1    7[COMMON] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2    0[COMMON] unsigned int 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1484 ;;      Params:         4       0       0       0
  1485 ;;      Locals:         3       0       0       0
  1486 ;;      Temps:          1       0       0       0
  1487 ;;      Totals:         8       0       0       0
  1488 ;;Total ram usage:        8 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_utoa
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497  05F1                     ___lwdiv:	
  1498                           ;psect for function ___lwdiv
  1499                           
  1500  05F1                     l1056:	
  1501                           ;incstack = 0
  1502                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1503                           
  1504  05F1  01F5               	clrf	___lwdiv@quotient
  1505  05F2  01F6               	clrf	___lwdiv@quotient+1
  1506  05F3                     l1058:
  1507  05F3  0870               	movf	___lwdiv@divisor,w
  1508  05F4  0471               	iorwf	___lwdiv@divisor+1,w
  1509  05F5  1903               	btfsc	3,2
  1510  05F6  2DF8               	goto	u471
  1511  05F7  2DF9               	goto	u470
  1512  05F8                     u471:
  1513  05F8  2E30               	goto	l1078
  1514  05F9                     u470:
  1515  05F9                     l1060:
  1516  05F9  01F7               	clrf	___lwdiv@counter
  1517  05FA  0AF7               	incf	___lwdiv@counter,f
  1518  05FB  2E07               	goto	l1066
  1519  05FC                     l1062:
  1520  05FC  3001               	movlw	1
  1521  05FD                     u485:
  1522  05FD  1003               	clrc
  1523  05FE  0DF0               	rlf	___lwdiv@divisor,f
  1524  05FF  0DF1               	rlf	___lwdiv@divisor+1,f
  1525  0600  3EFF               	addlw	-1
  1526  0601  1D03               	skipz
  1527  0602  2DFD               	goto	u485
  1528  0603                     l1064:
  1529  0603  3001               	movlw	1
  1530  0604  00F4               	movwf	??___lwdiv
  1531  0605  0874               	movf	??___lwdiv,w
  1532  0606  07F7               	addwf	___lwdiv@counter,f
  1533  0607                     l1066:
  1534  0607  1FF1               	btfss	___lwdiv@divisor+1,7
  1535  0608  2E0A               	goto	u491
  1536  0609  2E0B               	goto	u490
  1537  060A                     u491:
  1538  060A  2DFC               	goto	l1062
  1539  060B                     u490:
  1540  060B                     l1068:
  1541  060B  3001               	movlw	1
  1542  060C                     u505:
  1543  060C  1003               	clrc
  1544  060D  0DF5               	rlf	___lwdiv@quotient,f
  1545  060E  0DF6               	rlf	___lwdiv@quotient+1,f
  1546  060F  3EFF               	addlw	-1
  1547  0610  1D03               	skipz
  1548  0611  2E0C               	goto	u505
  1549  0612  0871               	movf	___lwdiv@divisor+1,w
  1550  0613  0273               	subwf	___lwdiv@dividend+1,w
  1551  0614  1D03               	skipz
  1552  0615  2E18               	goto	u515
  1553  0616  0870               	movf	___lwdiv@divisor,w
  1554  0617  0272               	subwf	___lwdiv@dividend,w
  1555  0618                     u515:
  1556  0618  1C03               	skipc
  1557  0619  2E1B               	goto	u511
  1558  061A  2E1C               	goto	u510
  1559  061B                     u511:
  1560  061B  2E23               	goto	l1074
  1561  061C                     u510:
  1562  061C                     l1070:
  1563  061C  0870               	movf	___lwdiv@divisor,w
  1564  061D  02F2               	subwf	___lwdiv@dividend,f
  1565  061E  0871               	movf	___lwdiv@divisor+1,w
  1566  061F  1C03               	skipc
  1567  0620  03F3               	decf	___lwdiv@dividend+1,f
  1568  0621  02F3               	subwf	___lwdiv@dividend+1,f
  1569  0622                     l1072:
  1570  0622  1475               	bsf	___lwdiv@quotient,0
  1571  0623                     l1074:
  1572  0623  3001               	movlw	1
  1573  0624                     u525:
  1574  0624  1003               	clrc
  1575  0625  0CF1               	rrf	___lwdiv@divisor+1,f
  1576  0626  0CF0               	rrf	___lwdiv@divisor,f
  1577  0627  3EFF               	addlw	-1
  1578  0628  1D03               	skipz
  1579  0629  2E24               	goto	u525
  1580  062A                     l1076:
  1581  062A  3001               	movlw	1
  1582  062B  02F7               	subwf	___lwdiv@counter,f
  1583  062C  1D03               	btfss	3,2
  1584  062D  2E2F               	goto	u531
  1585  062E  2E30               	goto	u530
  1586  062F                     u531:
  1587  062F  2E0B               	goto	l1068
  1588  0630                     u530:
  1589  0630                     l1078:
  1590  0630  0876               	movf	___lwdiv@quotient+1,w
  1591  0631  00F1               	movwf	?___lwdiv+1
  1592  0632  0875               	movf	___lwdiv@quotient,w
  1593  0633  00F0               	movwf	?___lwdiv
  1594  0634                     l462:
  1595  0634  0008               	return
  1596  0635                     __end_of___lwdiv:
  1597                           
  1598                           	psect	text5
  1599  051E                     __ptext5:	
  1600 ;; *************** function _LCD_Initialize *****************
  1601 ;; Defined at:
  1602 ;;		line 61 in file "LCD_Main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1616 ;;      Params:         0       0       0       0
  1617 ;;      Locals:         0       0       0       0
  1618 ;;      Temps:          2       0       0       0
  1619 ;;      Totals:         2       0       0       0
  1620 ;;Total ram usage:        2 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 3
  1623 ;; This function calls:
  1624 ;;		_LCDPutCmd
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630  051E                     _LCD_Initialize:	
  1631                           ;psect for function _LCD_Initialize
  1632                           
  1633  051E                     l1142:	
  1634                           ;incstack = 0
  1635                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1636                           
  1637                           
  1638                           ;LCD_Main.c: 64: PORTB = 0;
  1639  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1640  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0520  0186               	clrf	6	;volatile
  1642  0521                     l1144:
  1643                           
  1644                           ;LCD_Main.c: 65: PORTC = 0b00010000;
  1645  0521  3010               	movlw	16
  1646  0522  0087               	movwf	7	;volatile
  1647  0523                     l1146:
  1648                           
  1649                           ;LCD_Main.c: 66: TRISB = 0x00;
  1650  0523  1683               	bsf	3,5	;RP0=1, select bank1
  1651  0524  1303               	bcf	3,6	;RP1=0, select bank1
  1652  0525  0186               	clrf	6	;volatile
  1653  0526                     l1148:
  1654                           
  1655                           ;LCD_Main.c: 67: TRISC = 0x00;
  1656  0526  0187               	clrf	7	;volatile
  1657  0527                     l1150:
  1658                           
  1659                           ;LCD_Main.c: 70: _delay((unsigned long)((15)*(4194304/4000.0)));
  1660  0527  3015               	movlw	21
  1661  0528  00F7               	movwf	??_LCD_Initialize+1
  1662  0529  306B               	movlw	107
  1663  052A  00F6               	movwf	??_LCD_Initialize
  1664  052B                     u817:
  1665  052B  0BF6               	decfsz	??_LCD_Initialize,f
  1666  052C  2D2B               	goto	u817
  1667  052D  0BF7               	decfsz	??_LCD_Initialize+1,f
  1668  052E  2D2B               	goto	u817
  1669  052F  2D30               	nop2
  1670  0530                     l1152:
  1671                           
  1672                           ;LCD_Main.c: 71: LCDPutCmd(0x02);
  1673  0530  3002               	movlw	2
  1674  0531  118A  2477  118A   	fcall	_LCDPutCmd
  1675  0534                     l1154:
  1676                           
  1677                           ;LCD_Main.c: 73: LCDPutCmd(0x28);
  1678  0534  3028               	movlw	40
  1679  0535  118A  2477  118A   	fcall	_LCDPutCmd
  1680  0538                     l1156:
  1681                           
  1682                           ;LCD_Main.c: 75: LCDPutCmd(0x0C);
  1683  0538  300C               	movlw	12
  1684  0539  118A  2477  118A   	fcall	_LCDPutCmd
  1685  053C                     l1158:
  1686                           
  1687                           ;LCD_Main.c: 77: LCDPutCmd(0x06);
  1688  053C  3006               	movlw	6
  1689  053D  118A  2477  118A   	fcall	_LCDPutCmd
  1690  0540                     l1160:
  1691                           
  1692                           ;LCD_Main.c: 79: LCDPutCmd(0x01);
  1693  0540  3001               	movlw	1
  1694  0541  118A  2477  118A   	fcall	_LCDPutCmd
  1695  0544                     l1162:
  1696                           
  1697                           ;LCD_Main.c: 81: LCDPutCmd(0x80);
  1698  0544  3080               	movlw	128
  1699  0545  118A  2477  118A   	fcall	_LCDPutCmd
  1700  0548                     l43:
  1701  0548  0008               	return
  1702  0549                     __end_of_LCD_Initialize:
  1703                           
  1704                           	psect	text6
  1705  04CF                     __ptext6:	
  1706 ;; *************** function _LCDPutStr *****************
  1707 ;; Defined at:
  1708 ;;		line 170 in file "LCD_Main.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  str             2    6[COMMON] PTR const unsigned char 
  1711 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
  1712 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  1713 ;;		 -> main@Buffer(7), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  i               1    9[COMMON] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1725 ;;      Params:         2       0       0       0
  1726 ;;      Locals:         1       0       0       0
  1727 ;;      Temps:          1       0       0       0
  1728 ;;      Totals:         4       0       0       0
  1729 ;;Total ram usage:        4 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 3
  1732 ;; This function calls:
  1733 ;;		_LCDPutChar
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739  04CF                     _LCDPutStr:	
  1740                           ;psect for function _LCDPutStr
  1741                           
  1742  04CF                     l1164:	
  1743                           ;incstack = 0
  1744                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1745                           
  1746                           
  1747                           ;LCD_Main.c: 170: void LCDPutStr(const char *str);LCD_Main.c: 171: {;LCD_Main.c: 172: ch
      +                          ar i=0;
  1748  04CF  01F9               	clrf	LCDPutStr@i
  1749                           
  1750                           ;LCD_Main.c: 175: while (str[i])
  1751  04D0  2CE2               	goto	l1170
  1752  04D1                     l1166:
  1753                           
  1754                           ;LCD_Main.c: 176: {;LCD_Main.c: 178: LCDPutChar(str[i++]);
  1755  04D1  0879               	movf	LCDPutStr@i,w
  1756  04D2  0776               	addwf	LCDPutStr@str,w
  1757  04D3  0084               	movwf	4
  1758  04D4  0877               	movf	LCDPutStr@str+1,w
  1759  04D5  1803               	skipnc
  1760  04D6  0A77               	incf	LCDPutStr@str+1,w
  1761  04D7  00FF               	movwf	btemp+1
  1762  04D8  118A  2002  118A   	fcall	stringtab
  1763  04DB  118A  2487  118A   	fcall	_LCDPutChar
  1764  04DE                     l1168:
  1765  04DE  3001               	movlw	1
  1766  04DF  00F8               	movwf	??_LCDPutStr
  1767  04E0  0878               	movf	??_LCDPutStr,w
  1768  04E1  07F9               	addwf	LCDPutStr@i,f
  1769  04E2                     l1170:
  1770                           
  1771                           ;LCD_Main.c: 175: while (str[i])
  1772  04E2  0879               	movf	LCDPutStr@i,w
  1773  04E3  0776               	addwf	LCDPutStr@str,w
  1774  04E4  0084               	movwf	4
  1775  04E5  0877               	movf	LCDPutStr@str+1,w
  1776  04E6  1803               	skipnc
  1777  04E7  0A77               	incf	LCDPutStr@str+1,w
  1778  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1779  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1780  04EA  00FF               	movwf	btemp+1
  1781  04EB  118A  2002  118A   	fcall	stringtab
  1782  04EE  3A00               	xorlw	0
  1783  04EF  1D03               	skipz
  1784  04F0  2CF2               	goto	u631
  1785  04F1  2CF3               	goto	u630
  1786  04F2                     u631:
  1787  04F2  2CD1               	goto	l1166
  1788  04F3                     u630:
  1789  04F3                     l69:
  1790  04F3  0008               	return
  1791  04F4                     __end_of_LCDPutStr:
  1792                           
  1793                           	psect	text7
  1794  0487                     __ptext7:	
  1795 ;; *************** function _LCDPutChar *****************
  1796 ;; Defined at:
  1797 ;;		line 144 in file "LCD_Main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  ch              1    wreg     unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  ch              1    5[COMMON] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0, pclath, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1811 ;;      Params:         0       0       0       0
  1812 ;;      Locals:         1       0       0       0
  1813 ;;      Temps:          2       0       0       0
  1814 ;;      Totals:         3       0       0       0
  1815 ;;Total ram usage:        3 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; Hardware stack levels required when called: 2
  1818 ;; This function calls:
  1819 ;;		_LCDWriteNibble
  1820 ;; This function is called by:
  1821 ;;		_LCDPutStr
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825  0487                     _LCDPutChar:	
  1826                           ;psect for function _LCDPutChar
  1827                           
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  1831                           ;LCDPutChar@ch stored from wreg
  1832  0487  00F5               	movwf	LCDPutChar@ch
  1833  0488                     l1108:
  1834                           
  1835                           ;LCD_Main.c: 144: void LCDPutChar(char ch);LCD_Main.c: 145: {;LCD_Main.c: 146: _delay((u
      +                          nsigned long)((5)*(4194304/4000.0)));
  1836  0488  3007               	movlw	7
  1837  0489  00F4               	movwf	??_LCDPutChar+1
  1838  048A  30CD               	movlw	205
  1839  048B  00F3               	movwf	??_LCDPutChar
  1840  048C                     u827:
  1841  048C  0BF3               	decfsz	??_LCDPutChar,f
  1842  048D  2C8C               	goto	u827
  1843  048E  0BF4               	decfsz	??_LCDPutChar+1,f
  1844  048F  2C8C               	goto	u827
  1845  0490  2C91               	nop2
  1846  0491                     l1110:
  1847                           
  1848                           ;LCD_Main.c: 149: LCDWriteNibble(ch,1);
  1849  0491  01F1               	clrf	LCDWriteNibble@rs
  1850  0492  0AF1               	incf	LCDWriteNibble@rs,f
  1851  0493  0875               	movf	LCDPutChar@ch,w
  1852  0494  118A  25AF  118A   	fcall	_LCDWriteNibble
  1853  0497                     l60:
  1854  0497  0008               	return
  1855  0498                     __end_of_LCDPutChar:
  1856                           
  1857                           	psect	text8
  1858  0549                     __ptext8:	
  1859 ;; *************** function _LCDGoto *****************
  1860 ;; Defined at:
  1861 ;;		line 183 in file "LCD_Main.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  pos             1    wreg     unsigned char 
  1864 ;;  ln              1    6[COMMON] unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  pos             1   11[COMMON] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1876 ;;      Params:         1       0       0       0
  1877 ;;      Locals:         3       0       0       0
  1878 ;;      Temps:          2       0       0       0
  1879 ;;      Totals:         6       0       0       0
  1880 ;;Total ram usage:        6 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 3
  1883 ;; This function calls:
  1884 ;;		_LCDPutCmd
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890  0549                     _LCDGoto:	
  1891                           ;psect for function _LCDGoto
  1892                           
  1893                           
  1894                           ;incstack = 0
  1895                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  1896                           ;LCDGoto@pos stored from wreg
  1897  0549  00FB               	movwf	LCDGoto@pos
  1898  054A                     l1172:
  1899                           
  1900                           ;LCD_Main.c: 183: void LCDGoto(char pos,char ln);LCD_Main.c: 184: {;LCD_Main.c: 186: if 
      +                          ((ln > (2 -1)) || (pos > (16 -1)))
  1901  054A  3002               	movlw	2
  1902  054B  0276               	subwf	LCDGoto@ln,w
  1903  054C  1803               	skipnc
  1904  054D  2D4F               	goto	u641
  1905  054E  2D50               	goto	u640
  1906  054F                     u641:
  1907  054F  2D74               	goto	l75
  1908  0550                     u640:
  1909  0550                     l1174:
  1910  0550  3010               	movlw	16
  1911  0551  027B               	subwf	LCDGoto@pos,w
  1912  0552  1C03               	skipc
  1913  0553  2D55               	goto	u651
  1914  0554  2D56               	goto	u650
  1915  0555                     u651:
  1916  0555  2D57               	goto	l1176
  1917  0556                     u650:
  1918  0556  2D74               	goto	l75
  1919  0557                     l1176:
  1920                           
  1921                           ;LCD_Main.c: 193: LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  1922  0557  0376               	decf	LCDGoto@ln,w
  1923  0558  1903               	btfsc	3,2
  1924  0559  2D5B               	goto	u661
  1925  055A  2D5C               	goto	u660
  1926  055B                     u661:
  1927  055B  2D62               	goto	l1180
  1928  055C                     u660:
  1929  055C                     l1178:
  1930  055C  3080               	movlw	128
  1931  055D  047B               	iorwf	LCDGoto@pos,w
  1932  055E  00F9               	movwf	_LCDGoto$131
  1933  055F  3000               	movlw	0
  1934  0560  00FA               	movwf	_LCDGoto$131+1
  1935  0561  2D67               	goto	l1182
  1936  0562                     l1180:
  1937  0562  30C0               	movlw	192
  1938  0563  047B               	iorwf	LCDGoto@pos,w
  1939  0564  00F9               	movwf	_LCDGoto$131
  1940  0565  3000               	movlw	0
  1941  0566  00FA               	movwf	_LCDGoto$131+1
  1942  0567                     l1182:
  1943  0567  0879               	movf	_LCDGoto$131,w
  1944  0568  118A  2477  118A   	fcall	_LCDPutCmd
  1945  056B                     l1184:
  1946                           
  1947                           ;LCD_Main.c: 196: _delay((unsigned long)((5)*(4194304/4000.0)));
  1948  056B  3007               	movlw	7
  1949  056C  00F8               	movwf	??_LCDGoto+1
  1950  056D  30CD               	movlw	205
  1951  056E  00F7               	movwf	??_LCDGoto
  1952  056F                     u837:
  1953  056F  0BF7               	decfsz	??_LCDGoto,f
  1954  0570  2D6F               	goto	u837
  1955  0571  0BF8               	decfsz	??_LCDGoto+1,f
  1956  0572  2D6F               	goto	u837
  1957  0573  2D74               	nop2
  1958  0574                     l75:
  1959  0574  0008               	return
  1960  0575                     __end_of_LCDGoto:
  1961                           
  1962                           	psect	text9
  1963  0477                     __ptext9:	
  1964 ;; *************** function _LCDPutCmd *****************
  1965 ;; Defined at:
  1966 ;;		line 155 in file "LCD_Main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  ch              1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  ch              1    5[COMMON] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1980 ;;      Params:         0       0       0       0
  1981 ;;      Locals:         1       0       0       0
  1982 ;;      Temps:          2       0       0       0
  1983 ;;      Totals:         3       0       0       0
  1984 ;;Total ram usage:        3 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 2
  1987 ;; This function calls:
  1988 ;;		_LCDWriteNibble
  1989 ;; This function is called by:
  1990 ;;		_LCD_Initialize
  1991 ;;		_LCDGoto
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996  0477                     _LCDPutCmd:	
  1997                           ;psect for function _LCDPutCmd
  1998                           
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  2002                           ;LCDPutCmd@ch stored from wreg
  2003  0477  00F5               	movwf	LCDPutCmd@ch
  2004  0478                     l1104:
  2005                           
  2006                           ;LCD_Main.c: 155: void LCDPutCmd(char ch);LCD_Main.c: 156: {;LCD_Main.c: 157: _delay((un
      +                          signed long)((5)*(4194304/4000.0)));
  2007  0478  3007               	movlw	7
  2008  0479  00F4               	movwf	??_LCDPutCmd+1
  2009  047A  30CD               	movlw	205
  2010  047B  00F3               	movwf	??_LCDPutCmd
  2011  047C                     u847:
  2012  047C  0BF3               	decfsz	??_LCDPutCmd,f
  2013  047D  2C7C               	goto	u847
  2014  047E  0BF4               	decfsz	??_LCDPutCmd+1,f
  2015  047F  2C7C               	goto	u847
  2016  0480  2C81               	nop2
  2017  0481                     l1106:
  2018                           
  2019                           ;LCD_Main.c: 160: LCDWriteNibble(ch,0);
  2020  0481  01F1               	clrf	LCDWriteNibble@rs
  2021  0482  0875               	movf	LCDPutCmd@ch,w
  2022  0483  118A  25AF  118A   	fcall	_LCDWriteNibble
  2023  0486                     l63:
  2024  0486  0008               	return
  2025  0487                     __end_of_LCDPutCmd:
  2026                           
  2027                           	psect	text10
  2028  05AF                     __ptext10:	
  2029 ;; *************** function _LCDWriteNibble *****************
  2030 ;; Defined at:
  2031 ;;		line 94 in file "LCD_Main.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  ch              1    wreg     unsigned char 
  2034 ;;  rs              1    1[COMMON] unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  ch              1    2[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2046 ;;      Params:         1       0       0       0
  2047 ;;      Locals:         1       0       0       0
  2048 ;;      Temps:          0       0       0       0
  2049 ;;      Totals:         2       0       0       0
  2050 ;;Total ram usage:        2 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 1
  2053 ;; This function calls:
  2054 ;;		_ToggleEnable
  2055 ;; This function is called by:
  2056 ;;		_LCDPutChar
  2057 ;;		_LCDPutCmd
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061  05AF                     _LCDWriteNibble:	
  2062                           ;psect for function _LCDWriteNibble
  2063                           
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0+pclath+cstack]
  2067                           ;LCDWriteNibble@ch stored from wreg
  2068  05AF  00F2               	movwf	LCDWriteNibble@ch
  2069  05B0                     l1012:
  2070                           
  2071                           ;LCD_Main.c: 94: void LCDWriteNibble(char ch, char rs);LCD_Main.c: 95: {;LCD_Main.c: 97:
      +                           PORTBbits.RB6 = rs;
  2072  05B0  0C71               	rrf	LCDWriteNibble@rs,w
  2073  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2074  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2075  05B3  1C03               	skipc
  2076  05B4  1306               	bcf	6,6	;volatile
  2077  05B5  1803               	skipnc
  2078  05B6  1706               	bsf	6,6	;volatile
  2079  05B7                     l1014:
  2080                           
  2081                           ;LCD_Main.c: 100: PORTBbits.RB7 = 0;
  2082  05B7  1386               	bcf	6,7	;volatile
  2083  05B8                     l1016:
  2084                           
  2085                           ;LCD_Main.c: 104: RB0 = 0x00;
  2086  05B8  1006               	bcf	6,0	;volatile
  2087  05B9                     l1018:
  2088                           
  2089                           ;LCD_Main.c: 105: RB1 = 0x00;
  2090  05B9  1086               	bcf	6,1	;volatile
  2091  05BA                     l1020:
  2092                           
  2093                           ;LCD_Main.c: 106: RB2 = 0x00;
  2094  05BA  1106               	bcf	6,2	;volatile
  2095  05BB                     l1022:
  2096                           
  2097                           ;LCD_Main.c: 107: RB3 = 0x00;
  2098  05BB  1186               	bcf	6,3	;volatile
  2099  05BC                     l1024:
  2100                           
  2101                           ;LCD_Main.c: 109:     if ((ch&0x10) == 0x10)
  2102  05BC  1E72               	btfss	LCDWriteNibble@ch,4
  2103  05BD  2DBF               	goto	u391
  2104  05BE  2DC0               	goto	u390
  2105  05BF                     u391:
  2106  05BF  2DC1               	goto	l49
  2107  05C0                     u390:
  2108  05C0                     l1026:
  2109                           
  2110                           ;LCD_Main.c: 110:             RB0 = 1;
  2111  05C0  1406               	bsf	6,0	;volatile
  2112  05C1                     l49:
  2113                           
  2114                           ;LCD_Main.c: 111:     if ((ch&0x20) == 0x20)
  2115  05C1  1EF2               	btfss	LCDWriteNibble@ch,5
  2116  05C2  2DC4               	goto	u401
  2117  05C3  2DC5               	goto	u400
  2118  05C4                     u401:
  2119  05C4  2DC6               	goto	l50
  2120  05C5                     u400:
  2121  05C5                     l1028:
  2122                           
  2123                           ;LCD_Main.c: 112:             RB1 = 1;
  2124  05C5  1486               	bsf	6,1	;volatile
  2125  05C6                     l50:
  2126                           
  2127                           ;LCD_Main.c: 113:     if ((ch&0x40) == 0x40)
  2128  05C6  1F72               	btfss	LCDWriteNibble@ch,6
  2129  05C7  2DC9               	goto	u411
  2130  05C8  2DCA               	goto	u410
  2131  05C9                     u411:
  2132  05C9  2DCB               	goto	l51
  2133  05CA                     u410:
  2134  05CA                     l1030:
  2135                           
  2136                           ;LCD_Main.c: 114:             RB2 = 1;
  2137  05CA  1506               	bsf	6,2	;volatile
  2138  05CB                     l51:
  2139                           
  2140                           ;LCD_Main.c: 115:     if ((ch&0x80) == 0x80)
  2141  05CB  1FF2               	btfss	LCDWriteNibble@ch,7
  2142  05CC  2DCE               	goto	u421
  2143  05CD  2DCF               	goto	u420
  2144  05CE                     u421:
  2145  05CE  2DD0               	goto	l1034
  2146  05CF                     u420:
  2147  05CF                     l1032:
  2148                           
  2149                           ;LCD_Main.c: 116:             RB3 = 1;
  2150  05CF  1586               	bsf	6,3	;volatile
  2151  05D0                     l1034:
  2152                           
  2153                           ;LCD_Main.c: 118: ToggleEnable();
  2154  05D0  118A  2498  118A   	fcall	_ToggleEnable
  2155  05D3                     l1036:
  2156                           
  2157                           ;LCD_Main.c: 122: RB0 = 0x00;
  2158  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2159  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2160  05D5  1006               	bcf	6,0	;volatile
  2161  05D6                     l1038:
  2162                           
  2163                           ;LCD_Main.c: 123: RB1 = 0x00;
  2164  05D6  1086               	bcf	6,1	;volatile
  2165  05D7                     l1040:
  2166                           
  2167                           ;LCD_Main.c: 124: RB2 = 0x00;
  2168  05D7  1106               	bcf	6,2	;volatile
  2169  05D8                     l1042:
  2170                           
  2171                           ;LCD_Main.c: 125: RB3 = 0x00;
  2172  05D8  1186               	bcf	6,3	;volatile
  2173  05D9                     l1044:
  2174                           
  2175                           ;LCD_Main.c: 127:     if ((ch&0x01) == 0x01)
  2176  05D9  1C72               	btfss	LCDWriteNibble@ch,0
  2177  05DA  2DDC               	goto	u431
  2178  05DB  2DDD               	goto	u430
  2179  05DC                     u431:
  2180  05DC  2DDE               	goto	l53
  2181  05DD                     u430:
  2182  05DD                     l1046:
  2183                           
  2184                           ;LCD_Main.c: 128:             RB0 = 1;
  2185  05DD  1406               	bsf	6,0	;volatile
  2186  05DE                     l53:
  2187                           
  2188                           ;LCD_Main.c: 129:     if ((ch&0x02) == 0x02)
  2189  05DE  1CF2               	btfss	LCDWriteNibble@ch,1
  2190  05DF  2DE1               	goto	u441
  2191  05E0  2DE2               	goto	u440
  2192  05E1                     u441:
  2193  05E1  2DE3               	goto	l54
  2194  05E2                     u440:
  2195  05E2                     l1048:
  2196                           
  2197                           ;LCD_Main.c: 130:             RB1 = 1;
  2198  05E2  1486               	bsf	6,1	;volatile
  2199  05E3                     l54:
  2200                           
  2201                           ;LCD_Main.c: 131:     if ((ch&0x04) == 0x04)
  2202  05E3  1D72               	btfss	LCDWriteNibble@ch,2
  2203  05E4  2DE6               	goto	u451
  2204  05E5  2DE7               	goto	u450
  2205  05E6                     u451:
  2206  05E6  2DE8               	goto	l55
  2207  05E7                     u450:
  2208  05E7                     l1050:
  2209                           
  2210                           ;LCD_Main.c: 132:             RB2 = 1;
  2211  05E7  1506               	bsf	6,2	;volatile
  2212  05E8                     l55:
  2213                           
  2214                           ;LCD_Main.c: 133:     if ((ch&0x08) == 0x08)
  2215  05E8  1DF2               	btfss	LCDWriteNibble@ch,3
  2216  05E9  2DEB               	goto	u461
  2217  05EA  2DEC               	goto	u460
  2218  05EB                     u461:
  2219  05EB  2DED               	goto	l1054
  2220  05EC                     u460:
  2221  05EC                     l1052:
  2222                           
  2223                           ;LCD_Main.c: 134:             RB3 = 1;
  2224  05EC  1586               	bsf	6,3	;volatile
  2225  05ED                     l1054:
  2226                           
  2227                           ;LCD_Main.c: 136:  ToggleEnable();
  2228  05ED  118A  2498  118A   	fcall	_ToggleEnable
  2229  05F0                     l57:
  2230  05F0  0008               	return
  2231  05F1                     __end_of_LCDWriteNibble:
  2232                           
  2233                           	psect	text11
  2234  0498                     __ptext11:	
  2235 ;; *************** function _ToggleEnable *****************
  2236 ;; Defined at:
  2237 ;;		line 84 in file "LCD_Main.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2251 ;;      Params:         0       0       0       0
  2252 ;;      Locals:         0       0       0       0
  2253 ;;      Temps:          1       0       0       0
  2254 ;;      Totals:         1       0       0       0
  2255 ;;Total ram usage:        1 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_LCDWriteNibble
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264  0498                     _ToggleEnable:	
  2265                           ;psect for function _ToggleEnable
  2266                           
  2267  0498                     l1006:	
  2268                           ;incstack = 0
  2269                           ; Regs used in _ToggleEnable: [wreg]
  2270                           
  2271                           
  2272                           ;LCD_Main.c: 86: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2273  0498  3003               	movlw	3
  2274  0499  00F0               	movwf	??_ToggleEnable
  2275  049A                     u857:
  2276  049A  0BF0               	decfsz	??_ToggleEnable,f
  2277  049B  2C9A               	goto	u857
  2278  049C                     l1008:
  2279                           
  2280                           ;LCD_Main.c: 87: PORTCbits.RC5 = 1;
  2281  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2282  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2283  049E  1687               	bsf	7,5	;volatile
  2284                           
  2285                           ;LCD_Main.c: 88: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2286  049F  3003               	movlw	3
  2287  04A0  00F0               	movwf	??_ToggleEnable
  2288  04A1                     u867:
  2289  04A1  0BF0               	decfsz	??_ToggleEnable,f
  2290  04A2  2CA1               	goto	u867
  2291  04A3                     l1010:
  2292                           
  2293                           ;LCD_Main.c: 89: PORTCbits.RC5 = 0;
  2294  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2295  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2296  04A5  1287               	bcf	7,5	;volatile
  2297                           
  2298                           ;LCD_Main.c: 90: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2299  04A6  3003               	movlw	3
  2300  04A7  00F0               	movwf	??_ToggleEnable
  2301  04A8                     u877:
  2302  04A8  0BF0               	decfsz	??_ToggleEnable,f
  2303  04A9  2CA8               	goto	u877
  2304  04AA                     l46:
  2305  04AA  0008               	return
  2306  04AB                     __end_of_ToggleEnable:
  2307                           
  2308                           	psect	text12
  2309  04F4                     __ptext12:	
  2310 ;; *************** function _ADC_Read *****************
  2311 ;; Defined at:
  2312 ;;		line 210 in file "LCD_Main.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  channel         1    wreg     unsigned char 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  channel         1    4[COMMON] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  2    0[COMMON] unsigned int 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2326 ;;      Params:         2       0       0       0
  2327 ;;      Locals:         1       0       0       0
  2328 ;;      Temps:          2       0       0       0
  2329 ;;      Totals:         5       0       0       0
  2330 ;;Total ram usage:        5 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339  04F4                     _ADC_Read:	
  2340                           ;psect for function _ADC_Read
  2341                           
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2345                           ;ADC_Read@channel stored from wreg
  2346  04F4  00F4               	movwf	ADC_Read@channel
  2347  04F5                     l1192:
  2348                           
  2349                           ;LCD_Main.c: 210: unsigned int ADC_Read(unsigned char channel);LCD_Main.c: 212: {;LCD_Ma
      +                          in.c: 214:   ADCON0 &= 0x11000101;
  2350  04F5  3001               	movlw	1
  2351  04F6  00F2               	movwf	??_ADC_Read
  2352  04F7  0872               	movf	??_ADC_Read,w
  2353  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2354  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2355  04FA  059F               	andwf	31,f	;volatile
  2356                           
  2357                           ;LCD_Main.c: 216:   ADCON0 |= channel<<3;
  2358  04FB  0874               	movf	ADC_Read@channel,w	;volatile
  2359  04FC  00F2               	movwf	??_ADC_Read
  2360  04FD  3002               	movlw	2
  2361  04FE                     u675:
  2362  04FE  1003               	clrc
  2363  04FF  0DF2               	rlf	??_ADC_Read,f
  2364  0500  3EFF               	addlw	-1
  2365  0501  1D03               	skipz
  2366  0502  2CFE               	goto	u675
  2367  0503  1003               	clrc
  2368  0504  0D72               	rlf	??_ADC_Read,w
  2369  0505  00F3               	movwf	??_ADC_Read+1
  2370  0506  0873               	movf	??_ADC_Read+1,w
  2371  0507  049F               	iorwf	31,f	;volatile
  2372  0508                     l1194:
  2373                           
  2374                           ;LCD_Main.c: 218:   _delay((unsigned long)((2)*(4194304/4000.0)));
  2375  0508  3003               	movlw	3
  2376  0509  00F3               	movwf	??_ADC_Read+1
  2377  050A  30B8               	movlw	184
  2378  050B  00F2               	movwf	??_ADC_Read
  2379  050C                     u887:
  2380  050C  0BF2               	decfsz	??_ADC_Read,f
  2381  050D  2D0C               	goto	u887
  2382  050E  0BF3               	decfsz	??_ADC_Read+1,f
  2383  050F  2D0C               	goto	u887
  2384  0510                     l1196:
  2385                           
  2386                           ;LCD_Main.c: 220:   GO_nDONE = 1;
  2387  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0512  149F               	bsf	31,1	;volatile
  2390  0513                     l85:	
  2391                           ;LCD_Main.c: 222:   while(GO_nDONE);
  2392                           
  2393  0513  189F               	btfsc	31,1	;volatile
  2394  0514  2D16               	goto	u681
  2395  0515  2D17               	goto	u680
  2396  0516                     u681:
  2397  0516  2D13               	goto	l85
  2398  0517                     u680:
  2399  0517                     l1198:
  2400                           
  2401                           ;LCD_Main.c: 224:   return ((ADRESH<<8)+ADRESL);
  2402  0517  081E               	movf	30,w	;volatile
  2403  0518  00F1               	movwf	?_ADC_Read+1
  2404  0519  1683               	bsf	3,5	;RP0=1, select bank1
  2405  051A  1303               	bcf	3,6	;RP1=0, select bank1
  2406  051B  081E               	movf	30,w	;volatile
  2407  051C  00F0               	movwf	?_ADC_Read
  2408  051D                     l88:
  2409  051D  0008               	return
  2410  051E                     __end_of_ADC_Read:
  2411                           
  2412                           	psect	text13
  2413  046B                     __ptext13:	
  2414 ;; *************** function _ADC_Initialize *****************
  2415 ;; Defined at:
  2416 ;;		line 201 in file "LCD_Main.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2430 ;;      Params:         0       0       0       0
  2431 ;;      Locals:         0       0       0       0
  2432 ;;      Temps:          0       0       0       0
  2433 ;;      Totals:         0       0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443  046B                     _ADC_Initialize:	
  2444                           ;psect for function _ADC_Initialize
  2445                           
  2446  046B                     l1186:	
  2447                           ;incstack = 0
  2448                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2449                           
  2450                           
  2451                           ;LCD_Main.c: 203:   ANSELH = 0x00;
  2452  046B  1683               	bsf	3,5	;RP0=1, select bank3
  2453  046C  1703               	bsf	3,6	;RP1=1, select bank3
  2454  046D  0189               	clrf	9	;volatile
  2455  046E                     l1188:
  2456                           
  2457                           ;LCD_Main.c: 204:   ADCON0 = 0b01000001;
  2458  046E  3041               	movlw	65
  2459  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0471  009F               	movwf	31	;volatile
  2462  0472                     l1190:
  2463                           
  2464                           ;LCD_Main.c: 206:   ADCON1 = 0b11000000;
  2465  0472  30C0               	movlw	192
  2466  0473  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0474  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0475  009F               	movwf	31	;volatile
  2469  0476                     l82:
  2470  0476  0008               	return
  2471  0477                     __end_of_ADC_Initialize:
  2472  007E                     btemp	set	126	;btemp
  2473  007E                     wtemp0	set	126
  2474                           
  2475                           	psect	idloc
  2476                           
  2477                           ;Config register IDLOC0 @ 0x2000
  2478                           ;	unspecified, using default values
  2479  2000                     	org	8192
  2480  2000  3FFF               	dw	16383
  2481                           
  2482                           ;Config register IDLOC1 @ 0x2001
  2483                           ;	unspecified, using default values
  2484  2001                     	org	8193
  2485  2001  3FFF               	dw	16383
  2486                           
  2487                           ;Config register IDLOC2 @ 0x2002
  2488                           ;	unspecified, using default values
  2489  2002                     	org	8194
  2490  2002  3FFF               	dw	16383
  2491                           
  2492                           ;Config register IDLOC3 @ 0x2003
  2493                           ;	unspecified, using default values
  2494  2003                     	org	8195
  2495  2003  3FFF               	dw	16383
  2496                           
  2497                           	psect	config
  2498                           
  2499                           ;Config register CONFIG1 @ 0x2007
  2500                           ;	Oscillator Selection bits
  2501                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2502                           ;	Watchdog Timer Enable bit
  2503                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2504                           ;	Power-up Timer Enable bit
  2505                           ;	PWRTE = ON, PWRT enabled
  2506                           ;	RE3/MCLR pin function select bit
  2507                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2508                           ;	Code Protection bit
  2509                           ;	CP = OFF, Program memory code protection is disabled
  2510                           ;	Data Code Protection bit
  2511                           ;	CPD = OFF, Data memory code protection is disabled
  2512                           ;	Brown Out Reset Selection bits
  2513                           ;	BOREN = ON, BOR enabled
  2514                           ;	Internal External Switchover bit
  2515                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2516                           ;	Fail-Safe Clock Monitor Enabled bit
  2517                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2518                           ;	Low Voltage Programming Enable bit
  2519                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2520                           ;	In-Circuit Debugger Mode bit
  2521                           ;	DEBUG = 0x1, unprogrammed default
  2522  2007                     	org	8199
  2523  2007  23E1               	dw	9185
  2524                           
  2525                           ;Config register CONFIG2 @ 0x2008
  2526                           ;	Brown-out Reset Selection bit
  2527                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2528                           ;	Flash Program Memory Self Write Enable bits
  2529                           ;	WRT = OFF, Write protection off
  2530  2008                     	org	8200
  2531  2008  3FFF               	dw	16383

Data Sizes:
    Strings     105
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      21
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@Buffer(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@Buffer(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@Buffer(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> main@Buffer(BANK0[7]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@Buffer(BANK0[7]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 
		 -> main@Buffer(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDWriteNibble->_ToggleEnable

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    4639
                                              9 BANK0     12    12      0
                     _ADC_Initialize
                           _ADC_Read
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      5     1      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     372
                                              6 COMMON     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            4     2      2    1146
                                              6 COMMON     4     2      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1     886
                                              6 COMMON     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     350
                                              1 COMMON     2     1      1
                       _ToggleEnable
 ---------------------------------------------------------------------------------
 (4) _ToggleEnable                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
         _ToggleEnable
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     15      15       3       26.2%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat May 28 19:50:49 2022

         _LCD_Initialize 051E                        pc 0002                       l50 05C6  
                     l51 05CB                       l43 0548              ?_LCDPutChar 0070  
                     l60 0497                       l53 05DE                       l46 04AA  
                     l54 05E3                       l55 05E8                       l63 0486  
                     l57 05F0                       l49 05C1                       l82 0476  
                     l75 0574                       l85 0513                       l69 04F3  
                     l93 06A7                       l88 051D                       fsr 0004  
                    l100 07EA                      l462 0634                      l472 05AE  
                    l650 0689                      l652 06A0                      l644 04CE  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RC4 003C                      u400 05C5  
                    u401 05C4                      u410 05CA                      u411 05C9  
                    u420 05CF                      u421 05CE                      u430 05DD  
                    u510 061C                      u431 05DC                      u511 061B  
                    u440 05E2                      u600 0657                      u441 05E1  
                    u505 060C                      u601 0656                      u450 05E7  
                    u530 0630                      u610 0685                      u451 05E6  
                    u531 062F                      u515 0618                      u611 0684  
                    u460 05EC                      u540 057B                      u620 069C  
                    u700 06CC                      u461 05EB                      u525 0624  
                    u541 057A                      u621 069B                      u701 06CB  
                    u390 05C0                      u630 04F3                      u470 05F9  
                    u710 06DB                      u391 05BF                      u631 04F2  
                    u471 05F8                      u711 06DA                      u640 0550  
                    u560 058D                      u720 071B                      u641 054F  
                    u561 058C                      u721 071A                      u705 06C8  
                    u650 0556                      u490 060B                      u570 0597  
                    u730 072A                      u651 0555                      u491 060A  
                    u571 0596                      u555 057F                      u731 0729  
                    u715 06D7                      u660 055C                      u740 076A  
                    u661 055B                      u485 05FD                      u741 0769  
                    u725 0717                      u590 05AA                      u750 0779  
                    u591 05A9                      u575 0593                      u807 07D4  
                    u751 0778                      u735 0726                      u680 0517  
                    u760 07B9                      u681 0516                      u817 052B  
                    u585 059E                      u761 07B8                      u745 0766  
                    u690 04B2                      u675 04FE                      u827 048C  
                    u691 04B1                      u755 0775                      u837 056F  
                    u765 07B5                      u847 047C                      u857 049A  
                    u777 06F6                      u867 04A1                      u787 0745  
                    u877 04A8                      u797 0794                      u887 050C  
                    fsr0 0004                      indf 0000          __end_of_LCDGoto 0575  
                   l1010 04A3                     l1020 05BA                     l1012 05B0  
                   l1100 05AA                     l1006 0498                     l1030 05CA  
                   l1022 05BB                     l1014 05B7                     l1110 0491  
                   l1008 049C                     l1040 05D7                     l1032 05CF  
                   l1024 05BC                     l1016 05B8                     l1104 0478  
                   l1120 0657                     l1112 0638                     l1050 05E7  
                   l1042 05D8                     l1034 05D0                     l1026 05C0  
                   l1018 05B9                     l1106 0481                     l1130 0685  
                   l1122 065B                     l1114 063C                     l1210 04BD  
                   l1202 04AE                     l1052 05EC                     l1044 05D9  
                   l1036 05D3                     l1028 05C5                     l1108 0488  
                   l1060 05F9                     l1132 068D                     l1124 065D  
                   l1116 064D                     l1212 04C2                     l1204 04AE  
                   l1300 07F3                     l1220 06BD                     l1054 05ED  
                   l1046 05DD                     l1038 05D6                     l1150 0527  
                   l1142 051E                     l1070 061C                     l1062 05FC  
                   l1134 0694                     l1126 066E                     l1118 0651  
                   l1206 04B2                     l1230 06EB                     l1222 06CC  
                   l1048 05E2                     l1160 0540                     l1152 0530  
                   l1144 0521                     l1072 0622                     l1064 0603  
                   l1056 05F1                     l1136 0696                     l1128 067D  
                   l1208 04B9                     l1232 06EE                     l1224 06DB  
                   l1240 070C                     l1216 06A1                     l1170 04E2  
                   l1162 0544                     l1154 0534                     l1146 0523  
                   l1074 0623                     l1066 0607                     l1058 05F3  
                   l1090 0589                     l1082 0575                     l1138 069C  
                   l1250 073A                     l1242 071B                     l1234 06FD  
                   l1226 06E0                     l1218 06B1                     l1180 0562  
                   l1172 054A                     l1164 04CF                     l1156 0538  
                   l1148 0526                     l1076 062A                     l1068 060B  
                   l1092 058D                     l1084 057B                     l1252 073D  
                   l1244 072A                     l1260 075B                     l1236 0700  
                   l1228 06E7                     l1190 0472                     l1182 0567  
                   l1174 0550                     l1166 04D1                     l1158 053C  
                   l1078 0630                     l1094 0597                     l1086 057E  
                   l1270 0789                     l1262 076A                     l1254 074C  
                   l1246 072F                     l1238 0707                     l1192 04F5  
                   l1184 056B                     l1176 0557                     l1168 04DE  
                   l1096 059D                     l1088 0585                     l1272 078C  
                   l1264 0779                     l1280 07AA                     l1256 074F  
                   l1248 0736                     l1186 046B                     l1194 0508  
                   l1178 055C                     l1098 05A4                     l1290 07CC  
                   l1282 07B9                     l1274 079B                     l1266 077E  
                   l1258 0756                     l1188 046E                     l1196 0510  
                   l1292 07DB                     l1284 07BE                     l1276 079E  
                   l1268 0785                     l1198 0517                     l1294 07DE  
                   l1286 07C5                     l1278 07A5                     l1296 07E5  
                   l1288 07C9                     l1298 07ED                     STR_1 003C  
                   STR_2 0012                     STR_3 0051                     STR_4 0012  
                   STR_5 0066                     STR_6 0012                     STR_7 0027  
                   STR_8 0012                     _main 06A1                     _itoa 04AB  
                   btemp 007E                     _utoa 0635         __end_of_ADC_Read 051E  
                   start 0000   __end_of_LCD_Initialize 0549              LCDPutCmd@ch 0075  
                  ?_main 0070                    ?_itoa 0024                    ?_utoa 0078  
        __end_of___lwdiv 0635          __end_of___lwmod 05AF                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  pclath 000A                    utoa@c 0022                    utoa@v 0020  
                  status 0003                    wtemp0 007E          ?_LCD_Initialize 0070  
        __initialization 07FD             __end_of_main 07FD             __end_of_itoa 04CF  
           __end_of_utoa 06A1                   ??_main 0029                   ??_itoa 007D  
                 ??_utoa 007C                ??_LCDGoto 0077        __end_of_LCDPutCmd 0487  
           LCDPutChar@ch 0075        __end_of_LCDPutStr 04F4                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _ANSELH 0189             LCDPutStr@str 0076           _LCDWriteNibble 05AF  
              ??___lwdiv 0074                ??___lwmod 0074          ADC_Read@channel 0074  
              ?_ADC_Read 0070   __end_of_LCDWriteNibble 05F1  __end_of__initialization 07FD  
              LCDGoto@ln 0076           __pcstackCOMMON 0070             ??_LCDPutChar 0073  
             ??_ADC_Read 0072          ?_LCDWriteNibble 0071       __end_of_LCDPutChar 0498  
             __pmaintext 06A1                  _LCDGoto 0549               __stringtab 0002  
       ??_LCD_Initialize 0076                  ___lwdiv 05F1                  ___lwmod 0575  
                __ptext1 04AB                  __ptext2 0635                  __ptext3 0575  
                __ptext4 05F1                  __ptext5 051E                  __ptext6 04CF  
                __ptext7 0487                  __ptext8 0549                  __ptext9 0477  
          ?_ToggleEnable 0070                _LCDPutCmd 0477                  main@adc 0033  
              _LCDPutStr 04CF     end_of_initialization 07FD                  itoa@buf 0028  
                itoa@val 0024                  utoa@buf 0023                  utoa@val 0078  
         ??_ToggleEnable 0070                _PORTBbits 0006                _PORTCbits 0007  
             main@Buffer 002C               ?_LCDPutCmd 0070               ?_LCDPutStr 0076  
             LCDGoto@pos 007B               LCDPutStr@i 0079           _ADC_Initialize 046B  
    start_initialization 07FD         ??_LCDWriteNibble 0072   __end_of_ADC_Initialize 0477  
               ?_LCDGoto 0076                ___latbits 0001            __pcstackBANK0 0020  
            ??_LCDPutCmd 0073              ??_LCDPutStr 0078     __end_of_ToggleEnable 04AB  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0070  
        ?_ADC_Initialize 0070         LCDWriteNibble@ch 0072         LCDWriteNibble@rs 0071  
              __pstrings 0002                 _ADC_Read 04F4         ___lwdiv@quotient 0075  
            _LCDGoto$131 0079                 _GO_nDONE 00F9              __stringbase 0011  
     __end_of__stringtab 0012          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 05AF                 __ptext11 0498                 __ptext12 04F4  
               __ptext13 046B               _LCDPutChar 0487             _ToggleEnable 0498  
               itoa@base 0026         ___lwmod@dividend 0072         ??_ADC_Initialize 0070  
              stringcode 000C                 utoa@base 007A          ___lwmod@divisor 0070  
        ___lwmod@counter 0075                 stringdir 000C                 stringtab 0002  
