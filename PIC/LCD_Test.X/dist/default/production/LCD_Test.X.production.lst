

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 30 21:36:48 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F883 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  001E                     _ADRESH	set	30
   215  001F                     _ADCON0	set	31
   216  0006                     _PORTBbits	set	6
   217  0007                     _PORTCbits	set	7
   218  0007                     _PORTC	set	7
   219  0006                     _PORTB	set	6
   220  003C                     _RC4	set	60
   221  00F9                     _GO_nDONE	set	249
   222  0033                     _RB3	set	51
   223  0032                     _RB2	set	50
   224  0031                     _RB1	set	49
   225  0030                     _RB0	set	48
   226  009E                     _ADRESL	set	158
   227  009F                     _ADCON1	set	159
   228  0087                     _TRISC	set	135
   229  0086                     _TRISB	set	134
   230  0189                     _ANSELH	set	393
   231                           
   232                           	psect	strings
   233  0002                     __pstrings:
   234  0002                     stringtab:
   235  0002                     __stringtab:
   236                           
   237                           ;	String table - string pointers are 1 byte each
   238  0002  1BFF               	btfsc	btemp+1,7
   239  0003  280C               	ljmp	stringcode
   240  0004  1383               	bcf	3,7
   241  0005  187F               	btfsc	btemp+1,0
   242  0006  1783               	bsf	3,7
   243  0007  0800               	movf	0,w
   244  0008  0A84               	incf	4,f
   245  0009  1903               	skipnz
   246  000A  0AFF               	incf	btemp+1,f
   247  000B  0008               	return
   248  000C                     stringcode:
   249  000C                     stringdir:
   250  000C  3000               	movlw	high stringdir
   251  000D  008A               	movwf	10
   252  000E  0804               	movf	4,w
   253  000F  0A84               	incf	4,f
   254  0010  0782               	addwf	2,f
   255  0011                     __stringbase:
   256  0011  3400               	retlw	0
   257  0012                     __end_of__stringtab:
   258  0012                     STR_9:
   259  0012  3420               	retlw	32	;' '
   260  0013  3420               	retlw	32	;' '
   261  0014  3420               	retlw	32	;' '
   262  0015  3420               	retlw	32	;' '
   263  0016  3420               	retlw	32	;' '
   264  0017  3420               	retlw	32	;' '
   265  0018  3420               	retlw	32	;' '
   266  0019  3420               	retlw	32	;' '
   267  001A  3420               	retlw	32	;' '
   268  001B  3420               	retlw	32	;' '
   269  001C  3420               	retlw	32	;' '
   270  001D  3420               	retlw	32	;' '
   271  001E  3420               	retlw	32	;' '
   272  001F  3420               	retlw	32	;' '
   273  0020  3420               	retlw	32	;' '
   274  0021  3420               	retlw	32	;' '
   275  0022  3400               	retlw	0
   276  0023                     STR_4:
   277  0023  3420               	retlw	32	;' '
   278  0024  3473               	retlw	115	;'s'
   279  0025  3465               	retlw	101	;'e'
   280  0026  3463               	retlw	99	;'c'
   281  0027  3420               	retlw	32	;' '
   282  0028  3465               	retlw	101	;'e'
   283  0029  3478               	retlw	120	;'x'
   284  002A  3470               	retlw	112	;'p'
   285  002B  346F               	retlw	111	;'o'
   286  002C  3473               	retlw	115	;'s'
   287  002D  3475               	retlw	117	;'u'
   288  002E  3472               	retlw	114	;'r'
   289  002F  3465               	retlw	101	;'e'
   290  0030  3420               	retlw	32	;' '
   291  0031  3420               	retlw	32	;' '
   292  0032  3400               	retlw	0
   293  0033                     STR_2:
   294  0033  3420               	retlw	32	;' '
   295  0034  3420               	retlw	32	;' '
   296  0035  3420               	retlw	32	;' '
   297  0036  3420               	retlw	32	;' '
   298  0037  3454               	retlw	84	;'T'
   299  0038  3449               	retlw	73	;'I'
   300  0039  344D               	retlw	77	;'M'
   301  003A  3445               	retlw	69	;'E'
   302  003B  3452               	retlw	82	;'R'
   303  003C  3420               	retlw	32	;' '
   304  003D  3456               	retlw	86	;'V'
   305  003E  3431               	retlw	49	;'1'
   306  003F  3420               	retlw	32	;' '
   307  0040  3420               	retlw	32	;' '
   308  0041  3400               	retlw	0
   309  0042                     STR_1:
   310  0042  3420               	retlw	32	;' '
   311  0043  3420               	retlw	32	;' '
   312  0044  3420               	retlw	32	;' '
   313  0045  3420               	retlw	32	;' '
   314  0046  3445               	retlw	69	;'E'
   315  0047  344E               	retlw	78	;'N'
   316  0048  344C               	retlw	76	;'L'
   317  0049  3441               	retlw	65	;'A'
   318  004A  3452               	retlw	82	;'R'
   319  004B  3447               	retlw	71	;'G'
   320  004C  3445               	retlw	69	;'E'
   321  004D  3452               	retlw	82	;'R'
   322  004E  3420               	retlw	32	;' '
   323  004F  3420               	retlw	32	;' '
   324  0050  3400               	retlw	0
   325  0051                     STR_3:
   326  0051  3420               	retlw	32	;' '
   327  0052  3473               	retlw	115	;'s'
   328  0053  3465               	retlw	101	;'e'
   329  0054  3463               	retlw	99	;'c'
   330  0055  3420               	retlw	32	;' '
   331  0056  3465               	retlw	101	;'e'
   332  0057  3478               	retlw	120	;'x'
   333  0058  3470               	retlw	112	;'p'
   334  0059  346F               	retlw	111	;'o'
   335  005A  3473               	retlw	115	;'s'
   336  005B  3475               	retlw	117	;'u'
   337  005C  3472               	retlw	114	;'r'
   338  005D  3465               	retlw	101	;'e'
   339  005E  3420               	retlw	32	;' '
   340  005F  3400               	retlw	0
   341  0060                     STR_10:
   342  0060  3420               	retlw	32	;' '
   343  0061  3473               	retlw	115	;'s'
   344  0062  3465               	retlw	101	;'e'
   345  0063  3463               	retlw	99	;'c'
   346  0064  3420               	retlw	32	;' '
   347  0065  346C               	retlw	108	;'l'
   348  0066  3461               	retlw	97	;'a'
   349  0067  3473               	retlw	115	;'s'
   350  0068  3474               	retlw	116	;'t'
   351  0069  3420               	retlw	32	;' '
   352  006A  3465               	retlw	101	;'e'
   353  006B  3478               	retlw	120	;'x'
   354  006C  3470               	retlw	112	;'p'
   355  006D  3400               	retlw	0
   356  006E                     STR_5:
   357  006E  3452               	retlw	82	;'R'
   358  006F  3445               	retlw	69	;'E'
   359  0070  3453               	retlw	83	;'S'
   360  0071  3445               	retlw	69	;'E'
   361  0072  3454               	retlw	84	;'T'
   362  0073  3400               	retlw	0
   363  0033                     
   364                           	psect	cinit
   365  07FD                     start_initialization:	
   366                           ; #config settings
   367                           
   368  07FD                     __initialization:
   369  07FD                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  07FD                     __end_of__initialization:
   373  07FD  0183               	clrf	3
   374  07FE  118A  2DC2         	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	cstackCOMMON
   377  0070                     __pcstackCOMMON:
   378  0070                     ?_LCDPutCmd:
   379  0070                     ?_memset:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_LCD_Initialize:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_ToggleEnable:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_ToggleEnable:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_LCDPutChar:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_ADC_Initialize:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_ADC_Initialize:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_main:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_ADC_Read:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?___lwdiv:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     ?___lwmod:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0070                     ___lwdiv@divisor:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  0070                     ___lwmod@divisor:	
   416                           ; 2 bytes @ 0x0
   417                           
   418  0070                     memset@c:	
   419                           ; 2 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423  0070                     	ds	1
   424  0071                     ?_LCDWriteNibble:
   425  0071                     LCDWriteNibble@rs:	
   426                           ; 1 bytes @ 0x1
   427                           
   428                           
   429                           ; 1 bytes @ 0x1
   430  0071                     	ds	1
   431  0072                     ??_LCDWriteNibble:
   432  0072                     ??_ADC_Read:	
   433                           ; 1 bytes @ 0x2
   434                           
   435  0072                     LCDWriteNibble@ch:	
   436                           ; 1 bytes @ 0x2
   437                           
   438  0072                     ___lwdiv@dividend:	
   439                           ; 1 bytes @ 0x2
   440                           
   441  0072                     ___lwmod@dividend:	
   442                           ; 2 bytes @ 0x2
   443                           
   444  0072                     memset@n:	
   445                           ; 2 bytes @ 0x2
   446                           
   447                           
   448                           ; 2 bytes @ 0x2
   449  0072                     	ds	1
   450  0073                     ??_LCDPutCmd:
   451  0073                     ??_LCDPutChar:	
   452                           ; 1 bytes @ 0x3
   453                           
   454                           
   455                           ; 1 bytes @ 0x3
   456  0073                     	ds	1
   457  0074                     ??_memset:
   458  0074                     ??___lwdiv:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     ??___lwmod:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ADC_Read@channel:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 1 bytes @ 0x4
   469  0074                     	ds	1
   470  0075                     LCDPutChar@ch:
   471  0075                     LCDPutCmd@ch:	
   472                           ; 1 bytes @ 0x5
   473                           
   474  0075                     ___lwmod@counter:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0075                     memset@p1:	
   478                           ; 1 bytes @ 0x5
   479                           
   480  0075                     ___lwdiv@quotient:	
   481                           ; 1 bytes @ 0x5
   482                           
   483                           
   484                           ; 2 bytes @ 0x5
   485  0075                     	ds	1
   486  0076                     ??_LCD_Initialize:
   487  0076                     ?_LCDPutStr:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     ?_LCDGoto:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0076                     LCDGoto@ln:	
   494                           ; 1 bytes @ 0x6
   495                           
   496  0076                     memset@p:	
   497                           ; 1 bytes @ 0x6
   498                           
   499  0076                     LCDPutStr@str:	
   500                           ; 1 bytes @ 0x6
   501                           
   502                           
   503                           ; 2 bytes @ 0x6
   504  0076                     	ds	1
   505  0077                     ??_LCDGoto:
   506  0077                     ___lwdiv@counter:	
   507                           ; 1 bytes @ 0x7
   508                           
   509                           
   510                           ; 1 bytes @ 0x7
   511  0077                     	ds	1
   512  0078                     ?_utoa:
   513  0078                     ??_LCDPutStr:	
   514                           ; 1 bytes @ 0x8
   515                           
   516  0078                     utoa@val:	
   517                           ; 1 bytes @ 0x8
   518                           
   519                           
   520                           ; 2 bytes @ 0x8
   521  0078                     	ds	1
   522  0079                     LCDPutStr@i:
   523  0079                     _LCDGoto$138:	
   524                           ; 1 bytes @ 0x9
   525                           
   526                           
   527                           ; 2 bytes @ 0x9
   528  0079                     	ds	1
   529  007A                     utoa@base:
   530                           
   531                           ; 2 bytes @ 0xA
   532  007A                     	ds	1
   533  007B                     LCDGoto@pos:
   534                           
   535                           ; 1 bytes @ 0xB
   536  007B                     	ds	1
   537  007C                     ??_utoa:
   538                           
   539                           ; 1 bytes @ 0xC
   540  007C                     	ds	1
   541  007D                     ??_itoa:
   542                           
   543                           ; 1 bytes @ 0xD
   544  007D                     	ds	1
   545                           
   546                           	psect	cstackBANK0
   547  0020                     __pcstackBANK0:
   548  0020                     utoa@v:
   549                           
   550                           ; 2 bytes @ 0x0
   551  0020                     	ds	2
   552  0022                     utoa@c:
   553                           
   554                           ; 1 bytes @ 0x2
   555  0022                     	ds	1
   556  0023                     utoa@buf:
   557                           
   558                           ; 1 bytes @ 0x3
   559  0023                     	ds	1
   560  0024                     ?_itoa:
   561  0024                     itoa@val:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 2 bytes @ 0x4
   566  0024                     	ds	2
   567  0026                     itoa@base:
   568                           
   569                           ; 2 bytes @ 0x6
   570  0026                     	ds	2
   571  0028                     itoa@buf:
   572                           
   573                           ; 1 bytes @ 0x8
   574  0028                     	ds	1
   575  0029                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x9
   578  0029                     	ds	3
   579  002C                     main@Buffer:
   580                           
   581                           ; 7 bytes @ 0xC
   582  002C                     	ds	7
   583  0033                     main@iTime:
   584                           
   585                           ; 6 bytes @ 0x13
   586  0033                     	ds	6
   587  0039                     main@ExpTime:
   588                           
   589                           ; 6 bytes @ 0x19
   590  0039                     	ds	6
   591  003F                     main@i:
   592                           
   593                           ; 2 bytes @ 0x1F
   594  003F                     	ds	2
   595  0041                     main@ExposureTime:
   596                           
   597                           ; 2 bytes @ 0x21
   598  0041                     	ds	2
   599  0043                     main@adc:
   600                           
   601                           ; 2 bytes @ 0x23
   602  0043                     	ds	2
   603                           
   604                           	psect	maintext
   605  05C2                     __pmaintext:	
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 229 in file "LCD_Main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  Buffer          7   12[BANK0 ] unsigned char [7]
   616 ;;  ExpTime         6   25[BANK0 ] unsigned char [6]
   617 ;;  iTime           6   19[BANK0 ] unsigned char [6]
   618 ;;  adc             2   35[BANK0 ] int 
   619 ;;  ExposureTime    2   33[BANK0 ] int 
   620 ;;  i               2   31[BANK0 ] int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   630 ;;      Params:         0       0       0       0
   631 ;;      Locals:         0      25       0       0
   632 ;;      Temps:          0       3       0       0
   633 ;;      Totals:         0      28       0       0
   634 ;;Total ram usage:       28 bytes
   635 ;; Hardware stack levels required when called: 4
   636 ;; This function calls:
   637 ;;		_ADC_Initialize
   638 ;;		_ADC_Read
   639 ;;		_LCDGoto
   640 ;;		_LCDPutCmd
   641 ;;		_LCDPutStr
   642 ;;		_LCD_Initialize
   643 ;;		_itoa
   644 ;;		_memset
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650  05C2                     _main:	
   651                           ;psect for function _main
   652                           
   653  05C2                     l1289:	
   654                           ;incstack = 0
   655                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   656                           
   657                           
   658                           ;LCD_Main.c: 231: ADC_Initialize();
   659  05C2  118A  236C  118A   	fcall	_ADC_Initialize
   660  05C5                     l1291:
   661                           
   662                           ;LCD_Main.c: 232: int adc;;LCD_Main.c: 233: int ExposureTime = 0;
   663  05C5  1283               	bcf	3,5	;RP0=0, select bank0
   664  05C6  1303               	bcf	3,6	;RP1=0, select bank0
   665  05C7  01C1               	clrf	main@ExposureTime
   666  05C8  01C2               	clrf	main@ExposureTime+1
   667  05C9                     l1293:
   668                           
   669                           ;LCD_Main.c: 234: LCD_Initialize();
   670  05C9  118A  243F  118A   	fcall	_LCD_Initialize
   671  05CC                     l1295:
   672                           
   673                           ;LCD_Main.c: 235: int i;;LCD_Main.c: 236: char Buffer[7];;LCD_Main.c: 237: char ExpTime[
      +                          6];;LCD_Main.c: 238: char iTime[6];;LCD_Main.c: 241: LCDGoto(0,0);
   674  05CC  01F6               	clrf	LCDGoto@ln
   675  05CD  3000               	movlw	0
   676  05CE  118A  246A  118A   	fcall	_LCDGoto
   677  05D1                     l1297:
   678                           
   679                           ;LCD_Main.c: 242: LCDPutStr("    ENLARGER  ");
   680  05D1  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   681  05D2  00F6               	movwf	LCDPutStr@str
   682  05D3  3080               	movlw	128
   683  05D4  00F7               	movwf	LCDPutStr@str+1
   684  05D5  118A  23F0  118A   	fcall	_LCDPutStr
   685  05D8                     l1299:
   686                           
   687                           ;LCD_Main.c: 243: LCDGoto(0,1);
   688  05D8  01F6               	clrf	LCDGoto@ln
   689  05D9  0AF6               	incf	LCDGoto@ln,f
   690  05DA  3000               	movlw	0
   691  05DB  118A  246A  118A   	fcall	_LCDGoto
   692  05DE                     l1301:
   693                           
   694                           ;LCD_Main.c: 244: LCDPutStr("    TIMER V1  ");
   695  05DE  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   696  05DF  00F6               	movwf	LCDPutStr@str
   697  05E0  3080               	movlw	128
   698  05E1  00F7               	movwf	LCDPutStr@str+1
   699  05E2  118A  23F0  118A   	fcall	_LCDPutStr
   700  05E5                     l1303:
   701                           
   702                           ;LCD_Main.c: 245: _delay((unsigned long)((4000)*(4194304/4000.0)));
   703  05E5  3016               	movlw	22
   704  05E6  1283               	bcf	3,5	;RP0=0, select bank0
   705  05E7  1303               	bcf	3,6	;RP1=0, select bank0
   706  05E8  00AB               	movwf	??_main+2
   707  05E9  3048               	movlw	72
   708  05EA  00AA               	movwf	??_main+1
   709  05EB  3014               	movlw	20
   710  05EC  00A9               	movwf	??_main
   711  05ED                     u857:
   712  05ED  0BA9               	decfsz	??_main,f
   713  05EE  2DED               	goto	u857
   714  05EF  0BAA               	decfsz	??_main+1,f
   715  05F0  2DED               	goto	u857
   716  05F1  0BAB               	decfsz	??_main+2,f
   717  05F2  2DED               	goto	u857
   718  05F3  2DF4               	nop2
   719  05F4                     l1305:
   720                           
   721                           ;LCD_Main.c: 246: LCDPutCmd(0x01);
   722  05F4  3001               	movlw	1
   723  05F5  118A  2378  118A   	fcall	_LCDPutCmd
   724  05F8                     l1307:
   725                           
   726                           ;LCD_Main.c: 249:   {;LCD_Main.c: 250:     adc = (ADC_Read(0));
   727  05F8  3000               	movlw	0
   728  05F9  118A  2415  118A   	fcall	_ADC_Read
   729  05FC  0871               	movf	?_ADC_Read+1,w
   730  05FD  1283               	bcf	3,5	;RP0=0, select bank0
   731  05FE  1303               	bcf	3,6	;RP1=0, select bank0
   732  05FF  00C4               	movwf	main@adc+1
   733  0600  0870               	movf	?_ADC_Read,w
   734  0601  00C3               	movwf	main@adc
   735  0602                     l1309:
   736                           
   737                           ;LCD_Main.c: 253:     itoa(Buffer, adc, 10);
   738  0602  0844               	movf	main@adc+1,w
   739  0603  00A5               	movwf	itoa@val+1
   740  0604  0843               	movf	main@adc,w
   741  0605  00A4               	movwf	itoa@val
   742  0606  300A               	movlw	10
   743  0607  00A6               	movwf	itoa@base
   744  0608  3000               	movlw	0
   745  0609  00A7               	movwf	itoa@base+1
   746  060A  302C               	movlw	(low (main@Buffer| 0))& (0+255)
   747  060B  118A  23CC  118A   	fcall	_itoa
   748  060E                     l1311:
   749                           
   750                           ;LCD_Main.c: 256:     if (adc > 700 & adc < 800)
   751  060E  1283               	bcf	3,5	;RP0=0, select bank0
   752  060F  1303               	bcf	3,6	;RP1=0, select bank0
   753  0610  0844               	movf	main@adc+1,w
   754  0611  3A80               	xorlw	128
   755  0612  00FF               	movwf	btemp+1
   756  0613  3082               	movlw	130
   757  0614  027F               	subwf	btemp+1,w
   758  0615  1D03               	skipz
   759  0616  2E19               	goto	u755
   760  0617  30BD               	movlw	189
   761  0618  0243               	subwf	main@adc,w
   762  0619                     u755:
   763  0619  1C03               	skipc
   764  061A  2E1C               	goto	u751
   765  061B  2E1D               	goto	u750
   766  061C                     u751:
   767  061C  2E7C               	goto	l1333
   768  061D                     u750:
   769  061D                     l1313:
   770  061D  1283               	bcf	3,5	;RP0=0, select bank0
   771  061E  1303               	bcf	3,6	;RP1=0, select bank0
   772  061F  0844               	movf	main@adc+1,w
   773  0620  3A80               	xorlw	128
   774  0621  00FF               	movwf	btemp+1
   775  0622  3083               	movlw	131
   776  0623  027F               	subwf	btemp+1,w
   777  0624  1D03               	skipz
   778  0625  2E28               	goto	u765
   779  0626  3020               	movlw	32
   780  0627  0243               	subwf	main@adc,w
   781  0628                     u765:
   782  0628  1803               	skipnc
   783  0629  2E2B               	goto	u761
   784  062A  2E2C               	goto	u760
   785  062B                     u761:
   786  062B  2E7C               	goto	l1333
   787  062C                     u760:
   788  062C                     l1315:
   789                           
   790                           ;LCD_Main.c: 257:     {;LCD_Main.c: 258:         ExposureTime++;
   791  062C  3001               	movlw	1
   792  062D  1283               	bcf	3,5	;RP0=0, select bank0
   793  062E  1303               	bcf	3,6	;RP1=0, select bank0
   794  062F  07C1               	addwf	main@ExposureTime,f
   795  0630  1803               	skipnc
   796  0631  0AC2               	incf	main@ExposureTime+1,f
   797  0632  3000               	movlw	0
   798  0633  07C2               	addwf	main@ExposureTime+1,f
   799  0634                     l1317:
   800                           
   801                           ;LCD_Main.c: 259:         if (ExposureTime >99) ExposureTime = 99;
   802  0634  0842               	movf	main@ExposureTime+1,w
   803  0635  3A80               	xorlw	128
   804  0636  00FF               	movwf	btemp+1
   805  0637  3080               	movlw	128
   806  0638  027F               	subwf	btemp+1,w
   807  0639  1D03               	skipz
   808  063A  2E3D               	goto	u775
   809  063B  3064               	movlw	100
   810  063C  0241               	subwf	main@ExposureTime,w
   811  063D                     u775:
   812  063D  1C03               	skipc
   813  063E  2E40               	goto	u771
   814  063F  2E41               	goto	u770
   815  0640                     u771:
   816  0640  2E47               	goto	l1321
   817  0641                     u770:
   818  0641                     l1319:
   819  0641  3063               	movlw	99
   820  0642  1283               	bcf	3,5	;RP0=0, select bank0
   821  0643  1303               	bcf	3,6	;RP1=0, select bank0
   822  0644  00C1               	movwf	main@ExposureTime
   823  0645  3000               	movlw	0
   824  0646  00C2               	movwf	main@ExposureTime+1
   825  0647                     l1321:
   826                           
   827                           ;LCD_Main.c: 260:         itoa(ExpTime, ExposureTime, 10);
   828  0647  1283               	bcf	3,5	;RP0=0, select bank0
   829  0648  1303               	bcf	3,6	;RP1=0, select bank0
   830  0649  0842               	movf	main@ExposureTime+1,w
   831  064A  00A5               	movwf	itoa@val+1
   832  064B  0841               	movf	main@ExposureTime,w
   833  064C  00A4               	movwf	itoa@val
   834  064D  300A               	movlw	10
   835  064E  00A6               	movwf	itoa@base
   836  064F  3000               	movlw	0
   837  0650  00A7               	movwf	itoa@base+1
   838  0651  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   839  0652  118A  23CC  118A   	fcall	_itoa
   840  0655                     l1323:
   841                           
   842                           ;LCD_Main.c: 261:         LCDGoto(0,0);
   843  0655  01F6               	clrf	LCDGoto@ln
   844  0656  3000               	movlw	0
   845  0657  118A  246A  118A   	fcall	_LCDGoto
   846  065A                     l1325:
   847                           
   848                           ;LCD_Main.c: 262:         LCDPutStr(ExpTime);
   849  065A  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   850  065B  00F6               	movwf	LCDPutStr@str
   851  065C  3000               	movlw	0
   852  065D  00F7               	movwf	LCDPutStr@str+1
   853  065E  118A  23F0  118A   	fcall	_LCDPutStr
   854  0661                     l1327:
   855                           
   856                           ;LCD_Main.c: 263:         LCDPutStr(" sec exposure ");
   857  0661  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   858  0662  00F6               	movwf	LCDPutStr@str
   859  0663  3080               	movlw	128
   860  0664  00F7               	movwf	LCDPutStr@str+1
   861  0665  118A  23F0  118A   	fcall	_LCDPutStr
   862  0668                     l1329:
   863                           
   864                           ;LCD_Main.c: 264:         LCDPutCmd(0x02);
   865  0668  3002               	movlw	2
   866  0669  118A  2378  118A   	fcall	_LCDPutCmd
   867  066C                     l1331:
   868                           
   869                           ;LCD_Main.c: 265:         _delay((unsigned long)((200)*(4194304/4000.0)));
   870  066C  3002               	movlw	2
   871  066D  1283               	bcf	3,5	;RP0=0, select bank0
   872  066E  1303               	bcf	3,6	;RP1=0, select bank0
   873  066F  00AB               	movwf	??_main+2
   874  0670  3011               	movlw	17
   875  0671  00AA               	movwf	??_main+1
   876  0672  3057               	movlw	87
   877  0673  00A9               	movwf	??_main
   878  0674                     u867:
   879  0674  0BA9               	decfsz	??_main,f
   880  0675  2E74               	goto	u867
   881  0676  0BAA               	decfsz	??_main+1,f
   882  0677  2E74               	goto	u867
   883  0678  0BAB               	decfsz	??_main+2,f
   884  0679  2E74               	goto	u867
   885  067A  2E7B               	nop2
   886                           
   887                           ;LCD_Main.c: 266:     }
   888  067B  2DF8               	goto	l1307
   889  067C                     l1333:
   890  067C  1283               	bcf	3,5	;RP0=0, select bank0
   891  067D  1303               	bcf	3,6	;RP1=0, select bank0
   892  067E  0844               	movf	main@adc+1,w
   893  067F  3A80               	xorlw	128
   894  0680  00FF               	movwf	btemp+1
   895  0681  3082               	movlw	130
   896  0682  027F               	subwf	btemp+1,w
   897  0683  1D03               	skipz
   898  0684  2E87               	goto	u785
   899  0685  3059               	movlw	89
   900  0686  0243               	subwf	main@adc,w
   901  0687                     u785:
   902  0687  1C03               	skipc
   903  0688  2E8A               	goto	u781
   904  0689  2E8B               	goto	u780
   905  068A                     u781:
   906  068A  2EEF               	goto	l1357
   907  068B                     u780:
   908  068B                     l1335:
   909  068B  1283               	bcf	3,5	;RP0=0, select bank0
   910  068C  1303               	bcf	3,6	;RP1=0, select bank0
   911  068D  0844               	movf	main@adc+1,w
   912  068E  3A80               	xorlw	128
   913  068F  00FF               	movwf	btemp+1
   914  0690  3082               	movlw	130
   915  0691  027F               	subwf	btemp+1,w
   916  0692  1D03               	skipz
   917  0693  2E96               	goto	u795
   918  0694  30BC               	movlw	188
   919  0695  0243               	subwf	main@adc,w
   920  0696                     u795:
   921  0696  1803               	skipnc
   922  0697  2E99               	goto	u791
   923  0698  2E9A               	goto	u790
   924  0699                     u791:
   925  0699  2EEF               	goto	l1357
   926  069A                     u790:
   927  069A                     l1337:
   928                           
   929                           ;LCD_Main.c: 268:     {;LCD_Main.c: 269:         ExposureTime--;
   930  069A  30FF               	movlw	255
   931  069B  1283               	bcf	3,5	;RP0=0, select bank0
   932  069C  1303               	bcf	3,6	;RP1=0, select bank0
   933  069D  07C1               	addwf	main@ExposureTime,f
   934  069E  1803               	skipnc
   935  069F  0AC2               	incf	main@ExposureTime+1,f
   936  06A0  30FF               	movlw	255
   937  06A1  07C2               	addwf	main@ExposureTime+1,f
   938  06A2                     l1339:
   939                           
   940                           ;LCD_Main.c: 270:         if (ExposureTime <1) ExposureTime = 1;
   941  06A2  0842               	movf	main@ExposureTime+1,w
   942  06A3  3A80               	xorlw	128
   943  06A4  00FF               	movwf	btemp+1
   944  06A5  3080               	movlw	128
   945  06A6  027F               	subwf	btemp+1,w
   946  06A7  1D03               	skipz
   947  06A8  2EAB               	goto	u805
   948  06A9  3001               	movlw	1
   949  06AA  0241               	subwf	main@ExposureTime,w
   950  06AB                     u805:
   951  06AB  1803               	skipnc
   952  06AC  2EAE               	goto	u801
   953  06AD  2EAF               	goto	u800
   954  06AE                     u801:
   955  06AE  2EB5               	goto	l1343
   956  06AF                     u800:
   957  06AF                     l1341:
   958  06AF  3001               	movlw	1
   959  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   960  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   961  06B2  00C1               	movwf	main@ExposureTime
   962  06B3  3000               	movlw	0
   963  06B4  00C2               	movwf	main@ExposureTime+1
   964  06B5                     l1343:
   965                           
   966                           ;LCD_Main.c: 271:         itoa(ExpTime, ExposureTime, 10);
   967  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   968  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   969  06B7  0842               	movf	main@ExposureTime+1,w
   970  06B8  00A5               	movwf	itoa@val+1
   971  06B9  0841               	movf	main@ExposureTime,w
   972  06BA  00A4               	movwf	itoa@val
   973  06BB  300A               	movlw	10
   974  06BC  00A6               	movwf	itoa@base
   975  06BD  3000               	movlw	0
   976  06BE  00A7               	movwf	itoa@base+1
   977  06BF  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   978  06C0  118A  23CC  118A   	fcall	_itoa
   979  06C3                     l1345:
   980                           
   981                           ;LCD_Main.c: 272:         LCDGoto(0,0);
   982  06C3  01F6               	clrf	LCDGoto@ln
   983  06C4  3000               	movlw	0
   984  06C5  118A  246A  118A   	fcall	_LCDGoto
   985  06C8                     l1347:
   986                           
   987                           ;LCD_Main.c: 273:         LCDPutStr(ExpTime);
   988  06C8  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   989  06C9  00F6               	movwf	LCDPutStr@str
   990  06CA  3000               	movlw	0
   991  06CB  00F7               	movwf	LCDPutStr@str+1
   992  06CC  118A  23F0  118A   	fcall	_LCDPutStr
   993  06CF                     l1349:
   994                           
   995                           ;LCD_Main.c: 274:         LCDPutStr(" sec exposure  ");
   996  06CF  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   997  06D0  00F6               	movwf	LCDPutStr@str
   998  06D1  3080               	movlw	128
   999  06D2  00F7               	movwf	LCDPutStr@str+1
  1000  06D3  118A  23F0  118A   	fcall	_LCDPutStr
  1001  06D6                     l1351:
  1002                           
  1003                           ;LCD_Main.c: 275:         LCDPutCmd(0x02);
  1004  06D6  3002               	movlw	2
  1005  06D7  118A  2378  118A   	fcall	_LCDPutCmd
  1006  06DA                     l1353:
  1007                           
  1008                           ;LCD_Main.c: 276:         _delay((unsigned long)((200)*(4194304/4000.0)));
  1009  06DA  3002               	movlw	2
  1010  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1011  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1012  06DD  00AB               	movwf	??_main+2
  1013  06DE  3011               	movlw	17
  1014  06DF  00AA               	movwf	??_main+1
  1015  06E0  3057               	movlw	87
  1016  06E1  00A9               	movwf	??_main
  1017  06E2                     u877:
  1018  06E2  0BA9               	decfsz	??_main,f
  1019  06E3  2EE2               	goto	u877
  1020  06E4  0BAA               	decfsz	??_main+1,f
  1021  06E5  2EE2               	goto	u877
  1022  06E6  0BAB               	decfsz	??_main+2,f
  1023  06E7  2EE2               	goto	u877
  1024  06E8  2EE9               	nop2
  1025  06E9                     l1355:
  1026                           
  1027                           ;LCD_Main.c: 277:         LCDGoto(0,0);
  1028  06E9  01F6               	clrf	LCDGoto@ln
  1029  06EA  3000               	movlw	0
  1030  06EB  118A  246A  118A   	fcall	_LCDGoto
  1031                           
  1032                           ;LCD_Main.c: 279:     }
  1033  06EE  2DF8               	goto	l1307
  1034  06EF                     l1357:
  1035  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1036  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1037  06F1  0844               	movf	main@adc+1,w
  1038  06F2  3A80               	xorlw	128
  1039  06F3  00FF               	movwf	btemp+1
  1040  06F4  3081               	movlw	129
  1041  06F5  027F               	subwf	btemp+1,w
  1042  06F6  1D03               	skipz
  1043  06F7  2EFA               	goto	u815
  1044  06F8  30F5               	movlw	245
  1045  06F9  0243               	subwf	main@adc,w
  1046  06FA                     u815:
  1047  06FA  1C03               	skipc
  1048  06FB  2EFD               	goto	u811
  1049  06FC  2EFE               	goto	u810
  1050  06FD                     u811:
  1051  06FD  2F6B               	goto	l1385
  1052  06FE                     u810:
  1053  06FE                     l1359:
  1054  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  1055  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0700  0844               	movf	main@adc+1,w
  1057  0701  3A80               	xorlw	128
  1058  0702  00FF               	movwf	btemp+1
  1059  0703  3082               	movlw	130
  1060  0704  027F               	subwf	btemp+1,w
  1061  0705  1D03               	skipz
  1062  0706  2F09               	goto	u825
  1063  0707  3058               	movlw	88
  1064  0708  0243               	subwf	main@adc,w
  1065  0709                     u825:
  1066  0709  1803               	skipnc
  1067  070A  2F0C               	goto	u821
  1068  070B  2F0D               	goto	u820
  1069  070C                     u821:
  1070  070C  2F6B               	goto	l1385
  1071  070D                     u820:
  1072  070D                     l1361:
  1073                           
  1074                           ;LCD_Main.c: 281:     {;LCD_Main.c: 283:         LCDGoto(5,0);
  1075  070D  01F6               	clrf	LCDGoto@ln
  1076  070E  3005               	movlw	5
  1077  070F  118A  246A  118A   	fcall	_LCDGoto
  1078  0712                     l1363:
  1079                           
  1080                           ;LCD_Main.c: 284:         LCDPutStr("RESET");
  1081  0712  305D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1082  0713  00F6               	movwf	LCDPutStr@str
  1083  0714  3080               	movlw	128
  1084  0715  00F7               	movwf	LCDPutStr@str+1
  1085  0716  118A  23F0  118A   	fcall	_LCDPutStr
  1086  0719                     l1365:
  1087                           
  1088                           ;LCD_Main.c: 285:         _delay((unsigned long)((1000)*(4194304/4000.0)));
  1089  0719  3006               	movlw	6
  1090  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1091  071B  1303               	bcf	3,6	;RP1=0, select bank0
  1092  071C  00AB               	movwf	??_main+2
  1093  071D  3052               	movlw	82
  1094  071E  00AA               	movwf	??_main+1
  1095  071F  30C3               	movlw	195
  1096  0720  00A9               	movwf	??_main
  1097  0721                     u887:
  1098  0721  0BA9               	decfsz	??_main,f
  1099  0722  2F21               	goto	u887
  1100  0723  0BAA               	decfsz	??_main+1,f
  1101  0724  2F21               	goto	u887
  1102  0725  0BAB               	decfsz	??_main+2,f
  1103  0726  2F21               	goto	u887
  1104  0727  0000               	nop
  1105  0728                     l1367:
  1106                           
  1107                           ;LCD_Main.c: 286:         ExposureTime = 1;
  1108  0728  3001               	movlw	1
  1109  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1110  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1111  072B  00C1               	movwf	main@ExposureTime
  1112  072C  3000               	movlw	0
  1113  072D  00C2               	movwf	main@ExposureTime+1
  1114  072E                     l1369:
  1115                           
  1116                           ;LCD_Main.c: 287:         memset(ExpTime, '\0', sizeof(ExpTime));
  1117  072E  3000               	movlw	0
  1118  072F  00F0               	movwf	memset@c
  1119  0730  00F1               	movwf	memset@c+1
  1120  0731  3006               	movlw	6
  1121  0732  00F2               	movwf	memset@n
  1122  0733  3000               	movlw	0
  1123  0734  00F3               	movwf	memset@n+1
  1124  0735  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1125  0736  118A  23AC  118A   	fcall	_memset
  1126  0739                     l1371:
  1127                           
  1128                           ;LCD_Main.c: 288:         ExpTime[0] = '1';
  1129  0739  3031               	movlw	49
  1130  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1131  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1132  073C  00A9               	movwf	??_main
  1133  073D  0829               	movf	??_main,w
  1134  073E  00B9               	movwf	main@ExpTime
  1135  073F                     l1373:
  1136                           
  1137                           ;LCD_Main.c: 289:         LCDPutCmd(0x02);
  1138  073F  3002               	movlw	2
  1139  0740  118A  2378  118A   	fcall	_LCDPutCmd
  1140  0743                     l1375:
  1141                           
  1142                           ;LCD_Main.c: 290:         LCDPutStr("    ENLARGER  ");
  1143  0743  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1144  0744  00F6               	movwf	LCDPutStr@str
  1145  0745  3080               	movlw	128
  1146  0746  00F7               	movwf	LCDPutStr@str+1
  1147  0747  118A  23F0  118A   	fcall	_LCDPutStr
  1148  074A                     l1377:
  1149                           
  1150                           ;LCD_Main.c: 291:         LCDGoto(0,1);
  1151  074A  01F6               	clrf	LCDGoto@ln
  1152  074B  0AF6               	incf	LCDGoto@ln,f
  1153  074C  3000               	movlw	0
  1154  074D  118A  246A  118A   	fcall	_LCDGoto
  1155  0750                     l1379:
  1156                           
  1157                           ;LCD_Main.c: 292:         LCDPutStr("    TIMER V1  ");
  1158  0750  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1159  0751  00F6               	movwf	LCDPutStr@str
  1160  0752  3080               	movlw	128
  1161  0753  00F7               	movwf	LCDPutStr@str+1
  1162  0754  118A  23F0  118A   	fcall	_LCDPutStr
  1163  0757                     l1381:
  1164                           
  1165                           ;LCD_Main.c: 293:         _delay((unsigned long)((4000)*(4194304/4000.0)));
  1166  0757  3016               	movlw	22
  1167  0758  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0759  1303               	bcf	3,6	;RP1=0, select bank0
  1169  075A  00AB               	movwf	??_main+2
  1170  075B  3048               	movlw	72
  1171  075C  00AA               	movwf	??_main+1
  1172  075D  3014               	movlw	20
  1173  075E  00A9               	movwf	??_main
  1174  075F                     u897:
  1175  075F  0BA9               	decfsz	??_main,f
  1176  0760  2F5F               	goto	u897
  1177  0761  0BAA               	decfsz	??_main+1,f
  1178  0762  2F5F               	goto	u897
  1179  0763  0BAB               	decfsz	??_main+2,f
  1180  0764  2F5F               	goto	u897
  1181  0765  2F66               	nop2
  1182  0766                     l1383:
  1183                           
  1184                           ;LCD_Main.c: 294:         LCDPutCmd(0x01);
  1185  0766  3001               	movlw	1
  1186  0767  118A  2378  118A   	fcall	_LCDPutCmd
  1187                           
  1188                           ;LCD_Main.c: 295:     }
  1189  076A  2DF8               	goto	l1307
  1190  076B                     l1385:
  1191  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1192  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1193  076D  0844               	movf	main@adc+1,w
  1194  076E  3A80               	xorlw	128
  1195  076F  00FF               	movwf	btemp+1
  1196  0770  3080               	movlw	128
  1197  0771  027F               	subwf	btemp+1,w
  1198  0772  1D03               	skipz
  1199  0773  2F76               	goto	u835
  1200  0774  300A               	movlw	10
  1201  0775  0243               	subwf	main@adc,w
  1202  0776                     u835:
  1203  0776  1803               	skipnc
  1204  0777  2F79               	goto	u831
  1205  0778  2F7A               	goto	u830
  1206  0779                     u831:
  1207  0779  2FF7               	goto	l104
  1208  077A                     u830:
  1209  077A                     l1387:
  1210                           
  1211                           ;LCD_Main.c: 297:     {;LCD_Main.c: 298:         LCDGoto(0,0);
  1212  077A  01F6               	clrf	LCDGoto@ln
  1213  077B  3000               	movlw	0
  1214  077C  118A  246A  118A   	fcall	_LCDGoto
  1215  077F                     l1389:
  1216                           
  1217                           ;LCD_Main.c: 299:         LCDPutStr(ExpTime);
  1218  077F  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1219  0780  00F6               	movwf	LCDPutStr@str
  1220  0781  3000               	movlw	0
  1221  0782  00F7               	movwf	LCDPutStr@str+1
  1222  0783  118A  23F0  118A   	fcall	_LCDPutStr
  1223  0786                     l1391:
  1224                           
  1225                           ;LCD_Main.c: 300:         LCDPutStr(" sec exposure ");
  1226  0786  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1227  0787  00F6               	movwf	LCDPutStr@str
  1228  0788  3080               	movlw	128
  1229  0789  00F7               	movwf	LCDPutStr@str+1
  1230  078A  118A  23F0  118A   	fcall	_LCDPutStr
  1231                           
  1232                           ;LCD_Main.c: 301:         LCDGoto(0,1);
  1233  078D  01F6               	clrf	LCDGoto@ln
  1234  078E  0AF6               	incf	LCDGoto@ln,f
  1235  078F  3000               	movlw	0
  1236  0790  118A  246A  118A   	fcall	_LCDGoto
  1237  0793                     l1393:
  1238                           
  1239                           ;LCD_Main.c: 302:         LCDPutStr("                ");
  1240  0793  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1241  0794  00F6               	movwf	LCDPutStr@str
  1242  0795  3080               	movlw	128
  1243  0796  00F7               	movwf	LCDPutStr@str+1
  1244  0797  118A  23F0  118A   	fcall	_LCDPutStr
  1245  079A                     l1395:
  1246                           
  1247                           ;LCD_Main.c: 303:         LCDPutCmd(0x02);
  1248  079A  3002               	movlw	2
  1249  079B  118A  2378  118A   	fcall	_LCDPutCmd
  1250  079E                     l1397:
  1251                           
  1252                           ;LCD_Main.c: 304:         RC4 = 0;
  1253  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1254  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1255  07A0  1207               	bcf	7,4	;volatile
  1256  07A1                     l1399:
  1257  07A1                     l1401:
  1258                           
  1259                           ;LCD_Main.c: 306:         for (i=0;i< ExposureTime;i++)
  1260  07A1  01BF               	clrf	main@i
  1261  07A2  01C0               	clrf	main@i+1
  1262  07A3  2FE1               	goto	l1415
  1263  07A4                     l1403:
  1264                           
  1265                           ;LCD_Main.c: 307:         {;LCD_Main.c: 308:             _delay((unsigned long)((1000)*(
      +                          4194304/4000.0)));
  1266  07A4  3006               	movlw	6
  1267  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1268  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1269  07A7  00AB               	movwf	??_main+2
  1270  07A8  3052               	movlw	82
  1271  07A9  00AA               	movwf	??_main+1
  1272  07AA  30C3               	movlw	195
  1273  07AB  00A9               	movwf	??_main
  1274  07AC                     u907:
  1275  07AC  0BA9               	decfsz	??_main,f
  1276  07AD  2FAC               	goto	u907
  1277  07AE  0BAA               	decfsz	??_main+1,f
  1278  07AF  2FAC               	goto	u907
  1279  07B0  0BAB               	decfsz	??_main+2,f
  1280  07B1  2FAC               	goto	u907
  1281  07B2  0000               	nop
  1282  07B3                     l1405:
  1283                           
  1284                           ;LCD_Main.c: 309:             itoa(iTime, i+1, 10);
  1285  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1286  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1287  07B5  083F               	movf	main@i,w
  1288  07B6  3E01               	addlw	1
  1289  07B7  00A4               	movwf	itoa@val
  1290  07B8  0840               	movf	main@i+1,w
  1291  07B9  1803               	skipnc
  1292  07BA  3E01               	addlw	1
  1293  07BB  3E00               	addlw	0
  1294  07BC  00A5               	movwf	itoa@val+1
  1295  07BD  300A               	movlw	10
  1296  07BE  00A6               	movwf	itoa@base
  1297  07BF  3000               	movlw	0
  1298  07C0  00A7               	movwf	itoa@base+1
  1299  07C1  3033               	movlw	(low (main@iTime| 0))& (0+255)
  1300  07C2  118A  23CC  118A   	fcall	_itoa
  1301  07C5                     l1407:
  1302                           
  1303                           ;LCD_Main.c: 310:             LCDGoto(0,1);
  1304  07C5  01F6               	clrf	LCDGoto@ln
  1305  07C6  0AF6               	incf	LCDGoto@ln,f
  1306  07C7  3000               	movlw	0
  1307  07C8  118A  246A  118A   	fcall	_LCDGoto
  1308  07CB                     l1409:
  1309                           
  1310                           ;LCD_Main.c: 311:             LCDPutStr(iTime);
  1311  07CB  3033               	movlw	(low (main@iTime| 0))& (0+255)
  1312  07CC  00F6               	movwf	LCDPutStr@str
  1313  07CD  3000               	movlw	0
  1314  07CE  00F7               	movwf	LCDPutStr@str+1
  1315  07CF  118A  23F0  118A   	fcall	_LCDPutStr
  1316  07D2                     l1411:
  1317                           
  1318                           ;LCD_Main.c: 312:             LCDPutStr(" sec last exp");
  1319  07D2  304F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1320  07D3  00F6               	movwf	LCDPutStr@str
  1321  07D4  3080               	movlw	128
  1322  07D5  00F7               	movwf	LCDPutStr@str+1
  1323  07D6  118A  23F0  118A   	fcall	_LCDPutStr
  1324  07D9                     l1413:
  1325                           
  1326                           ;LCD_Main.c: 313:         }
  1327  07D9  3001               	movlw	1
  1328  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1329  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1330  07DC  07BF               	addwf	main@i,f
  1331  07DD  1803               	skipnc
  1332  07DE  0AC0               	incf	main@i+1,f
  1333  07DF  3000               	movlw	0
  1334  07E0  07C0               	addwf	main@i+1,f
  1335  07E1                     l1415:
  1336  07E1  0840               	movf	main@i+1,w
  1337  07E2  3A80               	xorlw	128
  1338  07E3  00A9               	movwf	??_main
  1339  07E4  0842               	movf	main@ExposureTime+1,w
  1340  07E5  3A80               	xorlw	128
  1341  07E6  0229               	subwf	??_main,w
  1342  07E7  1D03               	skipz
  1343  07E8  2FEB               	goto	u845
  1344  07E9  0841               	movf	main@ExposureTime,w
  1345  07EA  023F               	subwf	main@i,w
  1346  07EB                     u845:
  1347  07EB  1C03               	skipc
  1348  07EC  2FEE               	goto	u841
  1349  07ED  2FEF               	goto	u840
  1350  07EE                     u841:
  1351  07EE  2FA4               	goto	l1403
  1352  07EF                     u840:
  1353  07EF                     l107:
  1354                           
  1355                           ;LCD_Main.c: 315:         RC4 = 1;
  1356  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  1357  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  1358  07F1  1607               	bsf	7,4	;volatile
  1359  07F2                     l1417:
  1360                           
  1361                           ;LCD_Main.c: 316:         LCDPutCmd(0x02);
  1362  07F2  3002               	movlw	2
  1363  07F3  118A  2378  118A   	fcall	_LCDPutCmd
  1364                           
  1365                           ;LCD_Main.c: 317:     }
  1366  07F6  2DF8               	goto	l1307
  1367  07F7                     l104:	
  1368                           ;LCD_Main.c: 318:     else
  1369                           
  1370                           
  1371                           ;LCD_Main.c: 319:     {;LCD_Main.c: 320:      RC4 = 1;
  1372  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  1373  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  1374  07F9  1607               	bsf	7,4	;volatile
  1375  07FA  2DF8               	goto	l1307
  1376  07FB  118A  2800         	ljmp	start
  1377  07FD                     __end_of_main:
  1378                           
  1379                           	psect	text1
  1380  03AC                     __ptext1:	
  1381 ;; *************** function _memset *****************
  1382 ;; Defined at:
  1383 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memset.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  p1              1    wreg     PTR void 
  1386 ;;		 -> main@ExpTime(6), 
  1387 ;;  c               2    0[COMMON] int 
  1388 ;;  n               2    2[COMMON] unsigned int 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  p1              1    5[COMMON] PTR void 
  1391 ;;		 -> main@ExpTime(6), 
  1392 ;;  p               1    6[COMMON] PTR unsigned char 
  1393 ;;		 -> main@ExpTime(6), 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      PTR void 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1403 ;;      Params:         4       0       0       0
  1404 ;;      Locals:         2       0       0       0
  1405 ;;      Temps:          1       0       0       0
  1406 ;;      Totals:         7       0       0       0
  1407 ;;Total ram usage:        7 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416  03AC                     _memset:	
  1417                           ;psect for function _memset
  1418                           
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1422                           ;memset@p1 stored from wreg
  1423  03AC  00F5               	movwf	memset@p1
  1424  03AD                     l1281:
  1425  03AD  0875               	movf	memset@p1,w
  1426  03AE  00F4               	movwf	??_memset
  1427  03AF  0874               	movf	??_memset,w
  1428  03B0  00F6               	movwf	memset@p
  1429  03B1  2BBD               	goto	l1287
  1430  03B2                     l1283:
  1431  03B2  0870               	movf	memset@c,w
  1432  03B3  00F4               	movwf	??_memset
  1433  03B4  0876               	movf	memset@p,w
  1434  03B5  0084               	movwf	4
  1435  03B6  0874               	movf	??_memset,w
  1436  03B7  1383               	bcf	3,7	;select IRP bank0
  1437  03B8  0080               	movwf	0
  1438  03B9                     l1285:
  1439  03B9  3001               	movlw	1
  1440  03BA  00F4               	movwf	??_memset
  1441  03BB  0874               	movf	??_memset,w
  1442  03BC  07F6               	addwf	memset@p,f
  1443  03BD                     l1287:
  1444  03BD  3001               	movlw	1
  1445  03BE  02F2               	subwf	memset@n,f
  1446  03BF  3000               	movlw	0
  1447  03C0  1C03               	skipc
  1448  03C1  03F3               	decf	memset@n+1,f
  1449  03C2  02F3               	subwf	memset@n+1,f
  1450  03C3  0A72               	incf	memset@n,w
  1451  03C4  1D03               	skipz
  1452  03C5  2BCA               	goto	u741
  1453  03C6  0A73               	incf	memset@n+1,w
  1454  03C7  1D03               	btfss	3,2
  1455  03C8  2BCA               	goto	u741
  1456  03C9  2BCB               	goto	u740
  1457  03CA                     u741:
  1458  03CA  2BB2               	goto	l1283
  1459  03CB                     u740:
  1460  03CB                     l665:
  1461  03CB  0008               	return
  1462  03CC                     __end_of_memset:
  1463                           
  1464                           	psect	text2
  1465  03CC                     __ptext2:	
  1466 ;; *************** function _itoa *****************
  1467 ;; Defined at:
  1468 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  buf             1    wreg     PTR unsigned char 
  1471 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1472 ;;  val             2    4[BANK0 ] int 
  1473 ;;  base            2    6[BANK0 ] int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  1476 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1477 ;;  cp              1    0        PTR unsigned char 
  1478 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      PTR unsigned char 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1488 ;;      Params:         0       4       0       0
  1489 ;;      Locals:         0       1       0       0
  1490 ;;      Temps:          1       0       0       0
  1491 ;;      Totals:         1       5       0       0
  1492 ;;Total ram usage:        6 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 2
  1495 ;; This function calls:
  1496 ;;		_utoa
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502  03CC                     _itoa:	
  1503                           ;psect for function _itoa
  1504                           
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1508                           ;itoa@buf stored from wreg
  1509  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1510  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1511  03CE  00A8               	movwf	itoa@buf
  1512  03CF                     l1267:
  1513  03CF                     l1269:
  1514  03CF  1FA5               	btfss	itoa@val+1,7
  1515  03D0  2BD2               	goto	u731
  1516  03D1  2BD3               	goto	u730
  1517  03D2                     u731:
  1518  03D2  2BE3               	goto	l1277
  1519  03D3                     u730:
  1520  03D3                     l1271:
  1521  03D3  302D               	movlw	45
  1522  03D4  00FD               	movwf	??_itoa
  1523  03D5  0828               	movf	itoa@buf,w
  1524  03D6  0084               	movwf	4
  1525  03D7  087D               	movf	??_itoa,w
  1526  03D8  1383               	bcf	3,7	;select IRP bank0
  1527  03D9  0080               	movwf	0
  1528  03DA                     l1273:
  1529  03DA  3001               	movlw	1
  1530  03DB  00FD               	movwf	??_itoa
  1531  03DC  087D               	movf	??_itoa,w
  1532  03DD  07A8               	addwf	itoa@buf,f
  1533  03DE                     l1275:
  1534  03DE  09A4               	comf	itoa@val,f
  1535  03DF  09A5               	comf	itoa@val+1,f
  1536  03E0  0AA4               	incf	itoa@val,f
  1537  03E1  1903               	skipnz
  1538  03E2  0AA5               	incf	itoa@val+1,f
  1539  03E3                     l1277:
  1540  03E3  0825               	movf	itoa@val+1,w
  1541  03E4  00F9               	movwf	utoa@val+1
  1542  03E5  0824               	movf	itoa@val,w
  1543  03E6  00F8               	movwf	utoa@val
  1544  03E7  0827               	movf	itoa@base+1,w
  1545  03E8  00FB               	movwf	utoa@base+1
  1546  03E9  0826               	movf	itoa@base,w
  1547  03EA  00FA               	movwf	utoa@base
  1548  03EB  0828               	movf	itoa@buf,w
  1549  03EC  118A  2556  118A   	fcall	_utoa
  1550  03EF                     l651:
  1551  03EF  0008               	return
  1552  03F0                     __end_of_itoa:
  1553                           
  1554                           	psect	text3
  1555  0556                     __ptext3:	
  1556 ;; *************** function _utoa *****************
  1557 ;; Defined at:
  1558 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  buf             1    wreg     PTR unsigned char 
  1561 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1562 ;;  val             2    8[COMMON] unsigned int 
  1563 ;;  base            2   10[COMMON] int 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1566 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1567 ;;  v               2    0[BANK0 ] unsigned int 
  1568 ;;  c               1    2[BANK0 ] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      PTR unsigned char 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1578 ;;      Params:         4       0       0       0
  1579 ;;      Locals:         0       4       0       0
  1580 ;;      Temps:          1       0       0       0
  1581 ;;      Totals:         5       4       0       0
  1582 ;;Total ram usage:        9 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 1
  1585 ;; This function calls:
  1586 ;;		___lwdiv
  1587 ;;		___lwmod
  1588 ;; This function is called by:
  1589 ;;		_itoa
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593  0556                     _utoa:	
  1594                           ;psect for function _utoa
  1595                           
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1599                           ;utoa@buf stored from wreg
  1600  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0558  00A3               	movwf	utoa@buf
  1603  0559                     l1177:
  1604  0559  0879               	movf	utoa@val+1,w
  1605  055A  00A1               	movwf	utoa@v+1
  1606  055B  0878               	movf	utoa@val,w
  1607  055C  00A0               	movwf	utoa@v
  1608  055D                     l1179:
  1609  055D  087B               	movf	utoa@base+1,w
  1610  055E  00F1               	movwf	___lwdiv@divisor+1
  1611  055F  087A               	movf	utoa@base,w
  1612  0560  00F0               	movwf	___lwdiv@divisor
  1613  0561  0821               	movf	utoa@v+1,w
  1614  0562  00F3               	movwf	___lwdiv@dividend+1
  1615  0563  0820               	movf	utoa@v,w
  1616  0564  00F2               	movwf	___lwdiv@dividend
  1617  0565  118A  2512  118A   	fcall	___lwdiv
  1618  0568  0871               	movf	?___lwdiv+1,w
  1619  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1620  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1621  056B  00A1               	movwf	utoa@v+1
  1622  056C  0870               	movf	?___lwdiv,w
  1623  056D  00A0               	movwf	utoa@v
  1624  056E                     l1181:
  1625  056E  3001               	movlw	1
  1626  056F  00FC               	movwf	??_utoa
  1627  0570  087C               	movf	??_utoa,w
  1628  0571  07A3               	addwf	utoa@buf,f
  1629  0572                     l1183:
  1630  0572  0820               	movf	utoa@v,w
  1631  0573  0421               	iorwf	utoa@v+1,w
  1632  0574  1D03               	btfss	3,2
  1633  0575  2D77               	goto	u641
  1634  0576  2D78               	goto	u640
  1635  0577                     u641:
  1636  0577  2D5D               	goto	l1179
  1637  0578                     u640:
  1638  0578                     l1185:
  1639  0578  0823               	movf	utoa@buf,w
  1640  0579  0084               	movwf	4
  1641  057A  1383               	bcf	3,7	;select IRP bank0
  1642  057B  0180               	clrf	0
  1643  057C                     l1187:
  1644  057C  3001               	movlw	1
  1645  057D  02A3               	subwf	utoa@buf,f
  1646  057E                     l1189:
  1647  057E  087B               	movf	utoa@base+1,w
  1648  057F  00F1               	movwf	___lwmod@divisor+1
  1649  0580  087A               	movf	utoa@base,w
  1650  0581  00F0               	movwf	___lwmod@divisor
  1651  0582  0879               	movf	utoa@val+1,w
  1652  0583  00F3               	movwf	___lwmod@dividend+1
  1653  0584  0878               	movf	utoa@val,w
  1654  0585  00F2               	movwf	___lwmod@dividend
  1655  0586  118A  2496  118A   	fcall	___lwmod
  1656  0589  0870               	movf	?___lwmod,w
  1657  058A  00FC               	movwf	??_utoa
  1658  058B  087C               	movf	??_utoa,w
  1659  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1660  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1661  058E  00A2               	movwf	utoa@c
  1662  058F                     l1191:
  1663  058F  087B               	movf	utoa@base+1,w
  1664  0590  00F1               	movwf	___lwdiv@divisor+1
  1665  0591  087A               	movf	utoa@base,w
  1666  0592  00F0               	movwf	___lwdiv@divisor
  1667  0593  0879               	movf	utoa@val+1,w
  1668  0594  00F3               	movwf	___lwdiv@dividend+1
  1669  0595  0878               	movf	utoa@val,w
  1670  0596  00F2               	movwf	___lwdiv@dividend
  1671  0597  118A  2512  118A   	fcall	___lwdiv
  1672  059A  0871               	movf	?___lwdiv+1,w
  1673  059B  00F9               	movwf	utoa@val+1
  1674  059C  0870               	movf	?___lwdiv,w
  1675  059D  00F8               	movwf	utoa@val
  1676  059E                     l1193:
  1677  059E  300A               	movlw	10
  1678  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1679  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1680  05A1  0222               	subwf	utoa@c,w
  1681  05A2  1C03               	skipc
  1682  05A3  2DA5               	goto	u651
  1683  05A4  2DA6               	goto	u650
  1684  05A5                     u651:
  1685  05A5  2DAA               	goto	l657
  1686  05A6                     u650:
  1687  05A6                     l1195:
  1688  05A6  3007               	movlw	7
  1689  05A7  00FC               	movwf	??_utoa
  1690  05A8  087C               	movf	??_utoa,w
  1691  05A9  07A2               	addwf	utoa@c,f
  1692  05AA                     l657:
  1693  05AA  3030               	movlw	48
  1694  05AB  00FC               	movwf	??_utoa
  1695  05AC  087C               	movf	??_utoa,w
  1696  05AD  07A2               	addwf	utoa@c,f
  1697  05AE                     l1197:
  1698  05AE  0822               	movf	utoa@c,w
  1699  05AF  00FC               	movwf	??_utoa
  1700  05B0  0823               	movf	utoa@buf,w
  1701  05B1  0084               	movwf	4
  1702  05B2  087C               	movf	??_utoa,w
  1703  05B3  1383               	bcf	3,7	;select IRP bank0
  1704  05B4  0080               	movwf	0
  1705  05B5                     l1199:
  1706  05B5  3001               	movlw	1
  1707  05B6  02A3               	subwf	utoa@buf,f
  1708  05B7                     l1201:
  1709  05B7  0878               	movf	utoa@val,w
  1710  05B8  0479               	iorwf	utoa@val+1,w
  1711  05B9  1D03               	btfss	3,2
  1712  05BA  2DBC               	goto	u661
  1713  05BB  2DBD               	goto	u660
  1714  05BC                     u661:
  1715  05BC  2D7E               	goto	l1189
  1716  05BD                     u660:
  1717  05BD                     l1203:
  1718                           
  1719                           ;	Return value of _utoa is never used
  1720  05BD  3001               	movlw	1
  1721  05BE  00FC               	movwf	??_utoa
  1722  05BF  087C               	movf	??_utoa,w
  1723  05C0  07A3               	addwf	utoa@buf,f
  1724  05C1                     l659:
  1725  05C1  0008               	return
  1726  05C2                     __end_of_utoa:
  1727                           
  1728                           	psect	text4
  1729  0496                     __ptext4:	
  1730 ;; *************** function ___lwmod *****************
  1731 ;; Defined at:
  1732 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  divisor         2    0[COMMON] unsigned int 
  1735 ;;  dividend        2    2[COMMON] unsigned int 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  counter         1    5[COMMON] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2    0[COMMON] unsigned int 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1747 ;;      Params:         4       0       0       0
  1748 ;;      Locals:         1       0       0       0
  1749 ;;      Temps:          1       0       0       0
  1750 ;;      Totals:         6       0       0       0
  1751 ;;Total ram usage:        6 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_utoa
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760  0496                     ___lwmod:	
  1761                           ;psect for function ___lwmod
  1762                           
  1763  0496                     l1147:	
  1764                           ;incstack = 0
  1765                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1766                           
  1767  0496  0870               	movf	___lwmod@divisor,w
  1768  0497  0471               	iorwf	___lwmod@divisor+1,w
  1769  0498  1903               	btfsc	3,2
  1770  0499  2C9B               	goto	u581
  1771  049A  2C9C               	goto	u580
  1772  049B                     u581:
  1773  049B  2CCB               	goto	l1165
  1774  049C                     u580:
  1775  049C                     l1149:
  1776  049C  01F5               	clrf	___lwmod@counter
  1777  049D  0AF5               	incf	___lwmod@counter,f
  1778  049E  2CAA               	goto	l1155
  1779  049F                     l1151:
  1780  049F  3001               	movlw	1
  1781  04A0                     u595:
  1782  04A0  1003               	clrc
  1783  04A1  0DF0               	rlf	___lwmod@divisor,f
  1784  04A2  0DF1               	rlf	___lwmod@divisor+1,f
  1785  04A3  3EFF               	addlw	-1
  1786  04A4  1D03               	skipz
  1787  04A5  2CA0               	goto	u595
  1788  04A6                     l1153:
  1789  04A6  3001               	movlw	1
  1790  04A7  00F4               	movwf	??___lwmod
  1791  04A8  0874               	movf	??___lwmod,w
  1792  04A9  07F5               	addwf	___lwmod@counter,f
  1793  04AA                     l1155:
  1794  04AA  1FF1               	btfss	___lwmod@divisor+1,7
  1795  04AB  2CAD               	goto	u601
  1796  04AC  2CAE               	goto	u600
  1797  04AD                     u601:
  1798  04AD  2C9F               	goto	l1151
  1799  04AE                     u600:
  1800  04AE                     l1157:
  1801  04AE  0871               	movf	___lwmod@divisor+1,w
  1802  04AF  0273               	subwf	___lwmod@dividend+1,w
  1803  04B0  1D03               	skipz
  1804  04B1  2CB4               	goto	u615
  1805  04B2  0870               	movf	___lwmod@divisor,w
  1806  04B3  0272               	subwf	___lwmod@dividend,w
  1807  04B4                     u615:
  1808  04B4  1C03               	skipc
  1809  04B5  2CB7               	goto	u611
  1810  04B6  2CB8               	goto	u610
  1811  04B7                     u611:
  1812  04B7  2CBE               	goto	l1161
  1813  04B8                     u610:
  1814  04B8                     l1159:
  1815  04B8  0870               	movf	___lwmod@divisor,w
  1816  04B9  02F2               	subwf	___lwmod@dividend,f
  1817  04BA  0871               	movf	___lwmod@divisor+1,w
  1818  04BB  1C03               	skipc
  1819  04BC  03F3               	decf	___lwmod@dividend+1,f
  1820  04BD  02F3               	subwf	___lwmod@dividend+1,f
  1821  04BE                     l1161:
  1822  04BE  3001               	movlw	1
  1823  04BF                     u625:
  1824  04BF  1003               	clrc
  1825  04C0  0CF1               	rrf	___lwmod@divisor+1,f
  1826  04C1  0CF0               	rrf	___lwmod@divisor,f
  1827  04C2  3EFF               	addlw	-1
  1828  04C3  1D03               	skipz
  1829  04C4  2CBF               	goto	u625
  1830  04C5                     l1163:
  1831  04C5  3001               	movlw	1
  1832  04C6  02F5               	subwf	___lwmod@counter,f
  1833  04C7  1D03               	btfss	3,2
  1834  04C8  2CCA               	goto	u631
  1835  04C9  2CCB               	goto	u630
  1836  04CA                     u631:
  1837  04CA  2CAE               	goto	l1157
  1838  04CB                     u630:
  1839  04CB                     l1165:
  1840  04CB  0873               	movf	___lwmod@dividend+1,w
  1841  04CC  00F1               	movwf	?___lwmod+1
  1842  04CD  0872               	movf	___lwmod@dividend,w
  1843  04CE  00F0               	movwf	?___lwmod
  1844  04CF                     l479:
  1845  04CF  0008               	return
  1846  04D0                     __end_of___lwmod:
  1847                           
  1848                           	psect	text5
  1849  0512                     __ptext5:	
  1850 ;; *************** function ___lwdiv *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  divisor         2    0[COMMON] unsigned int 
  1855 ;;  dividend        2    2[COMMON] unsigned int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  quotient        2    5[COMMON] unsigned int 
  1858 ;;  counter         1    7[COMMON] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  2    0[COMMON] unsigned int 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1868 ;;      Params:         4       0       0       0
  1869 ;;      Locals:         3       0       0       0
  1870 ;;      Temps:          1       0       0       0
  1871 ;;      Totals:         8       0       0       0
  1872 ;;Total ram usage:        8 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_utoa
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881  0512                     ___lwdiv:	
  1882                           ;psect for function ___lwdiv
  1883                           
  1884  0512                     l1121:	
  1885                           ;incstack = 0
  1886                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1887                           
  1888  0512  01F5               	clrf	___lwdiv@quotient
  1889  0513  01F6               	clrf	___lwdiv@quotient+1
  1890  0514                     l1123:
  1891  0514  0870               	movf	___lwdiv@divisor,w
  1892  0515  0471               	iorwf	___lwdiv@divisor+1,w
  1893  0516  1903               	btfsc	3,2
  1894  0517  2D19               	goto	u511
  1895  0518  2D1A               	goto	u510
  1896  0519                     u511:
  1897  0519  2D51               	goto	l1143
  1898  051A                     u510:
  1899  051A                     l1125:
  1900  051A  01F7               	clrf	___lwdiv@counter
  1901  051B  0AF7               	incf	___lwdiv@counter,f
  1902  051C  2D28               	goto	l1131
  1903  051D                     l1127:
  1904  051D  3001               	movlw	1
  1905  051E                     u525:
  1906  051E  1003               	clrc
  1907  051F  0DF0               	rlf	___lwdiv@divisor,f
  1908  0520  0DF1               	rlf	___lwdiv@divisor+1,f
  1909  0521  3EFF               	addlw	-1
  1910  0522  1D03               	skipz
  1911  0523  2D1E               	goto	u525
  1912  0524                     l1129:
  1913  0524  3001               	movlw	1
  1914  0525  00F4               	movwf	??___lwdiv
  1915  0526  0874               	movf	??___lwdiv,w
  1916  0527  07F7               	addwf	___lwdiv@counter,f
  1917  0528                     l1131:
  1918  0528  1FF1               	btfss	___lwdiv@divisor+1,7
  1919  0529  2D2B               	goto	u531
  1920  052A  2D2C               	goto	u530
  1921  052B                     u531:
  1922  052B  2D1D               	goto	l1127
  1923  052C                     u530:
  1924  052C                     l1133:
  1925  052C  3001               	movlw	1
  1926  052D                     u545:
  1927  052D  1003               	clrc
  1928  052E  0DF5               	rlf	___lwdiv@quotient,f
  1929  052F  0DF6               	rlf	___lwdiv@quotient+1,f
  1930  0530  3EFF               	addlw	-1
  1931  0531  1D03               	skipz
  1932  0532  2D2D               	goto	u545
  1933  0533  0871               	movf	___lwdiv@divisor+1,w
  1934  0534  0273               	subwf	___lwdiv@dividend+1,w
  1935  0535  1D03               	skipz
  1936  0536  2D39               	goto	u555
  1937  0537  0870               	movf	___lwdiv@divisor,w
  1938  0538  0272               	subwf	___lwdiv@dividend,w
  1939  0539                     u555:
  1940  0539  1C03               	skipc
  1941  053A  2D3C               	goto	u551
  1942  053B  2D3D               	goto	u550
  1943  053C                     u551:
  1944  053C  2D44               	goto	l1139
  1945  053D                     u550:
  1946  053D                     l1135:
  1947  053D  0870               	movf	___lwdiv@divisor,w
  1948  053E  02F2               	subwf	___lwdiv@dividend,f
  1949  053F  0871               	movf	___lwdiv@divisor+1,w
  1950  0540  1C03               	skipc
  1951  0541  03F3               	decf	___lwdiv@dividend+1,f
  1952  0542  02F3               	subwf	___lwdiv@dividend+1,f
  1953  0543                     l1137:
  1954  0543  1475               	bsf	___lwdiv@quotient,0
  1955  0544                     l1139:
  1956  0544  3001               	movlw	1
  1957  0545                     u565:
  1958  0545  1003               	clrc
  1959  0546  0CF1               	rrf	___lwdiv@divisor+1,f
  1960  0547  0CF0               	rrf	___lwdiv@divisor,f
  1961  0548  3EFF               	addlw	-1
  1962  0549  1D03               	skipz
  1963  054A  2D45               	goto	u565
  1964  054B                     l1141:
  1965  054B  3001               	movlw	1
  1966  054C  02F7               	subwf	___lwdiv@counter,f
  1967  054D  1D03               	btfss	3,2
  1968  054E  2D50               	goto	u571
  1969  054F  2D51               	goto	u570
  1970  0550                     u571:
  1971  0550  2D2C               	goto	l1133
  1972  0551                     u570:
  1973  0551                     l1143:
  1974  0551  0876               	movf	___lwdiv@quotient+1,w
  1975  0552  00F1               	movwf	?___lwdiv+1
  1976  0553  0875               	movf	___lwdiv@quotient,w
  1977  0554  00F0               	movwf	?___lwdiv
  1978  0555                     l469:
  1979  0555  0008               	return
  1980  0556                     __end_of___lwdiv:
  1981                           
  1982                           	psect	text6
  1983  043F                     __ptext6:	
  1984 ;; *************** function _LCD_Initialize *****************
  1985 ;; Defined at:
  1986 ;;		line 61 in file "LCD_Main.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, pclath, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2000 ;;      Params:         0       0       0       0
  2001 ;;      Locals:         0       0       0       0
  2002 ;;      Temps:          2       0       0       0
  2003 ;;      Totals:         2       0       0       0
  2004 ;;Total ram usage:        2 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 3
  2007 ;; This function calls:
  2008 ;;		_LCDPutCmd
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014  043F                     _LCD_Initialize:	
  2015                           ;psect for function _LCD_Initialize
  2016                           
  2017  043F                     l1207:	
  2018                           ;incstack = 0
  2019                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2020                           
  2021                           
  2022                           ;LCD_Main.c: 64: PORTB = 0;
  2023  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0441  0186               	clrf	6	;volatile
  2026  0442                     l1209:
  2027                           
  2028                           ;LCD_Main.c: 65: PORTC = 0b00010000;
  2029  0442  3010               	movlw	16
  2030  0443  0087               	movwf	7	;volatile
  2031  0444                     l1211:
  2032                           
  2033                           ;LCD_Main.c: 66: TRISB = 0x00;
  2034  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0446  0186               	clrf	6	;volatile
  2037  0447                     l1213:
  2038                           
  2039                           ;LCD_Main.c: 67: TRISC = 0x00;
  2040  0447  0187               	clrf	7	;volatile
  2041  0448                     l1215:
  2042                           
  2043                           ;LCD_Main.c: 70: _delay((unsigned long)((15)*(4194304/4000.0)));
  2044  0448  3015               	movlw	21
  2045  0449  00F7               	movwf	??_LCD_Initialize+1
  2046  044A  306B               	movlw	107
  2047  044B  00F6               	movwf	??_LCD_Initialize
  2048  044C                     u917:
  2049  044C  0BF6               	decfsz	??_LCD_Initialize,f
  2050  044D  2C4C               	goto	u917
  2051  044E  0BF7               	decfsz	??_LCD_Initialize+1,f
  2052  044F  2C4C               	goto	u917
  2053  0450  2C51               	nop2
  2054  0451                     l1217:
  2055                           
  2056                           ;LCD_Main.c: 71: LCDPutCmd(0x02);
  2057  0451  3002               	movlw	2
  2058  0452  118A  2378  118A   	fcall	_LCDPutCmd
  2059  0455                     l1219:
  2060                           
  2061                           ;LCD_Main.c: 73: LCDPutCmd(0x28);
  2062  0455  3028               	movlw	40
  2063  0456  118A  2378  118A   	fcall	_LCDPutCmd
  2064  0459                     l1221:
  2065                           
  2066                           ;LCD_Main.c: 75: LCDPutCmd(0x0C);
  2067  0459  300C               	movlw	12
  2068  045A  118A  2378  118A   	fcall	_LCDPutCmd
  2069  045D                     l1223:
  2070                           
  2071                           ;LCD_Main.c: 77: LCDPutCmd(0x06);
  2072  045D  3006               	movlw	6
  2073  045E  118A  2378  118A   	fcall	_LCDPutCmd
  2074  0461                     l1225:
  2075                           
  2076                           ;LCD_Main.c: 79: LCDPutCmd(0x01);
  2077  0461  3001               	movlw	1
  2078  0462  118A  2378  118A   	fcall	_LCDPutCmd
  2079  0465                     l1227:
  2080                           
  2081                           ;LCD_Main.c: 81: LCDPutCmd(0x80);
  2082  0465  3080               	movlw	128
  2083  0466  118A  2378  118A   	fcall	_LCDPutCmd
  2084  0469                     l45:
  2085  0469  0008               	return
  2086  046A                     __end_of_LCD_Initialize:
  2087                           
  2088                           	psect	text7
  2089  03F0                     __ptext7:	
  2090 ;; *************** function _LCDPutStr *****************
  2091 ;; Defined at:
  2092 ;;		line 170 in file "LCD_Main.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  str             2    6[COMMON] PTR const unsigned char 
  2095 ;;		 -> STR_10(14), main@iTime(6), STR_9(17), STR_8(15), 
  2096 ;;		 -> STR_7(15), STR_6(15), STR_5(6), STR_4(16), 
  2097 ;;		 -> STR_3(15), main@ExpTime(6), STR_2(15), STR_1(15), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  i               1    9[COMMON] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2109 ;;      Params:         2       0       0       0
  2110 ;;      Locals:         1       0       0       0
  2111 ;;      Temps:          1       0       0       0
  2112 ;;      Totals:         4       0       0       0
  2113 ;;Total ram usage:        4 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; Hardware stack levels required when called: 3
  2116 ;; This function calls:
  2117 ;;		_LCDPutChar
  2118 ;; This function is called by:
  2119 ;;		_main
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123  03F0                     _LCDPutStr:	
  2124                           ;psect for function _LCDPutStr
  2125                           
  2126  03F0                     l1229:	
  2127                           ;incstack = 0
  2128                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2129                           
  2130                           
  2131                           ;LCD_Main.c: 170: void LCDPutStr(const char *str);LCD_Main.c: 171: {;LCD_Main.c: 172: ch
      +                          ar i=0;
  2132  03F0  01F9               	clrf	LCDPutStr@i
  2133                           
  2134                           ;LCD_Main.c: 175: while (str[i])
  2135  03F1  2C03               	goto	l1235
  2136  03F2                     l1231:
  2137                           
  2138                           ;LCD_Main.c: 176: {;LCD_Main.c: 178: LCDPutChar(str[i++]);
  2139  03F2  0879               	movf	LCDPutStr@i,w
  2140  03F3  0776               	addwf	LCDPutStr@str,w
  2141  03F4  0084               	movwf	4
  2142  03F5  0877               	movf	LCDPutStr@str+1,w
  2143  03F6  1803               	skipnc
  2144  03F7  0A77               	incf	LCDPutStr@str+1,w
  2145  03F8  00FF               	movwf	btemp+1
  2146  03F9  118A  2002  118A   	fcall	stringtab
  2147  03FC  118A  2388  118A   	fcall	_LCDPutChar
  2148  03FF                     l1233:
  2149  03FF  3001               	movlw	1
  2150  0400  00F8               	movwf	??_LCDPutStr
  2151  0401  0878               	movf	??_LCDPutStr,w
  2152  0402  07F9               	addwf	LCDPutStr@i,f
  2153  0403                     l1235:
  2154                           
  2155                           ;LCD_Main.c: 175: while (str[i])
  2156  0403  0879               	movf	LCDPutStr@i,w
  2157  0404  0776               	addwf	LCDPutStr@str,w
  2158  0405  0084               	movwf	4
  2159  0406  0877               	movf	LCDPutStr@str+1,w
  2160  0407  1803               	skipnc
  2161  0408  0A77               	incf	LCDPutStr@str+1,w
  2162  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2163  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2164  040B  00FF               	movwf	btemp+1
  2165  040C  118A  2002  118A   	fcall	stringtab
  2166  040F  3A00               	xorlw	0
  2167  0410  1D03               	skipz
  2168  0411  2C13               	goto	u671
  2169  0412  2C14               	goto	u670
  2170  0413                     u671:
  2171  0413  2BF2               	goto	l1231
  2172  0414                     u670:
  2173  0414                     l71:
  2174  0414  0008               	return
  2175  0415                     __end_of_LCDPutStr:
  2176                           
  2177                           	psect	text8
  2178  0388                     __ptext8:	
  2179 ;; *************** function _LCDPutChar *****************
  2180 ;; Defined at:
  2181 ;;		line 144 in file "LCD_Main.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  ch              1    wreg     unsigned char 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  ch              1    5[COMMON] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0, pclath, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2195 ;;      Params:         0       0       0       0
  2196 ;;      Locals:         1       0       0       0
  2197 ;;      Temps:          2       0       0       0
  2198 ;;      Totals:         3       0       0       0
  2199 ;;Total ram usage:        3 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 2
  2202 ;; This function calls:
  2203 ;;		_LCDWriteNibble
  2204 ;; This function is called by:
  2205 ;;		_LCDPutStr
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209  0388                     _LCDPutChar:	
  2210                           ;psect for function _LCDPutChar
  2211                           
  2212                           
  2213                           ;incstack = 0
  2214                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  2215                           ;LCDPutChar@ch stored from wreg
  2216  0388  00F5               	movwf	LCDPutChar@ch
  2217  0389                     l1173:
  2218                           
  2219                           ;LCD_Main.c: 144: void LCDPutChar(char ch);LCD_Main.c: 145: {;LCD_Main.c: 146: _delay((u
      +                          nsigned long)((5)*(4194304/4000.0)));
  2220  0389  3007               	movlw	7
  2221  038A  00F4               	movwf	??_LCDPutChar+1
  2222  038B  30CD               	movlw	205
  2223  038C  00F3               	movwf	??_LCDPutChar
  2224  038D                     u927:
  2225  038D  0BF3               	decfsz	??_LCDPutChar,f
  2226  038E  2B8D               	goto	u927
  2227  038F  0BF4               	decfsz	??_LCDPutChar+1,f
  2228  0390  2B8D               	goto	u927
  2229  0391  2B92               	nop2
  2230  0392                     l1175:
  2231                           
  2232                           ;LCD_Main.c: 149: LCDWriteNibble(ch,1);
  2233  0392  01F1               	clrf	LCDWriteNibble@rs
  2234  0393  0AF1               	incf	LCDWriteNibble@rs,f
  2235  0394  0875               	movf	LCDPutChar@ch,w
  2236  0395  118A  24D0  118A   	fcall	_LCDWriteNibble
  2237  0398                     l62:
  2238  0398  0008               	return
  2239  0399                     __end_of_LCDPutChar:
  2240                           
  2241                           	psect	text9
  2242  046A                     __ptext9:	
  2243 ;; *************** function _LCDGoto *****************
  2244 ;; Defined at:
  2245 ;;		line 183 in file "LCD_Main.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  pos             1    wreg     unsigned char 
  2248 ;;  ln              1    6[COMMON] unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  pos             1   11[COMMON] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, pclath, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2260 ;;      Params:         1       0       0       0
  2261 ;;      Locals:         3       0       0       0
  2262 ;;      Temps:          2       0       0       0
  2263 ;;      Totals:         6       0       0       0
  2264 ;;Total ram usage:        6 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 3
  2267 ;; This function calls:
  2268 ;;		_LCDPutCmd
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274  046A                     _LCDGoto:	
  2275                           ;psect for function _LCDGoto
  2276                           
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  2280                           ;LCDGoto@pos stored from wreg
  2281  046A  00FB               	movwf	LCDGoto@pos
  2282  046B                     l1237:
  2283                           
  2284                           ;LCD_Main.c: 183: void LCDGoto(char pos,char ln);LCD_Main.c: 184: {;LCD_Main.c: 186: if 
      +                          ((ln > (2 -1)) || (pos > (16 -1)))
  2285  046B  3002               	movlw	2
  2286  046C  0276               	subwf	LCDGoto@ln,w
  2287  046D  1803               	skipnc
  2288  046E  2C70               	goto	u681
  2289  046F  2C71               	goto	u680
  2290  0470                     u681:
  2291  0470  2C95               	goto	l77
  2292  0471                     u680:
  2293  0471                     l1239:
  2294  0471  3010               	movlw	16
  2295  0472  027B               	subwf	LCDGoto@pos,w
  2296  0473  1C03               	skipc
  2297  0474  2C76               	goto	u691
  2298  0475  2C77               	goto	u690
  2299  0476                     u691:
  2300  0476  2C78               	goto	l1241
  2301  0477                     u690:
  2302  0477  2C95               	goto	l77
  2303  0478                     l1241:
  2304                           
  2305                           ;LCD_Main.c: 193: LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  2306  0478  0376               	decf	LCDGoto@ln,w
  2307  0479  1903               	btfsc	3,2
  2308  047A  2C7C               	goto	u701
  2309  047B  2C7D               	goto	u700
  2310  047C                     u701:
  2311  047C  2C83               	goto	l1245
  2312  047D                     u700:
  2313  047D                     l1243:
  2314  047D  3080               	movlw	128
  2315  047E  047B               	iorwf	LCDGoto@pos,w
  2316  047F  00F9               	movwf	_LCDGoto$138
  2317  0480  3000               	movlw	0
  2318  0481  00FA               	movwf	_LCDGoto$138+1
  2319  0482  2C88               	goto	l1247
  2320  0483                     l1245:
  2321  0483  30C0               	movlw	192
  2322  0484  047B               	iorwf	LCDGoto@pos,w
  2323  0485  00F9               	movwf	_LCDGoto$138
  2324  0486  3000               	movlw	0
  2325  0487  00FA               	movwf	_LCDGoto$138+1
  2326  0488                     l1247:
  2327  0488  0879               	movf	_LCDGoto$138,w
  2328  0489  118A  2378  118A   	fcall	_LCDPutCmd
  2329  048C                     l1249:
  2330                           
  2331                           ;LCD_Main.c: 196: _delay((unsigned long)((5)*(4194304/4000.0)));
  2332  048C  3007               	movlw	7
  2333  048D  00F8               	movwf	??_LCDGoto+1
  2334  048E  30CD               	movlw	205
  2335  048F  00F7               	movwf	??_LCDGoto
  2336  0490                     u937:
  2337  0490  0BF7               	decfsz	??_LCDGoto,f
  2338  0491  2C90               	goto	u937
  2339  0492  0BF8               	decfsz	??_LCDGoto+1,f
  2340  0493  2C90               	goto	u937
  2341  0494  2C95               	nop2
  2342  0495                     l77:
  2343  0495  0008               	return
  2344  0496                     __end_of_LCDGoto:
  2345                           
  2346                           	psect	text10
  2347  0378                     __ptext10:	
  2348 ;; *************** function _LCDPutCmd *****************
  2349 ;; Defined at:
  2350 ;;		line 155 in file "LCD_Main.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  ch              1    wreg     unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  ch              1    5[COMMON] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, pclath, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2364 ;;      Params:         0       0       0       0
  2365 ;;      Locals:         1       0       0       0
  2366 ;;      Temps:          2       0       0       0
  2367 ;;      Totals:         3       0       0       0
  2368 ;;Total ram usage:        3 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; Hardware stack levels required when called: 2
  2371 ;; This function calls:
  2372 ;;		_LCDWriteNibble
  2373 ;; This function is called by:
  2374 ;;		_LCD_Initialize
  2375 ;;		_LCDGoto
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380  0378                     _LCDPutCmd:	
  2381                           ;psect for function _LCDPutCmd
  2382                           
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  2386                           ;LCDPutCmd@ch stored from wreg
  2387  0378  00F5               	movwf	LCDPutCmd@ch
  2388  0379                     l1169:
  2389                           
  2390                           ;LCD_Main.c: 155: void LCDPutCmd(char ch);LCD_Main.c: 156: {;LCD_Main.c: 157: _delay((un
      +                          signed long)((5)*(4194304/4000.0)));
  2391  0379  3007               	movlw	7
  2392  037A  00F4               	movwf	??_LCDPutCmd+1
  2393  037B  30CD               	movlw	205
  2394  037C  00F3               	movwf	??_LCDPutCmd
  2395  037D                     u947:
  2396  037D  0BF3               	decfsz	??_LCDPutCmd,f
  2397  037E  2B7D               	goto	u947
  2398  037F  0BF4               	decfsz	??_LCDPutCmd+1,f
  2399  0380  2B7D               	goto	u947
  2400  0381  2B82               	nop2
  2401  0382                     l1171:
  2402                           
  2403                           ;LCD_Main.c: 160: LCDWriteNibble(ch,0);
  2404  0382  01F1               	clrf	LCDWriteNibble@rs
  2405  0383  0875               	movf	LCDPutCmd@ch,w
  2406  0384  118A  24D0  118A   	fcall	_LCDWriteNibble
  2407  0387                     l65:
  2408  0387  0008               	return
  2409  0388                     __end_of_LCDPutCmd:
  2410                           
  2411                           	psect	text11
  2412  04D0                     __ptext11:	
  2413 ;; *************** function _LCDWriteNibble *****************
  2414 ;; Defined at:
  2415 ;;		line 94 in file "LCD_Main.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  ch              1    wreg     unsigned char 
  2418 ;;  rs              1    1[COMMON] unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  ch              1    2[COMMON] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2430 ;;      Params:         1       0       0       0
  2431 ;;      Locals:         1       0       0       0
  2432 ;;      Temps:          0       0       0       0
  2433 ;;      Totals:         2       0       0       0
  2434 ;;Total ram usage:        2 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 1
  2437 ;; This function calls:
  2438 ;;		_ToggleEnable
  2439 ;; This function is called by:
  2440 ;;		_LCDPutChar
  2441 ;;		_LCDPutCmd
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445  04D0                     _LCDWriteNibble:	
  2446                           ;psect for function _LCDWriteNibble
  2447                           
  2448                           
  2449                           ;incstack = 0
  2450                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0+pclath+cstack]
  2451                           ;LCDWriteNibble@ch stored from wreg
  2452  04D0  00F2               	movwf	LCDWriteNibble@ch
  2453  04D1                     l1077:
  2454                           
  2455                           ;LCD_Main.c: 94: void LCDWriteNibble(char ch, char rs);LCD_Main.c: 95: {;LCD_Main.c: 97:
      +                           PORTBbits.RB6 = rs;
  2456  04D1  0C71               	rrf	LCDWriteNibble@rs,w
  2457  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2458  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2459  04D4  1C03               	skipc
  2460  04D5  1306               	bcf	6,6	;volatile
  2461  04D6  1803               	skipnc
  2462  04D7  1706               	bsf	6,6	;volatile
  2463  04D8                     l1079:
  2464                           
  2465                           ;LCD_Main.c: 100: PORTBbits.RB7 = 0;
  2466  04D8  1386               	bcf	6,7	;volatile
  2467  04D9                     l1081:
  2468                           
  2469                           ;LCD_Main.c: 104: RB0 = 0x00;
  2470  04D9  1006               	bcf	6,0	;volatile
  2471  04DA                     l1083:
  2472                           
  2473                           ;LCD_Main.c: 105: RB1 = 0x00;
  2474  04DA  1086               	bcf	6,1	;volatile
  2475  04DB                     l1085:
  2476                           
  2477                           ;LCD_Main.c: 106: RB2 = 0x00;
  2478  04DB  1106               	bcf	6,2	;volatile
  2479  04DC                     l1087:
  2480                           
  2481                           ;LCD_Main.c: 107: RB3 = 0x00;
  2482  04DC  1186               	bcf	6,3	;volatile
  2483  04DD                     l1089:
  2484                           
  2485                           ;LCD_Main.c: 109:     if ((ch&0x10) == 0x10)
  2486  04DD  1E72               	btfss	LCDWriteNibble@ch,4
  2487  04DE  2CE0               	goto	u431
  2488  04DF  2CE1               	goto	u430
  2489  04E0                     u431:
  2490  04E0  2CE2               	goto	l51
  2491  04E1                     u430:
  2492  04E1                     l1091:
  2493                           
  2494                           ;LCD_Main.c: 110:             RB0 = 1;
  2495  04E1  1406               	bsf	6,0	;volatile
  2496  04E2                     l51:
  2497                           
  2498                           ;LCD_Main.c: 111:     if ((ch&0x20) == 0x20)
  2499  04E2  1EF2               	btfss	LCDWriteNibble@ch,5
  2500  04E3  2CE5               	goto	u441
  2501  04E4  2CE6               	goto	u440
  2502  04E5                     u441:
  2503  04E5  2CE7               	goto	l52
  2504  04E6                     u440:
  2505  04E6                     l1093:
  2506                           
  2507                           ;LCD_Main.c: 112:             RB1 = 1;
  2508  04E6  1486               	bsf	6,1	;volatile
  2509  04E7                     l52:
  2510                           
  2511                           ;LCD_Main.c: 113:     if ((ch&0x40) == 0x40)
  2512  04E7  1F72               	btfss	LCDWriteNibble@ch,6
  2513  04E8  2CEA               	goto	u451
  2514  04E9  2CEB               	goto	u450
  2515  04EA                     u451:
  2516  04EA  2CEC               	goto	l53
  2517  04EB                     u450:
  2518  04EB                     l1095:
  2519                           
  2520                           ;LCD_Main.c: 114:             RB2 = 1;
  2521  04EB  1506               	bsf	6,2	;volatile
  2522  04EC                     l53:
  2523                           
  2524                           ;LCD_Main.c: 115:     if ((ch&0x80) == 0x80)
  2525  04EC  1FF2               	btfss	LCDWriteNibble@ch,7
  2526  04ED  2CEF               	goto	u461
  2527  04EE  2CF0               	goto	u460
  2528  04EF                     u461:
  2529  04EF  2CF1               	goto	l1099
  2530  04F0                     u460:
  2531  04F0                     l1097:
  2532                           
  2533                           ;LCD_Main.c: 116:             RB3 = 1;
  2534  04F0  1586               	bsf	6,3	;volatile
  2535  04F1                     l1099:
  2536                           
  2537                           ;LCD_Main.c: 118: ToggleEnable();
  2538  04F1  118A  2399  118A   	fcall	_ToggleEnable
  2539  04F4                     l1101:
  2540                           
  2541                           ;LCD_Main.c: 122: RB0 = 0x00;
  2542  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2543  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2544  04F6  1006               	bcf	6,0	;volatile
  2545  04F7                     l1103:
  2546                           
  2547                           ;LCD_Main.c: 123: RB1 = 0x00;
  2548  04F7  1086               	bcf	6,1	;volatile
  2549  04F8                     l1105:
  2550                           
  2551                           ;LCD_Main.c: 124: RB2 = 0x00;
  2552  04F8  1106               	bcf	6,2	;volatile
  2553  04F9                     l1107:
  2554                           
  2555                           ;LCD_Main.c: 125: RB3 = 0x00;
  2556  04F9  1186               	bcf	6,3	;volatile
  2557  04FA                     l1109:
  2558                           
  2559                           ;LCD_Main.c: 127:     if ((ch&0x01) == 0x01)
  2560  04FA  1C72               	btfss	LCDWriteNibble@ch,0
  2561  04FB  2CFD               	goto	u471
  2562  04FC  2CFE               	goto	u470
  2563  04FD                     u471:
  2564  04FD  2CFF               	goto	l55
  2565  04FE                     u470:
  2566  04FE                     l1111:
  2567                           
  2568                           ;LCD_Main.c: 128:             RB0 = 1;
  2569  04FE  1406               	bsf	6,0	;volatile
  2570  04FF                     l55:
  2571                           
  2572                           ;LCD_Main.c: 129:     if ((ch&0x02) == 0x02)
  2573  04FF  1CF2               	btfss	LCDWriteNibble@ch,1
  2574  0500  2D02               	goto	u481
  2575  0501  2D03               	goto	u480
  2576  0502                     u481:
  2577  0502  2D04               	goto	l56
  2578  0503                     u480:
  2579  0503                     l1113:
  2580                           
  2581                           ;LCD_Main.c: 130:             RB1 = 1;
  2582  0503  1486               	bsf	6,1	;volatile
  2583  0504                     l56:
  2584                           
  2585                           ;LCD_Main.c: 131:     if ((ch&0x04) == 0x04)
  2586  0504  1D72               	btfss	LCDWriteNibble@ch,2
  2587  0505  2D07               	goto	u491
  2588  0506  2D08               	goto	u490
  2589  0507                     u491:
  2590  0507  2D09               	goto	l57
  2591  0508                     u490:
  2592  0508                     l1115:
  2593                           
  2594                           ;LCD_Main.c: 132:             RB2 = 1;
  2595  0508  1506               	bsf	6,2	;volatile
  2596  0509                     l57:
  2597                           
  2598                           ;LCD_Main.c: 133:     if ((ch&0x08) == 0x08)
  2599  0509  1DF2               	btfss	LCDWriteNibble@ch,3
  2600  050A  2D0C               	goto	u501
  2601  050B  2D0D               	goto	u500
  2602  050C                     u501:
  2603  050C  2D0E               	goto	l1119
  2604  050D                     u500:
  2605  050D                     l1117:
  2606                           
  2607                           ;LCD_Main.c: 134:             RB3 = 1;
  2608  050D  1586               	bsf	6,3	;volatile
  2609  050E                     l1119:
  2610                           
  2611                           ;LCD_Main.c: 136:  ToggleEnable();
  2612  050E  118A  2399  118A   	fcall	_ToggleEnable
  2613  0511                     l59:
  2614  0511  0008               	return
  2615  0512                     __end_of_LCDWriteNibble:
  2616                           
  2617                           	psect	text12
  2618  0399                     __ptext12:	
  2619 ;; *************** function _ToggleEnable *****************
  2620 ;; Defined at:
  2621 ;;		line 84 in file "LCD_Main.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2635 ;;      Params:         0       0       0       0
  2636 ;;      Locals:         0       0       0       0
  2637 ;;      Temps:          1       0       0       0
  2638 ;;      Totals:         1       0       0       0
  2639 ;;Total ram usage:        1 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_LCDWriteNibble
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648  0399                     _ToggleEnable:	
  2649                           ;psect for function _ToggleEnable
  2650                           
  2651  0399                     l1071:	
  2652                           ;incstack = 0
  2653                           ; Regs used in _ToggleEnable: [wreg]
  2654                           
  2655                           
  2656                           ;LCD_Main.c: 86: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2657  0399  3003               	movlw	3
  2658  039A  00F0               	movwf	??_ToggleEnable
  2659  039B                     u957:
  2660  039B  0BF0               	decfsz	??_ToggleEnable,f
  2661  039C  2B9B               	goto	u957
  2662  039D                     l1073:
  2663                           
  2664                           ;LCD_Main.c: 87: PORTCbits.RC5 = 1;
  2665  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2666  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2667  039F  1687               	bsf	7,5	;volatile
  2668                           
  2669                           ;LCD_Main.c: 88: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2670  03A0  3003               	movlw	3
  2671  03A1  00F0               	movwf	??_ToggleEnable
  2672  03A2                     u967:
  2673  03A2  0BF0               	decfsz	??_ToggleEnable,f
  2674  03A3  2BA2               	goto	u967
  2675  03A4                     l1075:
  2676                           
  2677                           ;LCD_Main.c: 89: PORTCbits.RC5 = 0;
  2678  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2679  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2680  03A6  1287               	bcf	7,5	;volatile
  2681                           
  2682                           ;LCD_Main.c: 90: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2683  03A7  3003               	movlw	3
  2684  03A8  00F0               	movwf	??_ToggleEnable
  2685  03A9                     u977:
  2686  03A9  0BF0               	decfsz	??_ToggleEnable,f
  2687  03AA  2BA9               	goto	u977
  2688  03AB                     l48:
  2689  03AB  0008               	return
  2690  03AC                     __end_of_ToggleEnable:
  2691                           
  2692                           	psect	text13
  2693  0415                     __ptext13:	
  2694 ;; *************** function _ADC_Read *****************
  2695 ;; Defined at:
  2696 ;;		line 210 in file "LCD_Main.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  channel         1    wreg     unsigned char 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  channel         1    4[COMMON] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  2    0[COMMON] unsigned int 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2710 ;;      Params:         2       0       0       0
  2711 ;;      Locals:         1       0       0       0
  2712 ;;      Temps:          2       0       0       0
  2713 ;;      Totals:         5       0       0       0
  2714 ;;Total ram usage:        5 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723  0415                     _ADC_Read:	
  2724                           ;psect for function _ADC_Read
  2725                           
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2729                           ;ADC_Read@channel stored from wreg
  2730  0415  00F4               	movwf	ADC_Read@channel
  2731  0416                     l1257:
  2732                           
  2733                           ;LCD_Main.c: 210: unsigned int ADC_Read(unsigned char channel);LCD_Main.c: 212: {;LCD_Ma
      +                          in.c: 214:   ADCON0 &= 0x11000101;
  2734  0416  3001               	movlw	1
  2735  0417  00F2               	movwf	??_ADC_Read
  2736  0418  0872               	movf	??_ADC_Read,w
  2737  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2738  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2739  041B  059F               	andwf	31,f	;volatile
  2740                           
  2741                           ;LCD_Main.c: 216:   ADCON0 |= channel<<3;
  2742  041C  0874               	movf	ADC_Read@channel,w	;volatile
  2743  041D  00F2               	movwf	??_ADC_Read
  2744  041E  3002               	movlw	2
  2745  041F                     u715:
  2746  041F  1003               	clrc
  2747  0420  0DF2               	rlf	??_ADC_Read,f
  2748  0421  3EFF               	addlw	-1
  2749  0422  1D03               	skipz
  2750  0423  2C1F               	goto	u715
  2751  0424  1003               	clrc
  2752  0425  0D72               	rlf	??_ADC_Read,w
  2753  0426  00F3               	movwf	??_ADC_Read+1
  2754  0427  0873               	movf	??_ADC_Read+1,w
  2755  0428  049F               	iorwf	31,f	;volatile
  2756  0429                     l1259:
  2757                           
  2758                           ;LCD_Main.c: 218:   _delay((unsigned long)((2)*(4194304/4000.0)));
  2759  0429  3003               	movlw	3
  2760  042A  00F3               	movwf	??_ADC_Read+1
  2761  042B  30B8               	movlw	184
  2762  042C  00F2               	movwf	??_ADC_Read
  2763  042D                     u987:
  2764  042D  0BF2               	decfsz	??_ADC_Read,f
  2765  042E  2C2D               	goto	u987
  2766  042F  0BF3               	decfsz	??_ADC_Read+1,f
  2767  0430  2C2D               	goto	u987
  2768  0431                     l1261:
  2769                           
  2770                           ;LCD_Main.c: 220:   GO_nDONE = 1;
  2771  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0433  149F               	bsf	31,1	;volatile
  2774  0434                     l87:	
  2775                           ;LCD_Main.c: 222:   while(GO_nDONE);
  2776                           
  2777  0434  189F               	btfsc	31,1	;volatile
  2778  0435  2C37               	goto	u721
  2779  0436  2C38               	goto	u720
  2780  0437                     u721:
  2781  0437  2C34               	goto	l87
  2782  0438                     u720:
  2783  0438                     l1263:
  2784                           
  2785                           ;LCD_Main.c: 224:   return ((ADRESH<<8)+ADRESL);
  2786  0438  081E               	movf	30,w	;volatile
  2787  0439  00F1               	movwf	?_ADC_Read+1
  2788  043A  1683               	bsf	3,5	;RP0=1, select bank1
  2789  043B  1303               	bcf	3,6	;RP1=0, select bank1
  2790  043C  081E               	movf	30,w	;volatile
  2791  043D  00F0               	movwf	?_ADC_Read
  2792  043E                     l90:
  2793  043E  0008               	return
  2794  043F                     __end_of_ADC_Read:
  2795                           
  2796                           	psect	text14
  2797  036C                     __ptext14:	
  2798 ;; *************** function _ADC_Initialize *****************
  2799 ;; Defined at:
  2800 ;;		line 201 in file "LCD_Main.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2814 ;;      Params:         0       0       0       0
  2815 ;;      Locals:         0       0       0       0
  2816 ;;      Temps:          0       0       0       0
  2817 ;;      Totals:         0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827  036C                     _ADC_Initialize:	
  2828                           ;psect for function _ADC_Initialize
  2829                           
  2830  036C                     l1251:	
  2831                           ;incstack = 0
  2832                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2833                           
  2834                           
  2835                           ;LCD_Main.c: 203:   ANSELH = 0x00;
  2836  036C  1683               	bsf	3,5	;RP0=1, select bank3
  2837  036D  1703               	bsf	3,6	;RP1=1, select bank3
  2838  036E  0189               	clrf	9	;volatile
  2839  036F                     l1253:
  2840                           
  2841                           ;LCD_Main.c: 204:   ADCON0 = 0b01000001;
  2842  036F  3041               	movlw	65
  2843  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2844  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2845  0372  009F               	movwf	31	;volatile
  2846  0373                     l1255:
  2847                           
  2848                           ;LCD_Main.c: 206:   ADCON1 = 0b11000000;
  2849  0373  30C0               	movlw	192
  2850  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0375  1303               	bcf	3,6	;RP1=0, select bank1
  2852  0376  009F               	movwf	31	;volatile
  2853  0377                     l84:
  2854  0377  0008               	return
  2855  0378                     __end_of_ADC_Initialize:
  2856  007E                     btemp	set	126	;btemp
  2857  007E                     wtemp0	set	126
  2858                           
  2859                           	psect	idloc
  2860                           
  2861                           ;Config register IDLOC0 @ 0x2000
  2862                           ;	unspecified, using default values
  2863  2000                     	org	8192
  2864  2000  3FFF               	dw	16383
  2865                           
  2866                           ;Config register IDLOC1 @ 0x2001
  2867                           ;	unspecified, using default values
  2868  2001                     	org	8193
  2869  2001  3FFF               	dw	16383
  2870                           
  2871                           ;Config register IDLOC2 @ 0x2002
  2872                           ;	unspecified, using default values
  2873  2002                     	org	8194
  2874  2002  3FFF               	dw	16383
  2875                           
  2876                           ;Config register IDLOC3 @ 0x2003
  2877                           ;	unspecified, using default values
  2878  2003                     	org	8195
  2879  2003  3FFF               	dw	16383
  2880                           
  2881                           	psect	config
  2882                           
  2883                           ;Config register CONFIG1 @ 0x2007
  2884                           ;	Oscillator Selection bits
  2885                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2886                           ;	Watchdog Timer Enable bit
  2887                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2888                           ;	Power-up Timer Enable bit
  2889                           ;	PWRTE = ON, PWRT enabled
  2890                           ;	RE3/MCLR pin function select bit
  2891                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2892                           ;	Code Protection bit
  2893                           ;	CP = OFF, Program memory code protection is disabled
  2894                           ;	Data Code Protection bit
  2895                           ;	CPD = OFF, Data memory code protection is disabled
  2896                           ;	Brown Out Reset Selection bits
  2897                           ;	BOREN = ON, BOR enabled
  2898                           ;	Internal External Switchover bit
  2899                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2900                           ;	Fail-Safe Clock Monitor Enabled bit
  2901                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2902                           ;	Low Voltage Programming Enable bit
  2903                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2904                           ;	In-Circuit Debugger Mode bit
  2905                           ;	DEBUG = 0x1, unprogrammed default
  2906  2007                     	org	8199
  2907  2007  23E1               	dw	9185
  2908                           
  2909                           ;Config register CONFIG2 @ 0x2008
  2910                           ;	Brown-out Reset Selection bit
  2911                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2912                           ;	Flash Program Memory Self Write Enable bits
  2913                           ;	WRT = OFF, Write protection off
  2914  2008                     	org	8200
  2915  2008  3FFF               	dw	16383

Data Sizes:
    Strings     98
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      37
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[14]), main@iTime(BANK0[6]), STR_9(CODE[17]), STR_8(CODE[15]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[6]), STR_4(CODE[16]), 
		 -> STR_3(CODE[15]), main@ExpTime(BANK0[6]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDWriteNibble->_ToggleEnable

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    6569
                                              9 BANK0     28    28      0
                     _ADC_Initialize
                           _ADC_Read
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                               _itoa
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     281
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2167
                                             13 COMMON     1     1      0
                                              4 BANK0      5     1      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     372
                                              6 COMMON     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            4     2      2    1526
                                              6 COMMON     4     2      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1    1266
                                              6 COMMON     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     350
                                              1 COMMON     2     1      1
                       _ToggleEnable
 ---------------------------------------------------------------------------------
 (4) _ToggleEnable                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
         _ToggleEnable
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     25      25       3       46.2%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 30 21:36:48 2022

         _LCD_Initialize 043F                        pc 0002                       l51 04E2  
            ?_LCDPutChar 0070                       l52 04E7                       l53 04EC  
                     l45 0469                       l62 0398                       l55 04FF  
                     l71 0414                       l48 03AB                       l56 0504  
                     l57 0509                       l65 0387                       l90 043E  
                     l59 0511                       l84 0377                       l77 0495  
                     l87 0434              main@ExpTime 0039                       fsr 0004  
                    l104 07F7                      l107 07EF                      l651 03EF  
                    l469 0555                      l479 04CF                      l657 05AA  
                    l665 03CB                      l659 05C1                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RC4 003C                      u500 050D                      u501 050C  
                    u430 04E1                      u510 051A                      u431 04E0  
                    u511 0519                      u440 04E6                      u600 04AE  
                    u441 04E5                      u601 04AD                      u450 04EB  
                    u530 052C                      u610 04B8                      u451 04EA  
                    u531 052B                      u611 04B7                      u460 04F0  
                    u700 047D                      u461 04EF                      u701 047C  
                    u525 051E                      u470 04FE                      u550 053D  
                    u630 04CB                      u471 04FD                      u551 053C  
                    u631 04CA                      u615 04B4                      u720 0438  
                    u480 0503                      u640 0578                      u800 06AF  
                    u721 0437                      u481 0502                      u545 052D  
                    u625 04BF                      u641 0577                      u801 06AE  
                    u490 0508                      u570 0551                      u650 05A6  
                    u730 03D3                      u810 06FE                      u715 041F  
                    u491 0507                      u571 0550                      u555 0539  
                    u651 05A5                      u731 03D2                      u811 06FD  
                    u580 049C                      u660 05BD                      u740 03CB  
                    u820 070D                      u565 0545                      u581 049B  
                    u661 05BC                      u741 03CA                      u821 070C  
                    u805 06AB                      u670 0414                      u830 077A  
                    u750 061D                      u671 0413                      u831 0779  
                    u815 06FA                      u751 061C                      u680 0471  
                    u840 07EF                      u760 062C                      u681 0470  
                    u841 07EE                      u825 0709                      u761 062B  
                    u690 0477                      u770 0641                      u691 0476  
                    u595 04A0                      u907 07AC                      u835 0776  
                    u771 0640                      u755 0619                      u780 068B  
                    u917 044C                      u845 07EB                      u781 068A  
                    u765 0628                      u790 069A                      u927 038D  
                    u791 0699                      u775 063D                      u937 0490  
                    u785 0687                      u857 05ED                      u947 037D  
                    u795 0696                      u867 0674                      u957 039B  
                    u877 06E2                      u967 03A2                      u887 0721  
                    u977 03A9                      u897 075F                      u987 042D  
                    fsr0 0004                      indf 0000          __end_of_LCDGoto 0496  
                   l1101 04F4                     l1111 04FE                     l1103 04F7  
                   l1113 0503                     l1105 04F8                     l1121 0512  
                   l1201 05B7                     l1115 0508                     l1107 04F9  
                   l1211 0444                     l1131 0528                     l1123 0514  
                   l1203 05BD                     l1117 050D                     l1109 04FA  
                   l1221 0459                     l1213 0447                     l1141 054B  
                   l1133 052C                     l1125 051A                     l1301 05DE  
                   l1071 0399                     l1119 050E                     l1231 03F2  
                   l1223 045D                     l1215 0448                     l1207 043F  
                   l1135 053D                     l1127 051D                     l1143 0551  
                   l1151 049F                     l1311 060E                     l1303 05E5  
                   l1073 039D                     l1081 04D9                     l1241 0478  
                   l1233 03FF                     l1225 0461                     l1217 0451  
                   l1209 0442                     l1137 0543                     l1129 0524  
                   l1161 04BE                     l1153 04A6                     l1401 07A1  
                   l1321 0647                     l1313 061D                     l1305 05F4  
                   l1251 036C                     l1075 03A4                     l1091 04E1  
                   l1083 04DA                     l1171 0382                     l1243 047D  
                   l1235 0403                     l1227 0465                     l1219 0455  
                   l1139 0544                     l1163 04C5                     l1155 04AA  
                   l1147 0496                     l1411 07D2                     l1403 07A4  
                   l1331 066C                     l1323 0655                     l1315 062C  
                   l1307 05F8                     l1253 036F                     l1261 0431  
                   l1093 04E6                     l1085 04DB                     l1077 04D1  
                   l1245 0483                     l1237 046B                     l1173 0389  
                   l1229 03F0                     l1157 04AE                     l1149 049C  
                   l1165 04CB                     l1181 056E                     l1413 07D9  
                   l1405 07B3                     l1341 06AF                     l1325 065A  
                   l1317 0634                     l1333 067C                     l1309 0602  
                   l1255 0373                     l1263 0438                     l1095 04EB  
                   l1087 04DC                     l1079 04D8                     l1247 0488  
                   l1239 0471                     l1175 0392                     l1159 04B8  
                   l1191 058F                     l1183 0572                     l1271 03D3  
                   l1407 07C5                     l1415 07E1                     l1351 06D6  
                   l1343 06B5                     l1335 068B                     l1327 0661  
                   l1319 0641                     l1257 0416                     l1097 04F0  
                   l1089 04DD                     l1169 0379                     l1249 048C  
                   l1193 059E                     l1185 0578                     l1177 0559  
                   l1273 03DA                     l1281 03AD                     l1417 07F2  
                   l1409 07CB                     l1361 070D                     l1353 06DA  
                   l1345 06C3                     l1337 069A                     l1329 0668  
                   l1259 0429                     l1099 04F1                     l1195 05A6  
                   l1187 057C                     l1179 055D                     l1275 03DE  
                   l1267 03CF                     l1283 03B2                     l1371 0739  
                   l1363 0712                     l1355 06E9                     l1347 06C8  
                   l1339 06A2                     l1291 05C5                     l1197 05AE  
                   l1189 057E                     l1277 03E3                     l1269 03CF  
                   l1285 03B9                     l1381 0757                     l1373 073F  
                   l1365 0719                     l1349 06CF                     l1357 06EF  
                   l1293 05C9                     l1199 05B5                     l1287 03BD  
                   l1391 0786                     l1383 0766                     l1375 0743  
                   l1367 0728                     l1359 06FE                     l1295 05CC  
                   l1393 0793                     l1377 074A                     l1369 072E  
                   l1385 076B                     l1297 05D1                     l1289 05C2  
                   l1395 079A                     l1387 077A                     l1379 0750  
                   l1299 05D8                     l1397 079E                     l1389 077F  
                   l1399 07A1                     STR_1 0042                     STR_2 0033  
                   STR_3 0051                     STR_4 0023                     STR_5 006E  
                   STR_6 0042                     STR_7 0033                     STR_8 0051  
                   STR_9 0012                     _main 05C2                     _itoa 03CC  
                   btemp 007E                     _utoa 0556         __end_of_ADC_Read 043F  
                   start 0000   __end_of_LCD_Initialize 046A              LCDPutCmd@ch 0075  
                  ?_main 0070                    ?_itoa 0024                    STR_10 0060  
                  ?_utoa 0078          __end_of___lwdiv 0556          __end_of___lwmod 04D0  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    main@i 003F                    pclath 000A  
                  utoa@c 0022                    utoa@v 0020                    status 0003  
                  wtemp0 007E          ?_LCD_Initialize 0070          __initialization 07FD  
           __end_of_main 07FD             __end_of_itoa 03F0             __end_of_utoa 05C2  
                 ??_main 0029                   ??_itoa 007D                   ??_utoa 007C  
              ??_LCDGoto 0077        __end_of_LCDPutCmd 0388             LCDPutChar@ch 0075  
      __end_of_LCDPutStr 0415                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
           LCDPutStr@str 0076           _LCDWriteNibble 04D0                ??___lwdiv 0074  
              ??___lwmod 0074          ADC_Read@channel 0074                   _memset 03AC  
              ?_ADC_Read 0070   __end_of_LCDWriteNibble 0512  __end_of__initialization 07FD  
              LCDGoto@ln 0076           __pcstackCOMMON 0070             ??_LCDPutChar 0073  
             ??_ADC_Read 0072          ?_LCDWriteNibble 0071       __end_of_LCDPutChar 0399  
             __pmaintext 05C2                  ?_memset 0070                  _LCDGoto 046A  
             __stringtab 0002         ??_LCD_Initialize 0076                  ___lwdiv 0512  
                ___lwmod 0496                  __ptext1 03AC                  __ptext2 03CC  
                __ptext3 0556                  __ptext4 0496                  __ptext5 0512  
                __ptext6 043F                  __ptext7 03F0                  __ptext8 0388  
                __ptext9 046A            ?_ToggleEnable 0070                _LCDPutCmd 0378  
                main@adc 0043                _LCDPutStr 03F0     end_of_initialization 07FD  
                itoa@buf 0028                  memset@c 0070                  itoa@val 0024  
                memset@n 0072                  memset@p 0076                  utoa@buf 0023  
                utoa@val 0078           ??_ToggleEnable 0070                _PORTBbits 0006  
              _PORTCbits 0007               main@Buffer 002C               ?_LCDPutCmd 0070  
             ?_LCDPutStr 0076               LCDGoto@pos 007B               LCDPutStr@i 0079  
         _ADC_Initialize 036C           __end_of_memset 03CC         main@ExposureTime 0041  
    start_initialization 07FD         ??_LCDWriteNibble 0072   __end_of_ADC_Initialize 0378  
               ??_memset 0074                 ?_LCDGoto 0076                ___latbits 0001  
          __pcstackBANK0 0020              ??_LCDPutCmd 0073              ??_LCDPutStr 0078  
   __end_of_ToggleEnable 03AC         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0070          ?_ADC_Initialize 0070         LCDWriteNibble@ch 0072  
       LCDWriteNibble@rs 0071                __pstrings 0002                 _ADC_Read 0415  
       ___lwdiv@quotient 0075              _LCDGoto$138 0079                 _GO_nDONE 00F9  
            __stringbase 0011                main@iTime 0033       __end_of__stringtab 0012  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0378  
               __ptext11 04D0                 __ptext12 0399                 __ptext13 0415  
               __ptext14 036C               _LCDPutChar 0388             _ToggleEnable 0399  
               itoa@base 0026                 memset@p1 0075         ___lwmod@dividend 0072  
       ??_ADC_Initialize 0070                stringcode 000C                 utoa@base 007A  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 000C  
               stringtab 0002  
