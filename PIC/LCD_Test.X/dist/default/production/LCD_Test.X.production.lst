

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 31 22:35:24 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F883 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  001E                     _ADRESH	set	30
   215  001F                     _ADCON0	set	31
   216  0006                     _PORTBbits	set	6
   217  0007                     _PORTCbits	set	7
   218  0007                     _PORTC	set	7
   219  0006                     _PORTB	set	6
   220  003C                     _RC4	set	60
   221  00F9                     _GO_nDONE	set	249
   222  0033                     _RB3	set	51
   223  0032                     _RB2	set	50
   224  0031                     _RB1	set	49
   225  0030                     _RB0	set	48
   226  009E                     _ADRESL	set	158
   227  009F                     _ADCON1	set	159
   228  0087                     _TRISC	set	135
   229  0086                     _TRISB	set	134
   230  0189                     _ANSELH	set	393
   231                           
   232                           	psect	strings
   233  0002                     __pstrings:
   234  0002                     stringtab:
   235  0002                     __stringtab:
   236                           
   237                           ;	String table - string pointers are 1 byte each
   238  0002  1BFF               	btfsc	btemp+1,7
   239  0003  280C               	ljmp	stringcode
   240  0004  1383               	bcf	3,7
   241  0005  187F               	btfsc	btemp+1,0
   242  0006  1783               	bsf	3,7
   243  0007  0800               	movf	0,w
   244  0008  0A84               	incf	4,f
   245  0009  1903               	skipnz
   246  000A  0AFF               	incf	btemp+1,f
   247  000B  0008               	return
   248  000C                     stringcode:
   249  000C                     stringdir:
   250  000C  3000               	movlw	high stringdir
   251  000D  008A               	movwf	10
   252  000E  0804               	movf	4,w
   253  000F  0A84               	incf	4,f
   254  0010  0782               	addwf	2,f
   255  0011                     __stringbase:
   256  0011  3400               	retlw	0
   257  0012                     __end_of__stringtab:
   258  0012                     STR_9:
   259  0012  3420               	retlw	32	;' '
   260  0013  3420               	retlw	32	;' '
   261  0014  3420               	retlw	32	;' '
   262  0015  3420               	retlw	32	;' '
   263  0016  3420               	retlw	32	;' '
   264  0017  3420               	retlw	32	;' '
   265  0018  3420               	retlw	32	;' '
   266  0019  3420               	retlw	32	;' '
   267  001A  3420               	retlw	32	;' '
   268  001B  3420               	retlw	32	;' '
   269  001C  3420               	retlw	32	;' '
   270  001D  3420               	retlw	32	;' '
   271  001E  3420               	retlw	32	;' '
   272  001F  3420               	retlw	32	;' '
   273  0020  3420               	retlw	32	;' '
   274  0021  3420               	retlw	32	;' '
   275  0022  3400               	retlw	0
   276  0023                     STR_4:
   277  0023  3420               	retlw	32	;' '
   278  0024  3473               	retlw	115	;'s'
   279  0025  3465               	retlw	101	;'e'
   280  0026  3463               	retlw	99	;'c'
   281  0027  3420               	retlw	32	;' '
   282  0028  3465               	retlw	101	;'e'
   283  0029  3478               	retlw	120	;'x'
   284  002A  3470               	retlw	112	;'p'
   285  002B  346F               	retlw	111	;'o'
   286  002C  3473               	retlw	115	;'s'
   287  002D  3475               	retlw	117	;'u'
   288  002E  3472               	retlw	114	;'r'
   289  002F  3465               	retlw	101	;'e'
   290  0030  3420               	retlw	32	;' '
   291  0031  3420               	retlw	32	;' '
   292  0032  3400               	retlw	0
   293  0033                     STR_2:
   294  0033  3420               	retlw	32	;' '
   295  0034  3420               	retlw	32	;' '
   296  0035  3420               	retlw	32	;' '
   297  0036  3420               	retlw	32	;' '
   298  0037  3454               	retlw	84	;'T'
   299  0038  3449               	retlw	73	;'I'
   300  0039  344D               	retlw	77	;'M'
   301  003A  3445               	retlw	69	;'E'
   302  003B  3452               	retlw	82	;'R'
   303  003C  3420               	retlw	32	;' '
   304  003D  3456               	retlw	86	;'V'
   305  003E  3431               	retlw	49	;'1'
   306  003F  3420               	retlw	32	;' '
   307  0040  3420               	retlw	32	;' '
   308  0041  3400               	retlw	0
   309  0042                     STR_1:
   310  0042  3420               	retlw	32	;' '
   311  0043  3420               	retlw	32	;' '
   312  0044  3420               	retlw	32	;' '
   313  0045  3420               	retlw	32	;' '
   314  0046  3445               	retlw	69	;'E'
   315  0047  344E               	retlw	78	;'N'
   316  0048  344C               	retlw	76	;'L'
   317  0049  3441               	retlw	65	;'A'
   318  004A  3452               	retlw	82	;'R'
   319  004B  3447               	retlw	71	;'G'
   320  004C  3445               	retlw	69	;'E'
   321  004D  3452               	retlw	82	;'R'
   322  004E  3420               	retlw	32	;' '
   323  004F  3420               	retlw	32	;' '
   324  0050  3400               	retlw	0
   325  0051                     STR_3:
   326  0051  3420               	retlw	32	;' '
   327  0052  3473               	retlw	115	;'s'
   328  0053  3465               	retlw	101	;'e'
   329  0054  3463               	retlw	99	;'c'
   330  0055  3420               	retlw	32	;' '
   331  0056  3465               	retlw	101	;'e'
   332  0057  3478               	retlw	120	;'x'
   333  0058  3470               	retlw	112	;'p'
   334  0059  346F               	retlw	111	;'o'
   335  005A  3473               	retlw	115	;'s'
   336  005B  3475               	retlw	117	;'u'
   337  005C  3472               	retlw	114	;'r'
   338  005D  3465               	retlw	101	;'e'
   339  005E  3420               	retlw	32	;' '
   340  005F  3400               	retlw	0
   341  0060                     STR_10:
   342  0060  3420               	retlw	32	;' '
   343  0061  3473               	retlw	115	;'s'
   344  0062  3465               	retlw	101	;'e'
   345  0063  3463               	retlw	99	;'c'
   346  0064  3420               	retlw	32	;' '
   347  0065  346C               	retlw	108	;'l'
   348  0066  3461               	retlw	97	;'a'
   349  0067  3473               	retlw	115	;'s'
   350  0068  3474               	retlw	116	;'t'
   351  0069  3420               	retlw	32	;' '
   352  006A  3465               	retlw	101	;'e'
   353  006B  3478               	retlw	120	;'x'
   354  006C  3470               	retlw	112	;'p'
   355  006D  3400               	retlw	0
   356  006E                     STR_5:
   357  006E  3452               	retlw	82	;'R'
   358  006F  3445               	retlw	69	;'E'
   359  0070  3453               	retlw	83	;'S'
   360  0071  3445               	retlw	69	;'E'
   361  0072  3454               	retlw	84	;'T'
   362  0073  3400               	retlw	0
   363  0033                     
   364                           	psect	cinit
   365  07FD                     start_initialization:	
   366                           ; #config settings
   367                           
   368  07FD                     __initialization:
   369  07FD                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  07FD                     __end_of__initialization:
   373  07FD  0183               	clrf	3
   374  07FE  118A  2DBF         	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	cstackCOMMON
   377  0070                     __pcstackCOMMON:
   378  0070                     ?_LCDPutCmd:
   379  0070                     ?_memset:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_LCD_Initialize:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_ToggleEnable:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_ToggleEnable:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_LCDPutChar:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_ADC_Initialize:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_ADC_Initialize:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_main:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_ADC_Read:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?___lwdiv:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     ?___lwmod:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0070                     ___lwdiv@divisor:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  0070                     ___lwmod@divisor:	
   416                           ; 2 bytes @ 0x0
   417                           
   418  0070                     memset@c:	
   419                           ; 2 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423  0070                     	ds	1
   424  0071                     ?_LCDWriteNibble:
   425  0071                     LCDWriteNibble@rs:	
   426                           ; 1 bytes @ 0x1
   427                           
   428                           
   429                           ; 1 bytes @ 0x1
   430  0071                     	ds	1
   431  0072                     ??_LCDWriteNibble:
   432  0072                     ??_ADC_Read:	
   433                           ; 1 bytes @ 0x2
   434                           
   435  0072                     LCDWriteNibble@ch:	
   436                           ; 1 bytes @ 0x2
   437                           
   438  0072                     ___lwdiv@dividend:	
   439                           ; 1 bytes @ 0x2
   440                           
   441  0072                     ___lwmod@dividend:	
   442                           ; 2 bytes @ 0x2
   443                           
   444  0072                     memset@n:	
   445                           ; 2 bytes @ 0x2
   446                           
   447                           
   448                           ; 2 bytes @ 0x2
   449  0072                     	ds	1
   450  0073                     ??_LCDPutCmd:
   451  0073                     ??_LCDPutChar:	
   452                           ; 1 bytes @ 0x3
   453                           
   454                           
   455                           ; 1 bytes @ 0x3
   456  0073                     	ds	1
   457  0074                     ??_memset:
   458  0074                     ??___lwdiv:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     ??___lwmod:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ADC_Read@channel:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 1 bytes @ 0x4
   469  0074                     	ds	1
   470  0075                     LCDPutChar@ch:
   471  0075                     LCDPutCmd@ch:	
   472                           ; 1 bytes @ 0x5
   473                           
   474  0075                     ___lwmod@counter:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0075                     memset@p1:	
   478                           ; 1 bytes @ 0x5
   479                           
   480  0075                     ___lwdiv@quotient:	
   481                           ; 1 bytes @ 0x5
   482                           
   483                           
   484                           ; 2 bytes @ 0x5
   485  0075                     	ds	1
   486  0076                     ??_LCD_Initialize:
   487  0076                     ?_LCDPutStr:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     ?_LCDGoto:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0076                     LCDGoto@ln:	
   494                           ; 1 bytes @ 0x6
   495                           
   496  0076                     memset@p:	
   497                           ; 1 bytes @ 0x6
   498                           
   499  0076                     LCDPutStr@str:	
   500                           ; 1 bytes @ 0x6
   501                           
   502                           
   503                           ; 2 bytes @ 0x6
   504  0076                     	ds	1
   505  0077                     ??_LCDGoto:
   506  0077                     ___lwdiv@counter:	
   507                           ; 1 bytes @ 0x7
   508                           
   509                           
   510                           ; 1 bytes @ 0x7
   511  0077                     	ds	1
   512  0078                     ?_utoa:
   513  0078                     ??_LCDPutStr:	
   514                           ; 1 bytes @ 0x8
   515                           
   516  0078                     utoa@val:	
   517                           ; 1 bytes @ 0x8
   518                           
   519                           
   520                           ; 2 bytes @ 0x8
   521  0078                     	ds	1
   522  0079                     LCDPutStr@i:
   523  0079                     _LCDGoto$138:	
   524                           ; 1 bytes @ 0x9
   525                           
   526                           
   527                           ; 2 bytes @ 0x9
   528  0079                     	ds	1
   529  007A                     utoa@base:
   530                           
   531                           ; 2 bytes @ 0xA
   532  007A                     	ds	1
   533  007B                     LCDGoto@pos:
   534                           
   535                           ; 1 bytes @ 0xB
   536  007B                     	ds	1
   537  007C                     ??_utoa:
   538                           
   539                           ; 1 bytes @ 0xC
   540  007C                     	ds	1
   541  007D                     ??_itoa:
   542                           
   543                           ; 1 bytes @ 0xD
   544  007D                     	ds	1
   545                           
   546                           	psect	cstackBANK0
   547  0020                     __pcstackBANK0:
   548  0020                     utoa@v:
   549                           
   550                           ; 2 bytes @ 0x0
   551  0020                     	ds	2
   552  0022                     utoa@c:
   553                           
   554                           ; 1 bytes @ 0x2
   555  0022                     	ds	1
   556  0023                     utoa@buf:
   557                           
   558                           ; 1 bytes @ 0x3
   559  0023                     	ds	1
   560  0024                     ?_itoa:
   561  0024                     itoa@val:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 2 bytes @ 0x4
   566  0024                     	ds	2
   567  0026                     itoa@base:
   568                           
   569                           ; 2 bytes @ 0x6
   570  0026                     	ds	2
   571  0028                     itoa@buf:
   572                           
   573                           ; 1 bytes @ 0x8
   574  0028                     	ds	1
   575  0029                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x9
   578  0029                     	ds	3
   579  002C                     main@Buffer:
   580                           
   581                           ; 7 bytes @ 0xC
   582  002C                     	ds	7
   583  0033                     main@iTime:
   584                           
   585                           ; 6 bytes @ 0x13
   586  0033                     	ds	6
   587  0039                     main@ExpTime:
   588                           
   589                           ; 6 bytes @ 0x19
   590  0039                     	ds	6
   591  003F                     main@i:
   592                           
   593                           ; 2 bytes @ 0x1F
   594  003F                     	ds	2
   595  0041                     main@ExposureTime:
   596                           
   597                           ; 2 bytes @ 0x21
   598  0041                     	ds	2
   599  0043                     main@adc:
   600                           
   601                           ; 2 bytes @ 0x23
   602  0043                     	ds	2
   603                           
   604                           	psect	maintext
   605  05BF                     __pmaintext:	
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 228 in file "LCD_Main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  Buffer          7   12[BANK0 ] unsigned char [7]
   616 ;;  ExpTime         6   25[BANK0 ] unsigned char [6]
   617 ;;  iTime           6   19[BANK0 ] unsigned char [6]
   618 ;;  adc             2   35[BANK0 ] int 
   619 ;;  ExposureTime    2   33[BANK0 ] int 
   620 ;;  i               2   31[BANK0 ] int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   630 ;;      Params:         0       0       0       0
   631 ;;      Locals:         0      25       0       0
   632 ;;      Temps:          0       3       0       0
   633 ;;      Totals:         0      28       0       0
   634 ;;Total ram usage:       28 bytes
   635 ;; Hardware stack levels required when called: 4
   636 ;; This function calls:
   637 ;;		_ADC_Initialize
   638 ;;		_ADC_Read
   639 ;;		_LCDGoto
   640 ;;		_LCDPutCmd
   641 ;;		_LCDPutStr
   642 ;;		_LCD_Initialize
   643 ;;		_itoa
   644 ;;		_memset
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650  05BF                     _main:	
   651                           ;psect for function _main
   652                           
   653  05BF                     l1289:	
   654                           ;incstack = 0
   655                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   656                           
   657                           
   658                           ;LCD_Main.c: 230: ADC_Initialize();
   659  05BF  118A  2369  118A   	fcall	_ADC_Initialize
   660  05C2                     l1291:
   661                           
   662                           ;LCD_Main.c: 231: int adc;;LCD_Main.c: 232: int ExposureTime = 0;
   663  05C2  1283               	bcf	3,5	;RP0=0, select bank0
   664  05C3  1303               	bcf	3,6	;RP1=0, select bank0
   665  05C4  01C1               	clrf	main@ExposureTime
   666  05C5  01C2               	clrf	main@ExposureTime+1
   667  05C6                     l1293:
   668                           
   669                           ;LCD_Main.c: 233: LCD_Initialize();
   670  05C6  118A  243C  118A   	fcall	_LCD_Initialize
   671  05C9                     l1295:
   672                           
   673                           ;LCD_Main.c: 234: int i;;LCD_Main.c: 235: char Buffer[7];;LCD_Main.c: 236: char ExpTime[
      +                          6];;LCD_Main.c: 237: char iTime[6];;LCD_Main.c: 240: LCDGoto(0,0);
   674  05C9  01F6               	clrf	LCDGoto@ln
   675  05CA  3000               	movlw	0
   676  05CB  118A  2467  118A   	fcall	_LCDGoto
   677  05CE                     l1297:
   678                           
   679                           ;LCD_Main.c: 241: LCDPutStr("    ENLARGER  ");
   680  05CE  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   681  05CF  00F6               	movwf	LCDPutStr@str
   682  05D0  3080               	movlw	128
   683  05D1  00F7               	movwf	LCDPutStr@str+1
   684  05D2  118A  23ED  118A   	fcall	_LCDPutStr
   685  05D5                     l1299:
   686                           
   687                           ;LCD_Main.c: 242: LCDGoto(0,1);
   688  05D5  01F6               	clrf	LCDGoto@ln
   689  05D6  0AF6               	incf	LCDGoto@ln,f
   690  05D7  3000               	movlw	0
   691  05D8  118A  2467  118A   	fcall	_LCDGoto
   692  05DB                     l1301:
   693                           
   694                           ;LCD_Main.c: 243: LCDPutStr("    TIMER V1  ");
   695  05DB  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   696  05DC  00F6               	movwf	LCDPutStr@str
   697  05DD  3080               	movlw	128
   698  05DE  00F7               	movwf	LCDPutStr@str+1
   699  05DF  118A  23ED  118A   	fcall	_LCDPutStr
   700  05E2                     l1303:
   701                           
   702                           ;LCD_Main.c: 244: _delay((unsigned long)((4000)*(4194304/4000.0)));
   703  05E2  3016               	movlw	22
   704  05E3  1283               	bcf	3,5	;RP0=0, select bank0
   705  05E4  1303               	bcf	3,6	;RP1=0, select bank0
   706  05E5  00AB               	movwf	??_main+2
   707  05E6  3048               	movlw	72
   708  05E7  00AA               	movwf	??_main+1
   709  05E8  3014               	movlw	20
   710  05E9  00A9               	movwf	??_main
   711  05EA                     u857:
   712  05EA  0BA9               	decfsz	??_main,f
   713  05EB  2DEA               	goto	u857
   714  05EC  0BAA               	decfsz	??_main+1,f
   715  05ED  2DEA               	goto	u857
   716  05EE  0BAB               	decfsz	??_main+2,f
   717  05EF  2DEA               	goto	u857
   718  05F0  2DF1               	nop2
   719  05F1                     l1305:
   720                           
   721                           ;LCD_Main.c: 245: LCDPutCmd(0x01);
   722  05F1  3001               	movlw	1
   723  05F2  118A  2375  118A   	fcall	_LCDPutCmd
   724  05F5                     l1307:
   725                           
   726                           ;LCD_Main.c: 248:   {;LCD_Main.c: 249:     adc = (ADC_Read(0));
   727  05F5  3000               	movlw	0
   728  05F6  118A  2412  118A   	fcall	_ADC_Read
   729  05F9  0871               	movf	?_ADC_Read+1,w
   730  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   731  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   732  05FC  00C4               	movwf	main@adc+1
   733  05FD  0870               	movf	?_ADC_Read,w
   734  05FE  00C3               	movwf	main@adc
   735  05FF                     l1309:
   736                           
   737                           ;LCD_Main.c: 252:     itoa(Buffer, adc, 10);
   738  05FF  0844               	movf	main@adc+1,w
   739  0600  00A5               	movwf	itoa@val+1
   740  0601  0843               	movf	main@adc,w
   741  0602  00A4               	movwf	itoa@val
   742  0603  300A               	movlw	10
   743  0604  00A6               	movwf	itoa@base
   744  0605  3000               	movlw	0
   745  0606  00A7               	movwf	itoa@base+1
   746  0607  302C               	movlw	(low (main@Buffer| 0))& (0+255)
   747  0608  118A  23C9  118A   	fcall	_itoa
   748  060B                     l1311:
   749                           
   750                           ;LCD_Main.c: 255:     if (adc > 700 & adc < 800)
   751  060B  1283               	bcf	3,5	;RP0=0, select bank0
   752  060C  1303               	bcf	3,6	;RP1=0, select bank0
   753  060D  0844               	movf	main@adc+1,w
   754  060E  3A80               	xorlw	128
   755  060F  00FF               	movwf	btemp+1
   756  0610  3082               	movlw	130
   757  0611  027F               	subwf	btemp+1,w
   758  0612  1D03               	skipz
   759  0613  2E16               	goto	u755
   760  0614  30BD               	movlw	189
   761  0615  0243               	subwf	main@adc,w
   762  0616                     u755:
   763  0616  1C03               	skipc
   764  0617  2E19               	goto	u751
   765  0618  2E1A               	goto	u750
   766  0619                     u751:
   767  0619  2E79               	goto	l1333
   768  061A                     u750:
   769  061A                     l1313:
   770  061A  1283               	bcf	3,5	;RP0=0, select bank0
   771  061B  1303               	bcf	3,6	;RP1=0, select bank0
   772  061C  0844               	movf	main@adc+1,w
   773  061D  3A80               	xorlw	128
   774  061E  00FF               	movwf	btemp+1
   775  061F  3083               	movlw	131
   776  0620  027F               	subwf	btemp+1,w
   777  0621  1D03               	skipz
   778  0622  2E25               	goto	u765
   779  0623  3020               	movlw	32
   780  0624  0243               	subwf	main@adc,w
   781  0625                     u765:
   782  0625  1803               	skipnc
   783  0626  2E28               	goto	u761
   784  0627  2E29               	goto	u760
   785  0628                     u761:
   786  0628  2E79               	goto	l1333
   787  0629                     u760:
   788  0629                     l1315:
   789                           
   790                           ;LCD_Main.c: 256:     {;LCD_Main.c: 257:         ExposureTime++;
   791  0629  3001               	movlw	1
   792  062A  1283               	bcf	3,5	;RP0=0, select bank0
   793  062B  1303               	bcf	3,6	;RP1=0, select bank0
   794  062C  07C1               	addwf	main@ExposureTime,f
   795  062D  1803               	skipnc
   796  062E  0AC2               	incf	main@ExposureTime+1,f
   797  062F  3000               	movlw	0
   798  0630  07C2               	addwf	main@ExposureTime+1,f
   799  0631                     l1317:
   800                           
   801                           ;LCD_Main.c: 258:         if (ExposureTime >99) ExposureTime = 99;
   802  0631  0842               	movf	main@ExposureTime+1,w
   803  0632  3A80               	xorlw	128
   804  0633  00FF               	movwf	btemp+1
   805  0634  3080               	movlw	128
   806  0635  027F               	subwf	btemp+1,w
   807  0636  1D03               	skipz
   808  0637  2E3A               	goto	u775
   809  0638  3064               	movlw	100
   810  0639  0241               	subwf	main@ExposureTime,w
   811  063A                     u775:
   812  063A  1C03               	skipc
   813  063B  2E3D               	goto	u771
   814  063C  2E3E               	goto	u770
   815  063D                     u771:
   816  063D  2E44               	goto	l1321
   817  063E                     u770:
   818  063E                     l1319:
   819  063E  3063               	movlw	99
   820  063F  1283               	bcf	3,5	;RP0=0, select bank0
   821  0640  1303               	bcf	3,6	;RP1=0, select bank0
   822  0641  00C1               	movwf	main@ExposureTime
   823  0642  3000               	movlw	0
   824  0643  00C2               	movwf	main@ExposureTime+1
   825  0644                     l1321:
   826                           
   827                           ;LCD_Main.c: 259:         itoa(ExpTime, ExposureTime, 10);
   828  0644  1283               	bcf	3,5	;RP0=0, select bank0
   829  0645  1303               	bcf	3,6	;RP1=0, select bank0
   830  0646  0842               	movf	main@ExposureTime+1,w
   831  0647  00A5               	movwf	itoa@val+1
   832  0648  0841               	movf	main@ExposureTime,w
   833  0649  00A4               	movwf	itoa@val
   834  064A  300A               	movlw	10
   835  064B  00A6               	movwf	itoa@base
   836  064C  3000               	movlw	0
   837  064D  00A7               	movwf	itoa@base+1
   838  064E  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   839  064F  118A  23C9  118A   	fcall	_itoa
   840  0652                     l1323:
   841                           
   842                           ;LCD_Main.c: 260:         LCDGoto(0,0);
   843  0652  01F6               	clrf	LCDGoto@ln
   844  0653  3000               	movlw	0
   845  0654  118A  2467  118A   	fcall	_LCDGoto
   846  0657                     l1325:
   847                           
   848                           ;LCD_Main.c: 261:         LCDPutStr(ExpTime);
   849  0657  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   850  0658  00F6               	movwf	LCDPutStr@str
   851  0659  3000               	movlw	0
   852  065A  00F7               	movwf	LCDPutStr@str+1
   853  065B  118A  23ED  118A   	fcall	_LCDPutStr
   854  065E                     l1327:
   855                           
   856                           ;LCD_Main.c: 262:         LCDPutStr(" sec exposure ");
   857  065E  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   858  065F  00F6               	movwf	LCDPutStr@str
   859  0660  3080               	movlw	128
   860  0661  00F7               	movwf	LCDPutStr@str+1
   861  0662  118A  23ED  118A   	fcall	_LCDPutStr
   862  0665                     l1329:
   863                           
   864                           ;LCD_Main.c: 263:         LCDPutCmd(0x02);
   865  0665  3002               	movlw	2
   866  0666  118A  2375  118A   	fcall	_LCDPutCmd
   867  0669                     l1331:
   868                           
   869                           ;LCD_Main.c: 264:         _delay((unsigned long)((200)*(4194304/4000.0)));
   870  0669  3002               	movlw	2
   871  066A  1283               	bcf	3,5	;RP0=0, select bank0
   872  066B  1303               	bcf	3,6	;RP1=0, select bank0
   873  066C  00AB               	movwf	??_main+2
   874  066D  3011               	movlw	17
   875  066E  00AA               	movwf	??_main+1
   876  066F  3057               	movlw	87
   877  0670  00A9               	movwf	??_main
   878  0671                     u867:
   879  0671  0BA9               	decfsz	??_main,f
   880  0672  2E71               	goto	u867
   881  0673  0BAA               	decfsz	??_main+1,f
   882  0674  2E71               	goto	u867
   883  0675  0BAB               	decfsz	??_main+2,f
   884  0676  2E71               	goto	u867
   885  0677  2E78               	nop2
   886                           
   887                           ;LCD_Main.c: 265:     }
   888  0678  2DF5               	goto	l1307
   889  0679                     l1333:
   890  0679  1283               	bcf	3,5	;RP0=0, select bank0
   891  067A  1303               	bcf	3,6	;RP1=0, select bank0
   892  067B  0844               	movf	main@adc+1,w
   893  067C  3A80               	xorlw	128
   894  067D  00FF               	movwf	btemp+1
   895  067E  3082               	movlw	130
   896  067F  027F               	subwf	btemp+1,w
   897  0680  1D03               	skipz
   898  0681  2E84               	goto	u785
   899  0682  3059               	movlw	89
   900  0683  0243               	subwf	main@adc,w
   901  0684                     u785:
   902  0684  1C03               	skipc
   903  0685  2E87               	goto	u781
   904  0686  2E88               	goto	u780
   905  0687                     u781:
   906  0687  2EEC               	goto	l1357
   907  0688                     u780:
   908  0688                     l1335:
   909  0688  1283               	bcf	3,5	;RP0=0, select bank0
   910  0689  1303               	bcf	3,6	;RP1=0, select bank0
   911  068A  0844               	movf	main@adc+1,w
   912  068B  3A80               	xorlw	128
   913  068C  00FF               	movwf	btemp+1
   914  068D  3082               	movlw	130
   915  068E  027F               	subwf	btemp+1,w
   916  068F  1D03               	skipz
   917  0690  2E93               	goto	u795
   918  0691  30BC               	movlw	188
   919  0692  0243               	subwf	main@adc,w
   920  0693                     u795:
   921  0693  1803               	skipnc
   922  0694  2E96               	goto	u791
   923  0695  2E97               	goto	u790
   924  0696                     u791:
   925  0696  2EEC               	goto	l1357
   926  0697                     u790:
   927  0697                     l1337:
   928                           
   929                           ;LCD_Main.c: 267:     {;LCD_Main.c: 268:         ExposureTime--;
   930  0697  30FF               	movlw	255
   931  0698  1283               	bcf	3,5	;RP0=0, select bank0
   932  0699  1303               	bcf	3,6	;RP1=0, select bank0
   933  069A  07C1               	addwf	main@ExposureTime,f
   934  069B  1803               	skipnc
   935  069C  0AC2               	incf	main@ExposureTime+1,f
   936  069D  30FF               	movlw	255
   937  069E  07C2               	addwf	main@ExposureTime+1,f
   938  069F                     l1339:
   939                           
   940                           ;LCD_Main.c: 269:         if (ExposureTime <1) ExposureTime = 1;
   941  069F  0842               	movf	main@ExposureTime+1,w
   942  06A0  3A80               	xorlw	128
   943  06A1  00FF               	movwf	btemp+1
   944  06A2  3080               	movlw	128
   945  06A3  027F               	subwf	btemp+1,w
   946  06A4  1D03               	skipz
   947  06A5  2EA8               	goto	u805
   948  06A6  3001               	movlw	1
   949  06A7  0241               	subwf	main@ExposureTime,w
   950  06A8                     u805:
   951  06A8  1803               	skipnc
   952  06A9  2EAB               	goto	u801
   953  06AA  2EAC               	goto	u800
   954  06AB                     u801:
   955  06AB  2EB2               	goto	l1343
   956  06AC                     u800:
   957  06AC                     l1341:
   958  06AC  3001               	movlw	1
   959  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   960  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   961  06AF  00C1               	movwf	main@ExposureTime
   962  06B0  3000               	movlw	0
   963  06B1  00C2               	movwf	main@ExposureTime+1
   964  06B2                     l1343:
   965                           
   966                           ;LCD_Main.c: 270:         itoa(ExpTime, ExposureTime, 10);
   967  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   968  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   969  06B4  0842               	movf	main@ExposureTime+1,w
   970  06B5  00A5               	movwf	itoa@val+1
   971  06B6  0841               	movf	main@ExposureTime,w
   972  06B7  00A4               	movwf	itoa@val
   973  06B8  300A               	movlw	10
   974  06B9  00A6               	movwf	itoa@base
   975  06BA  3000               	movlw	0
   976  06BB  00A7               	movwf	itoa@base+1
   977  06BC  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   978  06BD  118A  23C9  118A   	fcall	_itoa
   979  06C0                     l1345:
   980                           
   981                           ;LCD_Main.c: 271:         LCDGoto(0,0);
   982  06C0  01F6               	clrf	LCDGoto@ln
   983  06C1  3000               	movlw	0
   984  06C2  118A  2467  118A   	fcall	_LCDGoto
   985  06C5                     l1347:
   986                           
   987                           ;LCD_Main.c: 272:         LCDPutStr(ExpTime);
   988  06C5  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   989  06C6  00F6               	movwf	LCDPutStr@str
   990  06C7  3000               	movlw	0
   991  06C8  00F7               	movwf	LCDPutStr@str+1
   992  06C9  118A  23ED  118A   	fcall	_LCDPutStr
   993  06CC                     l1349:
   994                           
   995                           ;LCD_Main.c: 273:         LCDPutStr(" sec exposure  ");
   996  06CC  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   997  06CD  00F6               	movwf	LCDPutStr@str
   998  06CE  3080               	movlw	128
   999  06CF  00F7               	movwf	LCDPutStr@str+1
  1000  06D0  118A  23ED  118A   	fcall	_LCDPutStr
  1001  06D3                     l1351:
  1002                           
  1003                           ;LCD_Main.c: 274:         LCDPutCmd(0x02);
  1004  06D3  3002               	movlw	2
  1005  06D4  118A  2375  118A   	fcall	_LCDPutCmd
  1006  06D7                     l1353:
  1007                           
  1008                           ;LCD_Main.c: 275:         _delay((unsigned long)((200)*(4194304/4000.0)));
  1009  06D7  3002               	movlw	2
  1010  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1011  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1012  06DA  00AB               	movwf	??_main+2
  1013  06DB  3011               	movlw	17
  1014  06DC  00AA               	movwf	??_main+1
  1015  06DD  3057               	movlw	87
  1016  06DE  00A9               	movwf	??_main
  1017  06DF                     u877:
  1018  06DF  0BA9               	decfsz	??_main,f
  1019  06E0  2EDF               	goto	u877
  1020  06E1  0BAA               	decfsz	??_main+1,f
  1021  06E2  2EDF               	goto	u877
  1022  06E3  0BAB               	decfsz	??_main+2,f
  1023  06E4  2EDF               	goto	u877
  1024  06E5  2EE6               	nop2
  1025  06E6                     l1355:
  1026                           
  1027                           ;LCD_Main.c: 276:         LCDGoto(0,0);
  1028  06E6  01F6               	clrf	LCDGoto@ln
  1029  06E7  3000               	movlw	0
  1030  06E8  118A  2467  118A   	fcall	_LCDGoto
  1031                           
  1032                           ;LCD_Main.c: 278:     }
  1033  06EB  2DF5               	goto	l1307
  1034  06EC                     l1357:
  1035  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1036  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1037  06EE  0844               	movf	main@adc+1,w
  1038  06EF  3A80               	xorlw	128
  1039  06F0  00FF               	movwf	btemp+1
  1040  06F1  3081               	movlw	129
  1041  06F2  027F               	subwf	btemp+1,w
  1042  06F3  1D03               	skipz
  1043  06F4  2EF7               	goto	u815
  1044  06F5  30F5               	movlw	245
  1045  06F6  0243               	subwf	main@adc,w
  1046  06F7                     u815:
  1047  06F7  1C03               	skipc
  1048  06F8  2EFA               	goto	u811
  1049  06F9  2EFB               	goto	u810
  1050  06FA                     u811:
  1051  06FA  2F6C               	goto	l1385
  1052  06FB                     u810:
  1053  06FB                     l1359:
  1054  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1055  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1056  06FD  0844               	movf	main@adc+1,w
  1057  06FE  3A80               	xorlw	128
  1058  06FF  00FF               	movwf	btemp+1
  1059  0700  3082               	movlw	130
  1060  0701  027F               	subwf	btemp+1,w
  1061  0702  1D03               	skipz
  1062  0703  2F06               	goto	u825
  1063  0704  3058               	movlw	88
  1064  0705  0243               	subwf	main@adc,w
  1065  0706                     u825:
  1066  0706  1803               	skipnc
  1067  0707  2F09               	goto	u821
  1068  0708  2F0A               	goto	u820
  1069  0709                     u821:
  1070  0709  2F6C               	goto	l1385
  1071  070A                     u820:
  1072  070A                     l1361:
  1073                           
  1074                           ;LCD_Main.c: 280:     {;LCD_Main.c: 282:         LCDPutCmd(0x01);
  1075  070A  3001               	movlw	1
  1076  070B  118A  2375  118A   	fcall	_LCDPutCmd
  1077                           
  1078                           ;LCD_Main.c: 283:         LCDGoto(5,0);
  1079  070E  01F6               	clrf	LCDGoto@ln
  1080  070F  3005               	movlw	5
  1081  0710  118A  2467  118A   	fcall	_LCDGoto
  1082  0713                     l1363:
  1083                           
  1084                           ;LCD_Main.c: 284:         LCDPutStr("RESET");
  1085  0713  305D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1086  0714  00F6               	movwf	LCDPutStr@str
  1087  0715  3080               	movlw	128
  1088  0716  00F7               	movwf	LCDPutStr@str+1
  1089  0717  118A  23ED  118A   	fcall	_LCDPutStr
  1090  071A                     l1365:
  1091                           
  1092                           ;LCD_Main.c: 285:         _delay((unsigned long)((1000)*(4194304/4000.0)));
  1093  071A  3006               	movlw	6
  1094  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1095  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1096  071D  00AB               	movwf	??_main+2
  1097  071E  3052               	movlw	82
  1098  071F  00AA               	movwf	??_main+1
  1099  0720  30C3               	movlw	195
  1100  0721  00A9               	movwf	??_main
  1101  0722                     u887:
  1102  0722  0BA9               	decfsz	??_main,f
  1103  0723  2F22               	goto	u887
  1104  0724  0BAA               	decfsz	??_main+1,f
  1105  0725  2F22               	goto	u887
  1106  0726  0BAB               	decfsz	??_main+2,f
  1107  0727  2F22               	goto	u887
  1108  0728  0000               	nop
  1109  0729                     l1367:
  1110                           
  1111                           ;LCD_Main.c: 286:         ExposureTime = 1;
  1112  0729  3001               	movlw	1
  1113  072A  1283               	bcf	3,5	;RP0=0, select bank0
  1114  072B  1303               	bcf	3,6	;RP1=0, select bank0
  1115  072C  00C1               	movwf	main@ExposureTime
  1116  072D  3000               	movlw	0
  1117  072E  00C2               	movwf	main@ExposureTime+1
  1118  072F                     l1369:
  1119                           
  1120                           ;LCD_Main.c: 287:         memset(ExpTime, '\0', sizeof(ExpTime));
  1121  072F  3000               	movlw	0
  1122  0730  00F0               	movwf	memset@c
  1123  0731  00F1               	movwf	memset@c+1
  1124  0732  3006               	movlw	6
  1125  0733  00F2               	movwf	memset@n
  1126  0734  3000               	movlw	0
  1127  0735  00F3               	movwf	memset@n+1
  1128  0736  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1129  0737  118A  23A9  118A   	fcall	_memset
  1130  073A                     l1371:
  1131                           
  1132                           ;LCD_Main.c: 288:         ExpTime[0] = '1';
  1133  073A  3031               	movlw	49
  1134  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1135  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1136  073D  00A9               	movwf	??_main
  1137  073E  0829               	movf	??_main,w
  1138  073F  00B9               	movwf	main@ExpTime
  1139  0740                     l1373:
  1140                           
  1141                           ;LCD_Main.c: 289:         LCDPutCmd(0x02);
  1142  0740  3002               	movlw	2
  1143  0741  118A  2375  118A   	fcall	_LCDPutCmd
  1144  0744                     l1375:
  1145                           
  1146                           ;LCD_Main.c: 290:         LCDPutStr("    ENLARGER  ");
  1147  0744  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1148  0745  00F6               	movwf	LCDPutStr@str
  1149  0746  3080               	movlw	128
  1150  0747  00F7               	movwf	LCDPutStr@str+1
  1151  0748  118A  23ED  118A   	fcall	_LCDPutStr
  1152  074B                     l1377:
  1153                           
  1154                           ;LCD_Main.c: 291:         LCDGoto(0,1);
  1155  074B  01F6               	clrf	LCDGoto@ln
  1156  074C  0AF6               	incf	LCDGoto@ln,f
  1157  074D  3000               	movlw	0
  1158  074E  118A  2467  118A   	fcall	_LCDGoto
  1159  0751                     l1379:
  1160                           
  1161                           ;LCD_Main.c: 292:         LCDPutStr("    TIMER V1  ");
  1162  0751  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1163  0752  00F6               	movwf	LCDPutStr@str
  1164  0753  3080               	movlw	128
  1165  0754  00F7               	movwf	LCDPutStr@str+1
  1166  0755  118A  23ED  118A   	fcall	_LCDPutStr
  1167  0758                     l1381:
  1168                           
  1169                           ;LCD_Main.c: 293:         _delay((unsigned long)((4000)*(4194304/4000.0)));
  1170  0758  3016               	movlw	22
  1171  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1172  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1173  075B  00AB               	movwf	??_main+2
  1174  075C  3048               	movlw	72
  1175  075D  00AA               	movwf	??_main+1
  1176  075E  3014               	movlw	20
  1177  075F  00A9               	movwf	??_main
  1178  0760                     u897:
  1179  0760  0BA9               	decfsz	??_main,f
  1180  0761  2F60               	goto	u897
  1181  0762  0BAA               	decfsz	??_main+1,f
  1182  0763  2F60               	goto	u897
  1183  0764  0BAB               	decfsz	??_main+2,f
  1184  0765  2F60               	goto	u897
  1185  0766  2F67               	nop2
  1186  0767                     l1383:
  1187                           
  1188                           ;LCD_Main.c: 294:         LCDPutCmd(0x01);
  1189  0767  3001               	movlw	1
  1190  0768  118A  2375  118A   	fcall	_LCDPutCmd
  1191                           
  1192                           ;LCD_Main.c: 295:     }
  1193  076B  2DF5               	goto	l1307
  1194  076C                     l1385:
  1195  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1196  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1197  076E  0844               	movf	main@adc+1,w
  1198  076F  3A80               	xorlw	128
  1199  0770  00FF               	movwf	btemp+1
  1200  0771  3080               	movlw	128
  1201  0772  027F               	subwf	btemp+1,w
  1202  0773  1D03               	skipz
  1203  0774  2F77               	goto	u835
  1204  0775  300A               	movlw	10
  1205  0776  0243               	subwf	main@adc,w
  1206  0777                     u835:
  1207  0777  1803               	skipnc
  1208  0778  2F7A               	goto	u831
  1209  0779  2F7B               	goto	u830
  1210  077A                     u831:
  1211  077A  2FF7               	goto	l104
  1212  077B                     u830:
  1213  077B                     l1387:
  1214                           
  1215                           ;LCD_Main.c: 297:     {;LCD_Main.c: 298:         LCDGoto(0,0);
  1216  077B  01F6               	clrf	LCDGoto@ln
  1217  077C  3000               	movlw	0
  1218  077D  118A  2467  118A   	fcall	_LCDGoto
  1219  0780                     l1389:
  1220                           
  1221                           ;LCD_Main.c: 299:         LCDPutStr(ExpTime);
  1222  0780  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1223  0781  00F6               	movwf	LCDPutStr@str
  1224  0782  3000               	movlw	0
  1225  0783  00F7               	movwf	LCDPutStr@str+1
  1226  0784  118A  23ED  118A   	fcall	_LCDPutStr
  1227  0787                     l1391:
  1228                           
  1229                           ;LCD_Main.c: 300:         LCDPutStr(" sec exposure ");
  1230  0787  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1231  0788  00F6               	movwf	LCDPutStr@str
  1232  0789  3080               	movlw	128
  1233  078A  00F7               	movwf	LCDPutStr@str+1
  1234  078B  118A  23ED  118A   	fcall	_LCDPutStr
  1235                           
  1236                           ;LCD_Main.c: 301:         LCDGoto(0,1);
  1237  078E  01F6               	clrf	LCDGoto@ln
  1238  078F  0AF6               	incf	LCDGoto@ln,f
  1239  0790  3000               	movlw	0
  1240  0791  118A  2467  118A   	fcall	_LCDGoto
  1241  0794                     l1393:
  1242                           
  1243                           ;LCD_Main.c: 302:         LCDPutStr("                ");
  1244  0794  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1245  0795  00F6               	movwf	LCDPutStr@str
  1246  0796  3080               	movlw	128
  1247  0797  00F7               	movwf	LCDPutStr@str+1
  1248  0798  118A  23ED  118A   	fcall	_LCDPutStr
  1249  079B                     l1395:
  1250                           
  1251                           ;LCD_Main.c: 303:         LCDPutCmd(0x02);
  1252  079B  3002               	movlw	2
  1253  079C  118A  2375  118A   	fcall	_LCDPutCmd
  1254  079F                     l1397:
  1255                           
  1256                           ;LCD_Main.c: 304:         RC4 = 0;
  1257  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1258  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1259  07A1  1207               	bcf	7,4	;volatile
  1260  07A2                     l1399:
  1261  07A2                     l1401:
  1262                           
  1263                           ;LCD_Main.c: 306:         for (i=0;i< ExposureTime;i++)
  1264  07A2  01BF               	clrf	main@i
  1265  07A3  01C0               	clrf	main@i+1
  1266  07A4  2FE1               	goto	l1415
  1267  07A5                     l1403:
  1268                           
  1269                           ;LCD_Main.c: 307:         {;LCD_Main.c: 308:             _delay((unsigned long)((915)*(4
      +                          194304/4000.0)));
  1270  07A5  3005               	movlw	5
  1271  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1272  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1273  07A8  00AB               	movwf	??_main+2
  1274  07A9  30DF               	movlw	223
  1275  07AA  00AA               	movwf	??_main+1
  1276  07AB  3003               	movlw	3
  1277  07AC  00A9               	movwf	??_main
  1278  07AD                     u907:
  1279  07AD  0BA9               	decfsz	??_main,f
  1280  07AE  2FAD               	goto	u907
  1281  07AF  0BAA               	decfsz	??_main+1,f
  1282  07B0  2FAD               	goto	u907
  1283  07B1  0BAB               	decfsz	??_main+2,f
  1284  07B2  2FAD               	goto	u907
  1285  07B3                     l1405:
  1286                           
  1287                           ;LCD_Main.c: 309:             itoa(iTime, i+1, 10);
  1288  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1289  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1290  07B5  083F               	movf	main@i,w
  1291  07B6  3E01               	addlw	1
  1292  07B7  00A4               	movwf	itoa@val
  1293  07B8  0840               	movf	main@i+1,w
  1294  07B9  1803               	skipnc
  1295  07BA  3E01               	addlw	1
  1296  07BB  3E00               	addlw	0
  1297  07BC  00A5               	movwf	itoa@val+1
  1298  07BD  300A               	movlw	10
  1299  07BE  00A6               	movwf	itoa@base
  1300  07BF  3000               	movlw	0
  1301  07C0  00A7               	movwf	itoa@base+1
  1302  07C1  3033               	movlw	(low (main@iTime| 0))& (0+255)
  1303  07C2  118A  23C9  118A   	fcall	_itoa
  1304  07C5                     l1407:
  1305                           
  1306                           ;LCD_Main.c: 310:             LCDGoto(0,1);
  1307  07C5  01F6               	clrf	LCDGoto@ln
  1308  07C6  0AF6               	incf	LCDGoto@ln,f
  1309  07C7  3000               	movlw	0
  1310  07C8  118A  2467  118A   	fcall	_LCDGoto
  1311  07CB                     l1409:
  1312                           
  1313                           ;LCD_Main.c: 311:             LCDPutStr(iTime);
  1314  07CB  3033               	movlw	(low (main@iTime| 0))& (0+255)
  1315  07CC  00F6               	movwf	LCDPutStr@str
  1316  07CD  3000               	movlw	0
  1317  07CE  00F7               	movwf	LCDPutStr@str+1
  1318  07CF  118A  23ED  118A   	fcall	_LCDPutStr
  1319  07D2                     l1411:
  1320                           
  1321                           ;LCD_Main.c: 312:             LCDPutStr(" sec last exp");
  1322  07D2  304F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1323  07D3  00F6               	movwf	LCDPutStr@str
  1324  07D4  3080               	movlw	128
  1325  07D5  00F7               	movwf	LCDPutStr@str+1
  1326  07D6  118A  23ED  118A   	fcall	_LCDPutStr
  1327  07D9                     l1413:
  1328                           
  1329                           ;LCD_Main.c: 313:         }
  1330  07D9  3001               	movlw	1
  1331  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1332  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1333  07DC  07BF               	addwf	main@i,f
  1334  07DD  1803               	skipnc
  1335  07DE  0AC0               	incf	main@i+1,f
  1336  07DF  3000               	movlw	0
  1337  07E0  07C0               	addwf	main@i+1,f
  1338  07E1                     l1415:
  1339  07E1  0840               	movf	main@i+1,w
  1340  07E2  3A80               	xorlw	128
  1341  07E3  00A9               	movwf	??_main
  1342  07E4  0842               	movf	main@ExposureTime+1,w
  1343  07E5  3A80               	xorlw	128
  1344  07E6  0229               	subwf	??_main,w
  1345  07E7  1D03               	skipz
  1346  07E8  2FEB               	goto	u845
  1347  07E9  0841               	movf	main@ExposureTime,w
  1348  07EA  023F               	subwf	main@i,w
  1349  07EB                     u845:
  1350  07EB  1C03               	skipc
  1351  07EC  2FEE               	goto	u841
  1352  07ED  2FEF               	goto	u840
  1353  07EE                     u841:
  1354  07EE  2FA5               	goto	l1403
  1355  07EF                     u840:
  1356  07EF                     l107:
  1357                           
  1358                           ;LCD_Main.c: 315:         RC4 = 1;
  1359  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  1360  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  1361  07F1  1607               	bsf	7,4	;volatile
  1362  07F2                     l1417:
  1363                           
  1364                           ;LCD_Main.c: 316:         LCDPutCmd(0x02);
  1365  07F2  3002               	movlw	2
  1366  07F3  118A  2375  118A   	fcall	_LCDPutCmd
  1367                           
  1368                           ;LCD_Main.c: 317:     }
  1369  07F6  2DF5               	goto	l1307
  1370  07F7                     l104:	
  1371                           ;LCD_Main.c: 318:     else
  1372                           
  1373                           
  1374                           ;LCD_Main.c: 319:     {;LCD_Main.c: 320:      RC4 = 1;
  1375  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  1376  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  1377  07F9  1607               	bsf	7,4	;volatile
  1378  07FA  2DF5               	goto	l1307
  1379  07FB  118A  2800         	ljmp	start
  1380  07FD                     __end_of_main:
  1381                           
  1382                           	psect	text1
  1383  03A9                     __ptext1:	
  1384 ;; *************** function _memset *****************
  1385 ;; Defined at:
  1386 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memset.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  p1              1    wreg     PTR void 
  1389 ;;		 -> main@ExpTime(6), 
  1390 ;;  c               2    0[COMMON] int 
  1391 ;;  n               2    2[COMMON] unsigned int 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  p1              1    5[COMMON] PTR void 
  1394 ;;		 -> main@ExpTime(6), 
  1395 ;;  p               1    6[COMMON] PTR unsigned char 
  1396 ;;		 -> main@ExpTime(6), 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      PTR void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1406 ;;      Params:         4       0       0       0
  1407 ;;      Locals:         2       0       0       0
  1408 ;;      Temps:          1       0       0       0
  1409 ;;      Totals:         7       0       0       0
  1410 ;;Total ram usage:        7 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419  03A9                     _memset:	
  1420                           ;psect for function _memset
  1421                           
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1425                           ;memset@p1 stored from wreg
  1426  03A9  00F5               	movwf	memset@p1
  1427  03AA                     l1281:
  1428  03AA  0875               	movf	memset@p1,w
  1429  03AB  00F4               	movwf	??_memset
  1430  03AC  0874               	movf	??_memset,w
  1431  03AD  00F6               	movwf	memset@p
  1432  03AE  2BBA               	goto	l1287
  1433  03AF                     l1283:
  1434  03AF  0870               	movf	memset@c,w
  1435  03B0  00F4               	movwf	??_memset
  1436  03B1  0876               	movf	memset@p,w
  1437  03B2  0084               	movwf	4
  1438  03B3  0874               	movf	??_memset,w
  1439  03B4  1383               	bcf	3,7	;select IRP bank0
  1440  03B5  0080               	movwf	0
  1441  03B6                     l1285:
  1442  03B6  3001               	movlw	1
  1443  03B7  00F4               	movwf	??_memset
  1444  03B8  0874               	movf	??_memset,w
  1445  03B9  07F6               	addwf	memset@p,f
  1446  03BA                     l1287:
  1447  03BA  3001               	movlw	1
  1448  03BB  02F2               	subwf	memset@n,f
  1449  03BC  3000               	movlw	0
  1450  03BD  1C03               	skipc
  1451  03BE  03F3               	decf	memset@n+1,f
  1452  03BF  02F3               	subwf	memset@n+1,f
  1453  03C0  0A72               	incf	memset@n,w
  1454  03C1  1D03               	skipz
  1455  03C2  2BC7               	goto	u741
  1456  03C3  0A73               	incf	memset@n+1,w
  1457  03C4  1D03               	btfss	3,2
  1458  03C5  2BC7               	goto	u741
  1459  03C6  2BC8               	goto	u740
  1460  03C7                     u741:
  1461  03C7  2BAF               	goto	l1283
  1462  03C8                     u740:
  1463  03C8                     l665:
  1464  03C8  0008               	return
  1465  03C9                     __end_of_memset:
  1466                           
  1467                           	psect	text2
  1468  03C9                     __ptext2:	
  1469 ;; *************** function _itoa *****************
  1470 ;; Defined at:
  1471 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  buf             1    wreg     PTR unsigned char 
  1474 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1475 ;;  val             2    4[BANK0 ] int 
  1476 ;;  base            2    6[BANK0 ] int 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  1479 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1480 ;;  cp              1    0        PTR unsigned char 
  1481 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      PTR unsigned char 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1491 ;;      Params:         0       4       0       0
  1492 ;;      Locals:         0       1       0       0
  1493 ;;      Temps:          1       0       0       0
  1494 ;;      Totals:         1       5       0       0
  1495 ;;Total ram usage:        6 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; Hardware stack levels required when called: 2
  1498 ;; This function calls:
  1499 ;;		_utoa
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505  03C9                     _itoa:	
  1506                           ;psect for function _itoa
  1507                           
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1511                           ;itoa@buf stored from wreg
  1512  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1513  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1514  03CB  00A8               	movwf	itoa@buf
  1515  03CC                     l1267:
  1516  03CC                     l1269:
  1517  03CC  1FA5               	btfss	itoa@val+1,7
  1518  03CD  2BCF               	goto	u731
  1519  03CE  2BD0               	goto	u730
  1520  03CF                     u731:
  1521  03CF  2BE0               	goto	l1277
  1522  03D0                     u730:
  1523  03D0                     l1271:
  1524  03D0  302D               	movlw	45
  1525  03D1  00FD               	movwf	??_itoa
  1526  03D2  0828               	movf	itoa@buf,w
  1527  03D3  0084               	movwf	4
  1528  03D4  087D               	movf	??_itoa,w
  1529  03D5  1383               	bcf	3,7	;select IRP bank0
  1530  03D6  0080               	movwf	0
  1531  03D7                     l1273:
  1532  03D7  3001               	movlw	1
  1533  03D8  00FD               	movwf	??_itoa
  1534  03D9  087D               	movf	??_itoa,w
  1535  03DA  07A8               	addwf	itoa@buf,f
  1536  03DB                     l1275:
  1537  03DB  09A4               	comf	itoa@val,f
  1538  03DC  09A5               	comf	itoa@val+1,f
  1539  03DD  0AA4               	incf	itoa@val,f
  1540  03DE  1903               	skipnz
  1541  03DF  0AA5               	incf	itoa@val+1,f
  1542  03E0                     l1277:
  1543  03E0  0825               	movf	itoa@val+1,w
  1544  03E1  00F9               	movwf	utoa@val+1
  1545  03E2  0824               	movf	itoa@val,w
  1546  03E3  00F8               	movwf	utoa@val
  1547  03E4  0827               	movf	itoa@base+1,w
  1548  03E5  00FB               	movwf	utoa@base+1
  1549  03E6  0826               	movf	itoa@base,w
  1550  03E7  00FA               	movwf	utoa@base
  1551  03E8  0828               	movf	itoa@buf,w
  1552  03E9  118A  2553  118A   	fcall	_utoa
  1553  03EC                     l651:
  1554  03EC  0008               	return
  1555  03ED                     __end_of_itoa:
  1556                           
  1557                           	psect	text3
  1558  0553                     __ptext3:	
  1559 ;; *************** function _utoa *****************
  1560 ;; Defined at:
  1561 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  buf             1    wreg     PTR unsigned char 
  1564 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1565 ;;  val             2    8[COMMON] unsigned int 
  1566 ;;  base            2   10[COMMON] int 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1569 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1570 ;;  v               2    0[BANK0 ] unsigned int 
  1571 ;;  c               1    2[BANK0 ] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      PTR unsigned char 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1581 ;;      Params:         4       0       0       0
  1582 ;;      Locals:         0       4       0       0
  1583 ;;      Temps:          1       0       0       0
  1584 ;;      Totals:         5       4       0       0
  1585 ;;Total ram usage:        9 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 1
  1588 ;; This function calls:
  1589 ;;		___lwdiv
  1590 ;;		___lwmod
  1591 ;; This function is called by:
  1592 ;;		_itoa
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596  0553                     _utoa:	
  1597                           ;psect for function _utoa
  1598                           
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1602                           ;utoa@buf stored from wreg
  1603  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0555  00A3               	movwf	utoa@buf
  1606  0556                     l1177:
  1607  0556  0879               	movf	utoa@val+1,w
  1608  0557  00A1               	movwf	utoa@v+1
  1609  0558  0878               	movf	utoa@val,w
  1610  0559  00A0               	movwf	utoa@v
  1611  055A                     l1179:
  1612  055A  087B               	movf	utoa@base+1,w
  1613  055B  00F1               	movwf	___lwdiv@divisor+1
  1614  055C  087A               	movf	utoa@base,w
  1615  055D  00F0               	movwf	___lwdiv@divisor
  1616  055E  0821               	movf	utoa@v+1,w
  1617  055F  00F3               	movwf	___lwdiv@dividend+1
  1618  0560  0820               	movf	utoa@v,w
  1619  0561  00F2               	movwf	___lwdiv@dividend
  1620  0562  118A  250F  118A   	fcall	___lwdiv
  1621  0565  0871               	movf	?___lwdiv+1,w
  1622  0566  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0567  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0568  00A1               	movwf	utoa@v+1
  1625  0569  0870               	movf	?___lwdiv,w
  1626  056A  00A0               	movwf	utoa@v
  1627  056B                     l1181:
  1628  056B  3001               	movlw	1
  1629  056C  00FC               	movwf	??_utoa
  1630  056D  087C               	movf	??_utoa,w
  1631  056E  07A3               	addwf	utoa@buf,f
  1632  056F                     l1183:
  1633  056F  0820               	movf	utoa@v,w
  1634  0570  0421               	iorwf	utoa@v+1,w
  1635  0571  1D03               	btfss	3,2
  1636  0572  2D74               	goto	u641
  1637  0573  2D75               	goto	u640
  1638  0574                     u641:
  1639  0574  2D5A               	goto	l1179
  1640  0575                     u640:
  1641  0575                     l1185:
  1642  0575  0823               	movf	utoa@buf,w
  1643  0576  0084               	movwf	4
  1644  0577  1383               	bcf	3,7	;select IRP bank0
  1645  0578  0180               	clrf	0
  1646  0579                     l1187:
  1647  0579  3001               	movlw	1
  1648  057A  02A3               	subwf	utoa@buf,f
  1649  057B                     l1189:
  1650  057B  087B               	movf	utoa@base+1,w
  1651  057C  00F1               	movwf	___lwmod@divisor+1
  1652  057D  087A               	movf	utoa@base,w
  1653  057E  00F0               	movwf	___lwmod@divisor
  1654  057F  0879               	movf	utoa@val+1,w
  1655  0580  00F3               	movwf	___lwmod@dividend+1
  1656  0581  0878               	movf	utoa@val,w
  1657  0582  00F2               	movwf	___lwmod@dividend
  1658  0583  118A  2493  118A   	fcall	___lwmod
  1659  0586  0870               	movf	?___lwmod,w
  1660  0587  00FC               	movwf	??_utoa
  1661  0588  087C               	movf	??_utoa,w
  1662  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1663  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1664  058B  00A2               	movwf	utoa@c
  1665  058C                     l1191:
  1666  058C  087B               	movf	utoa@base+1,w
  1667  058D  00F1               	movwf	___lwdiv@divisor+1
  1668  058E  087A               	movf	utoa@base,w
  1669  058F  00F0               	movwf	___lwdiv@divisor
  1670  0590  0879               	movf	utoa@val+1,w
  1671  0591  00F3               	movwf	___lwdiv@dividend+1
  1672  0592  0878               	movf	utoa@val,w
  1673  0593  00F2               	movwf	___lwdiv@dividend
  1674  0594  118A  250F  118A   	fcall	___lwdiv
  1675  0597  0871               	movf	?___lwdiv+1,w
  1676  0598  00F9               	movwf	utoa@val+1
  1677  0599  0870               	movf	?___lwdiv,w
  1678  059A  00F8               	movwf	utoa@val
  1679  059B                     l1193:
  1680  059B  300A               	movlw	10
  1681  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1682  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1683  059E  0222               	subwf	utoa@c,w
  1684  059F  1C03               	skipc
  1685  05A0  2DA2               	goto	u651
  1686  05A1  2DA3               	goto	u650
  1687  05A2                     u651:
  1688  05A2  2DA7               	goto	l657
  1689  05A3                     u650:
  1690  05A3                     l1195:
  1691  05A3  3007               	movlw	7
  1692  05A4  00FC               	movwf	??_utoa
  1693  05A5  087C               	movf	??_utoa,w
  1694  05A6  07A2               	addwf	utoa@c,f
  1695  05A7                     l657:
  1696  05A7  3030               	movlw	48
  1697  05A8  00FC               	movwf	??_utoa
  1698  05A9  087C               	movf	??_utoa,w
  1699  05AA  07A2               	addwf	utoa@c,f
  1700  05AB                     l1197:
  1701  05AB  0822               	movf	utoa@c,w
  1702  05AC  00FC               	movwf	??_utoa
  1703  05AD  0823               	movf	utoa@buf,w
  1704  05AE  0084               	movwf	4
  1705  05AF  087C               	movf	??_utoa,w
  1706  05B0  1383               	bcf	3,7	;select IRP bank0
  1707  05B1  0080               	movwf	0
  1708  05B2                     l1199:
  1709  05B2  3001               	movlw	1
  1710  05B3  02A3               	subwf	utoa@buf,f
  1711  05B4                     l1201:
  1712  05B4  0878               	movf	utoa@val,w
  1713  05B5  0479               	iorwf	utoa@val+1,w
  1714  05B6  1D03               	btfss	3,2
  1715  05B7  2DB9               	goto	u661
  1716  05B8  2DBA               	goto	u660
  1717  05B9                     u661:
  1718  05B9  2D7B               	goto	l1189
  1719  05BA                     u660:
  1720  05BA                     l1203:
  1721                           
  1722                           ;	Return value of _utoa is never used
  1723  05BA  3001               	movlw	1
  1724  05BB  00FC               	movwf	??_utoa
  1725  05BC  087C               	movf	??_utoa,w
  1726  05BD  07A3               	addwf	utoa@buf,f
  1727  05BE                     l659:
  1728  05BE  0008               	return
  1729  05BF                     __end_of_utoa:
  1730                           
  1731                           	psect	text4
  1732  0493                     __ptext4:	
  1733 ;; *************** function ___lwmod *****************
  1734 ;; Defined at:
  1735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  divisor         2    0[COMMON] unsigned int 
  1738 ;;  dividend        2    2[COMMON] unsigned int 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  counter         1    5[COMMON] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2    0[COMMON] unsigned int 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1750 ;;      Params:         4       0       0       0
  1751 ;;      Locals:         1       0       0       0
  1752 ;;      Temps:          1       0       0       0
  1753 ;;      Totals:         6       0       0       0
  1754 ;;Total ram usage:        6 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_utoa
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763  0493                     ___lwmod:	
  1764                           ;psect for function ___lwmod
  1765                           
  1766  0493                     l1147:	
  1767                           ;incstack = 0
  1768                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1769                           
  1770  0493  0870               	movf	___lwmod@divisor,w
  1771  0494  0471               	iorwf	___lwmod@divisor+1,w
  1772  0495  1903               	btfsc	3,2
  1773  0496  2C98               	goto	u581
  1774  0497  2C99               	goto	u580
  1775  0498                     u581:
  1776  0498  2CC8               	goto	l1165
  1777  0499                     u580:
  1778  0499                     l1149:
  1779  0499  01F5               	clrf	___lwmod@counter
  1780  049A  0AF5               	incf	___lwmod@counter,f
  1781  049B  2CA7               	goto	l1155
  1782  049C                     l1151:
  1783  049C  3001               	movlw	1
  1784  049D                     u595:
  1785  049D  1003               	clrc
  1786  049E  0DF0               	rlf	___lwmod@divisor,f
  1787  049F  0DF1               	rlf	___lwmod@divisor+1,f
  1788  04A0  3EFF               	addlw	-1
  1789  04A1  1D03               	skipz
  1790  04A2  2C9D               	goto	u595
  1791  04A3                     l1153:
  1792  04A3  3001               	movlw	1
  1793  04A4  00F4               	movwf	??___lwmod
  1794  04A5  0874               	movf	??___lwmod,w
  1795  04A6  07F5               	addwf	___lwmod@counter,f
  1796  04A7                     l1155:
  1797  04A7  1FF1               	btfss	___lwmod@divisor+1,7
  1798  04A8  2CAA               	goto	u601
  1799  04A9  2CAB               	goto	u600
  1800  04AA                     u601:
  1801  04AA  2C9C               	goto	l1151
  1802  04AB                     u600:
  1803  04AB                     l1157:
  1804  04AB  0871               	movf	___lwmod@divisor+1,w
  1805  04AC  0273               	subwf	___lwmod@dividend+1,w
  1806  04AD  1D03               	skipz
  1807  04AE  2CB1               	goto	u615
  1808  04AF  0870               	movf	___lwmod@divisor,w
  1809  04B0  0272               	subwf	___lwmod@dividend,w
  1810  04B1                     u615:
  1811  04B1  1C03               	skipc
  1812  04B2  2CB4               	goto	u611
  1813  04B3  2CB5               	goto	u610
  1814  04B4                     u611:
  1815  04B4  2CBB               	goto	l1161
  1816  04B5                     u610:
  1817  04B5                     l1159:
  1818  04B5  0870               	movf	___lwmod@divisor,w
  1819  04B6  02F2               	subwf	___lwmod@dividend,f
  1820  04B7  0871               	movf	___lwmod@divisor+1,w
  1821  04B8  1C03               	skipc
  1822  04B9  03F3               	decf	___lwmod@dividend+1,f
  1823  04BA  02F3               	subwf	___lwmod@dividend+1,f
  1824  04BB                     l1161:
  1825  04BB  3001               	movlw	1
  1826  04BC                     u625:
  1827  04BC  1003               	clrc
  1828  04BD  0CF1               	rrf	___lwmod@divisor+1,f
  1829  04BE  0CF0               	rrf	___lwmod@divisor,f
  1830  04BF  3EFF               	addlw	-1
  1831  04C0  1D03               	skipz
  1832  04C1  2CBC               	goto	u625
  1833  04C2                     l1163:
  1834  04C2  3001               	movlw	1
  1835  04C3  02F5               	subwf	___lwmod@counter,f
  1836  04C4  1D03               	btfss	3,2
  1837  04C5  2CC7               	goto	u631
  1838  04C6  2CC8               	goto	u630
  1839  04C7                     u631:
  1840  04C7  2CAB               	goto	l1157
  1841  04C8                     u630:
  1842  04C8                     l1165:
  1843  04C8  0873               	movf	___lwmod@dividend+1,w
  1844  04C9  00F1               	movwf	?___lwmod+1
  1845  04CA  0872               	movf	___lwmod@dividend,w
  1846  04CB  00F0               	movwf	?___lwmod
  1847  04CC                     l479:
  1848  04CC  0008               	return
  1849  04CD                     __end_of___lwmod:
  1850                           
  1851                           	psect	text5
  1852  050F                     __ptext5:	
  1853 ;; *************** function ___lwdiv *****************
  1854 ;; Defined at:
  1855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  divisor         2    0[COMMON] unsigned int 
  1858 ;;  dividend        2    2[COMMON] unsigned int 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  quotient        2    5[COMMON] unsigned int 
  1861 ;;  counter         1    7[COMMON] unsigned char 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  2    0[COMMON] unsigned int 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1871 ;;      Params:         4       0       0       0
  1872 ;;      Locals:         3       0       0       0
  1873 ;;      Temps:          1       0       0       0
  1874 ;;      Totals:         8       0       0       0
  1875 ;;Total ram usage:        8 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_utoa
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884  050F                     ___lwdiv:	
  1885                           ;psect for function ___lwdiv
  1886                           
  1887  050F                     l1121:	
  1888                           ;incstack = 0
  1889                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1890                           
  1891  050F  01F5               	clrf	___lwdiv@quotient
  1892  0510  01F6               	clrf	___lwdiv@quotient+1
  1893  0511                     l1123:
  1894  0511  0870               	movf	___lwdiv@divisor,w
  1895  0512  0471               	iorwf	___lwdiv@divisor+1,w
  1896  0513  1903               	btfsc	3,2
  1897  0514  2D16               	goto	u511
  1898  0515  2D17               	goto	u510
  1899  0516                     u511:
  1900  0516  2D4E               	goto	l1143
  1901  0517                     u510:
  1902  0517                     l1125:
  1903  0517  01F7               	clrf	___lwdiv@counter
  1904  0518  0AF7               	incf	___lwdiv@counter,f
  1905  0519  2D25               	goto	l1131
  1906  051A                     l1127:
  1907  051A  3001               	movlw	1
  1908  051B                     u525:
  1909  051B  1003               	clrc
  1910  051C  0DF0               	rlf	___lwdiv@divisor,f
  1911  051D  0DF1               	rlf	___lwdiv@divisor+1,f
  1912  051E  3EFF               	addlw	-1
  1913  051F  1D03               	skipz
  1914  0520  2D1B               	goto	u525
  1915  0521                     l1129:
  1916  0521  3001               	movlw	1
  1917  0522  00F4               	movwf	??___lwdiv
  1918  0523  0874               	movf	??___lwdiv,w
  1919  0524  07F7               	addwf	___lwdiv@counter,f
  1920  0525                     l1131:
  1921  0525  1FF1               	btfss	___lwdiv@divisor+1,7
  1922  0526  2D28               	goto	u531
  1923  0527  2D29               	goto	u530
  1924  0528                     u531:
  1925  0528  2D1A               	goto	l1127
  1926  0529                     u530:
  1927  0529                     l1133:
  1928  0529  3001               	movlw	1
  1929  052A                     u545:
  1930  052A  1003               	clrc
  1931  052B  0DF5               	rlf	___lwdiv@quotient,f
  1932  052C  0DF6               	rlf	___lwdiv@quotient+1,f
  1933  052D  3EFF               	addlw	-1
  1934  052E  1D03               	skipz
  1935  052F  2D2A               	goto	u545
  1936  0530  0871               	movf	___lwdiv@divisor+1,w
  1937  0531  0273               	subwf	___lwdiv@dividend+1,w
  1938  0532  1D03               	skipz
  1939  0533  2D36               	goto	u555
  1940  0534  0870               	movf	___lwdiv@divisor,w
  1941  0535  0272               	subwf	___lwdiv@dividend,w
  1942  0536                     u555:
  1943  0536  1C03               	skipc
  1944  0537  2D39               	goto	u551
  1945  0538  2D3A               	goto	u550
  1946  0539                     u551:
  1947  0539  2D41               	goto	l1139
  1948  053A                     u550:
  1949  053A                     l1135:
  1950  053A  0870               	movf	___lwdiv@divisor,w
  1951  053B  02F2               	subwf	___lwdiv@dividend,f
  1952  053C  0871               	movf	___lwdiv@divisor+1,w
  1953  053D  1C03               	skipc
  1954  053E  03F3               	decf	___lwdiv@dividend+1,f
  1955  053F  02F3               	subwf	___lwdiv@dividend+1,f
  1956  0540                     l1137:
  1957  0540  1475               	bsf	___lwdiv@quotient,0
  1958  0541                     l1139:
  1959  0541  3001               	movlw	1
  1960  0542                     u565:
  1961  0542  1003               	clrc
  1962  0543  0CF1               	rrf	___lwdiv@divisor+1,f
  1963  0544  0CF0               	rrf	___lwdiv@divisor,f
  1964  0545  3EFF               	addlw	-1
  1965  0546  1D03               	skipz
  1966  0547  2D42               	goto	u565
  1967  0548                     l1141:
  1968  0548  3001               	movlw	1
  1969  0549  02F7               	subwf	___lwdiv@counter,f
  1970  054A  1D03               	btfss	3,2
  1971  054B  2D4D               	goto	u571
  1972  054C  2D4E               	goto	u570
  1973  054D                     u571:
  1974  054D  2D29               	goto	l1133
  1975  054E                     u570:
  1976  054E                     l1143:
  1977  054E  0876               	movf	___lwdiv@quotient+1,w
  1978  054F  00F1               	movwf	?___lwdiv+1
  1979  0550  0875               	movf	___lwdiv@quotient,w
  1980  0551  00F0               	movwf	?___lwdiv
  1981  0552                     l469:
  1982  0552  0008               	return
  1983  0553                     __end_of___lwdiv:
  1984                           
  1985                           	psect	text6
  1986  043C                     __ptext6:	
  1987 ;; *************** function _LCD_Initialize *****************
  1988 ;; Defined at:
  1989 ;;		line 60 in file "LCD_Main.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2003 ;;      Params:         0       0       0       0
  2004 ;;      Locals:         0       0       0       0
  2005 ;;      Temps:          2       0       0       0
  2006 ;;      Totals:         2       0       0       0
  2007 ;;Total ram usage:        2 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 3
  2010 ;; This function calls:
  2011 ;;		_LCDPutCmd
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017  043C                     _LCD_Initialize:	
  2018                           ;psect for function _LCD_Initialize
  2019                           
  2020  043C                     l1207:	
  2021                           ;incstack = 0
  2022                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2023                           
  2024                           
  2025                           ;LCD_Main.c: 63: PORTB = 0;
  2026  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2027  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2028  043E  0186               	clrf	6	;volatile
  2029  043F                     l1209:
  2030                           
  2031                           ;LCD_Main.c: 64: PORTC = 0b00010000;
  2032  043F  3010               	movlw	16
  2033  0440  0087               	movwf	7	;volatile
  2034  0441                     l1211:
  2035                           
  2036                           ;LCD_Main.c: 65: TRISB = 0x00;
  2037  0441  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0442  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0443  0186               	clrf	6	;volatile
  2040  0444                     l1213:
  2041                           
  2042                           ;LCD_Main.c: 66: TRISC = 0x00;
  2043  0444  0187               	clrf	7	;volatile
  2044  0445                     l1215:
  2045                           
  2046                           ;LCD_Main.c: 69: _delay((unsigned long)((15)*(4194304/4000.0)));
  2047  0445  3015               	movlw	21
  2048  0446  00F7               	movwf	??_LCD_Initialize+1
  2049  0447  306B               	movlw	107
  2050  0448  00F6               	movwf	??_LCD_Initialize
  2051  0449                     u917:
  2052  0449  0BF6               	decfsz	??_LCD_Initialize,f
  2053  044A  2C49               	goto	u917
  2054  044B  0BF7               	decfsz	??_LCD_Initialize+1,f
  2055  044C  2C49               	goto	u917
  2056  044D  2C4E               	nop2
  2057  044E                     l1217:
  2058                           
  2059                           ;LCD_Main.c: 70: LCDPutCmd(0x02);
  2060  044E  3002               	movlw	2
  2061  044F  118A  2375  118A   	fcall	_LCDPutCmd
  2062  0452                     l1219:
  2063                           
  2064                           ;LCD_Main.c: 72: LCDPutCmd(0x28);
  2065  0452  3028               	movlw	40
  2066  0453  118A  2375  118A   	fcall	_LCDPutCmd
  2067  0456                     l1221:
  2068                           
  2069                           ;LCD_Main.c: 74: LCDPutCmd(0x0C);
  2070  0456  300C               	movlw	12
  2071  0457  118A  2375  118A   	fcall	_LCDPutCmd
  2072  045A                     l1223:
  2073                           
  2074                           ;LCD_Main.c: 76: LCDPutCmd(0x06);
  2075  045A  3006               	movlw	6
  2076  045B  118A  2375  118A   	fcall	_LCDPutCmd
  2077  045E                     l1225:
  2078                           
  2079                           ;LCD_Main.c: 78: LCDPutCmd(0x01);
  2080  045E  3001               	movlw	1
  2081  045F  118A  2375  118A   	fcall	_LCDPutCmd
  2082  0462                     l1227:
  2083                           
  2084                           ;LCD_Main.c: 80: LCDPutCmd(0x80);
  2085  0462  3080               	movlw	128
  2086  0463  118A  2375  118A   	fcall	_LCDPutCmd
  2087  0466                     l45:
  2088  0466  0008               	return
  2089  0467                     __end_of_LCD_Initialize:
  2090                           
  2091                           	psect	text7
  2092  03ED                     __ptext7:	
  2093 ;; *************** function _LCDPutStr *****************
  2094 ;; Defined at:
  2095 ;;		line 169 in file "LCD_Main.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  str             2    6[COMMON] PTR const unsigned char 
  2098 ;;		 -> STR_10(14), main@iTime(6), STR_9(17), STR_8(15), 
  2099 ;;		 -> STR_7(15), STR_6(15), STR_5(6), STR_4(16), 
  2100 ;;		 -> STR_3(15), main@ExpTime(6), STR_2(15), STR_1(15), 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  i               1    9[COMMON] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2112 ;;      Params:         2       0       0       0
  2113 ;;      Locals:         1       0       0       0
  2114 ;;      Temps:          1       0       0       0
  2115 ;;      Totals:         4       0       0       0
  2116 ;;Total ram usage:        4 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 3
  2119 ;; This function calls:
  2120 ;;		_LCDPutChar
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126  03ED                     _LCDPutStr:	
  2127                           ;psect for function _LCDPutStr
  2128                           
  2129  03ED                     l1229:	
  2130                           ;incstack = 0
  2131                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2132                           
  2133                           
  2134                           ;LCD_Main.c: 169: void LCDPutStr(const char *str);LCD_Main.c: 170: {;LCD_Main.c: 171: ch
      +                          ar i=0;
  2135  03ED  01F9               	clrf	LCDPutStr@i
  2136                           
  2137                           ;LCD_Main.c: 174: while (str[i])
  2138  03EE  2C00               	goto	l1235
  2139  03EF                     l1231:
  2140                           
  2141                           ;LCD_Main.c: 175: {;LCD_Main.c: 177: LCDPutChar(str[i++]);
  2142  03EF  0879               	movf	LCDPutStr@i,w
  2143  03F0  0776               	addwf	LCDPutStr@str,w
  2144  03F1  0084               	movwf	4
  2145  03F2  0877               	movf	LCDPutStr@str+1,w
  2146  03F3  1803               	skipnc
  2147  03F4  0A77               	incf	LCDPutStr@str+1,w
  2148  03F5  00FF               	movwf	btemp+1
  2149  03F6  118A  2002  118A   	fcall	stringtab
  2150  03F9  118A  2385  118A   	fcall	_LCDPutChar
  2151  03FC                     l1233:
  2152  03FC  3001               	movlw	1
  2153  03FD  00F8               	movwf	??_LCDPutStr
  2154  03FE  0878               	movf	??_LCDPutStr,w
  2155  03FF  07F9               	addwf	LCDPutStr@i,f
  2156  0400                     l1235:
  2157                           
  2158                           ;LCD_Main.c: 174: while (str[i])
  2159  0400  0879               	movf	LCDPutStr@i,w
  2160  0401  0776               	addwf	LCDPutStr@str,w
  2161  0402  0084               	movwf	4
  2162  0403  0877               	movf	LCDPutStr@str+1,w
  2163  0404  1803               	skipnc
  2164  0405  0A77               	incf	LCDPutStr@str+1,w
  2165  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0408  00FF               	movwf	btemp+1
  2168  0409  118A  2002  118A   	fcall	stringtab
  2169  040C  3A00               	xorlw	0
  2170  040D  1D03               	skipz
  2171  040E  2C10               	goto	u671
  2172  040F  2C11               	goto	u670
  2173  0410                     u671:
  2174  0410  2BEF               	goto	l1231
  2175  0411                     u670:
  2176  0411                     l71:
  2177  0411  0008               	return
  2178  0412                     __end_of_LCDPutStr:
  2179                           
  2180                           	psect	text8
  2181  0385                     __ptext8:	
  2182 ;; *************** function _LCDPutChar *****************
  2183 ;; Defined at:
  2184 ;;		line 143 in file "LCD_Main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  ch              1    wreg     unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  ch              1    5[COMMON] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2198 ;;      Params:         0       0       0       0
  2199 ;;      Locals:         1       0       0       0
  2200 ;;      Temps:          2       0       0       0
  2201 ;;      Totals:         3       0       0       0
  2202 ;;Total ram usage:        3 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 2
  2205 ;; This function calls:
  2206 ;;		_LCDWriteNibble
  2207 ;; This function is called by:
  2208 ;;		_LCDPutStr
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212  0385                     _LCDPutChar:	
  2213                           ;psect for function _LCDPutChar
  2214                           
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  2218                           ;LCDPutChar@ch stored from wreg
  2219  0385  00F5               	movwf	LCDPutChar@ch
  2220  0386                     l1173:
  2221                           
  2222                           ;LCD_Main.c: 143: void LCDPutChar(char ch);LCD_Main.c: 144: {;LCD_Main.c: 145: _delay((u
      +                          nsigned long)((5)*(4194304/4000.0)));
  2223  0386  3007               	movlw	7
  2224  0387  00F4               	movwf	??_LCDPutChar+1
  2225  0388  30CD               	movlw	205
  2226  0389  00F3               	movwf	??_LCDPutChar
  2227  038A                     u927:
  2228  038A  0BF3               	decfsz	??_LCDPutChar,f
  2229  038B  2B8A               	goto	u927
  2230  038C  0BF4               	decfsz	??_LCDPutChar+1,f
  2231  038D  2B8A               	goto	u927
  2232  038E  2B8F               	nop2
  2233  038F                     l1175:
  2234                           
  2235                           ;LCD_Main.c: 148: LCDWriteNibble(ch,1);
  2236  038F  01F1               	clrf	LCDWriteNibble@rs
  2237  0390  0AF1               	incf	LCDWriteNibble@rs,f
  2238  0391  0875               	movf	LCDPutChar@ch,w
  2239  0392  118A  24CD  118A   	fcall	_LCDWriteNibble
  2240  0395                     l62:
  2241  0395  0008               	return
  2242  0396                     __end_of_LCDPutChar:
  2243                           
  2244                           	psect	text9
  2245  0467                     __ptext9:	
  2246 ;; *************** function _LCDGoto *****************
  2247 ;; Defined at:
  2248 ;;		line 182 in file "LCD_Main.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  pos             1    wreg     unsigned char 
  2251 ;;  ln              1    6[COMMON] unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  pos             1   11[COMMON] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2263 ;;      Params:         1       0       0       0
  2264 ;;      Locals:         3       0       0       0
  2265 ;;      Temps:          2       0       0       0
  2266 ;;      Totals:         6       0       0       0
  2267 ;;Total ram usage:        6 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 3
  2270 ;; This function calls:
  2271 ;;		_LCDPutCmd
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277  0467                     _LCDGoto:	
  2278                           ;psect for function _LCDGoto
  2279                           
  2280                           
  2281                           ;incstack = 0
  2282                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  2283                           ;LCDGoto@pos stored from wreg
  2284  0467  00FB               	movwf	LCDGoto@pos
  2285  0468                     l1237:
  2286                           
  2287                           ;LCD_Main.c: 182: void LCDGoto(char pos,char ln);LCD_Main.c: 183: {;LCD_Main.c: 185: if 
      +                          ((ln > (2 -1)) || (pos > (16 -1)))
  2288  0468  3002               	movlw	2
  2289  0469  0276               	subwf	LCDGoto@ln,w
  2290  046A  1803               	skipnc
  2291  046B  2C6D               	goto	u681
  2292  046C  2C6E               	goto	u680
  2293  046D                     u681:
  2294  046D  2C92               	goto	l77
  2295  046E                     u680:
  2296  046E                     l1239:
  2297  046E  3010               	movlw	16
  2298  046F  027B               	subwf	LCDGoto@pos,w
  2299  0470  1C03               	skipc
  2300  0471  2C73               	goto	u691
  2301  0472  2C74               	goto	u690
  2302  0473                     u691:
  2303  0473  2C75               	goto	l1241
  2304  0474                     u690:
  2305  0474  2C92               	goto	l77
  2306  0475                     l1241:
  2307                           
  2308                           ;LCD_Main.c: 192: LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  2309  0475  0376               	decf	LCDGoto@ln,w
  2310  0476  1903               	btfsc	3,2
  2311  0477  2C79               	goto	u701
  2312  0478  2C7A               	goto	u700
  2313  0479                     u701:
  2314  0479  2C80               	goto	l1245
  2315  047A                     u700:
  2316  047A                     l1243:
  2317  047A  3080               	movlw	128
  2318  047B  047B               	iorwf	LCDGoto@pos,w
  2319  047C  00F9               	movwf	_LCDGoto$138
  2320  047D  3000               	movlw	0
  2321  047E  00FA               	movwf	_LCDGoto$138+1
  2322  047F  2C85               	goto	l1247
  2323  0480                     l1245:
  2324  0480  30C0               	movlw	192
  2325  0481  047B               	iorwf	LCDGoto@pos,w
  2326  0482  00F9               	movwf	_LCDGoto$138
  2327  0483  3000               	movlw	0
  2328  0484  00FA               	movwf	_LCDGoto$138+1
  2329  0485                     l1247:
  2330  0485  0879               	movf	_LCDGoto$138,w
  2331  0486  118A  2375  118A   	fcall	_LCDPutCmd
  2332  0489                     l1249:
  2333                           
  2334                           ;LCD_Main.c: 195: _delay((unsigned long)((5)*(4194304/4000.0)));
  2335  0489  3007               	movlw	7
  2336  048A  00F8               	movwf	??_LCDGoto+1
  2337  048B  30CD               	movlw	205
  2338  048C  00F7               	movwf	??_LCDGoto
  2339  048D                     u937:
  2340  048D  0BF7               	decfsz	??_LCDGoto,f
  2341  048E  2C8D               	goto	u937
  2342  048F  0BF8               	decfsz	??_LCDGoto+1,f
  2343  0490  2C8D               	goto	u937
  2344  0491  2C92               	nop2
  2345  0492                     l77:
  2346  0492  0008               	return
  2347  0493                     __end_of_LCDGoto:
  2348                           
  2349                           	psect	text10
  2350  0375                     __ptext10:	
  2351 ;; *************** function _LCDPutCmd *****************
  2352 ;; Defined at:
  2353 ;;		line 154 in file "LCD_Main.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  ch              1    wreg     unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  ch              1    5[COMMON] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2367 ;;      Params:         0       0       0       0
  2368 ;;      Locals:         1       0       0       0
  2369 ;;      Temps:          2       0       0       0
  2370 ;;      Totals:         3       0       0       0
  2371 ;;Total ram usage:        3 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 2
  2374 ;; This function calls:
  2375 ;;		_LCDWriteNibble
  2376 ;; This function is called by:
  2377 ;;		_LCD_Initialize
  2378 ;;		_LCDGoto
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383  0375                     _LCDPutCmd:	
  2384                           ;psect for function _LCDPutCmd
  2385                           
  2386                           
  2387                           ;incstack = 0
  2388                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  2389                           ;LCDPutCmd@ch stored from wreg
  2390  0375  00F5               	movwf	LCDPutCmd@ch
  2391  0376                     l1169:
  2392                           
  2393                           ;LCD_Main.c: 154: void LCDPutCmd(char ch);LCD_Main.c: 155: {;LCD_Main.c: 156: _delay((un
      +                          signed long)((5)*(4194304/4000.0)));
  2394  0376  3007               	movlw	7
  2395  0377  00F4               	movwf	??_LCDPutCmd+1
  2396  0378  30CD               	movlw	205
  2397  0379  00F3               	movwf	??_LCDPutCmd
  2398  037A                     u947:
  2399  037A  0BF3               	decfsz	??_LCDPutCmd,f
  2400  037B  2B7A               	goto	u947
  2401  037C  0BF4               	decfsz	??_LCDPutCmd+1,f
  2402  037D  2B7A               	goto	u947
  2403  037E  2B7F               	nop2
  2404  037F                     l1171:
  2405                           
  2406                           ;LCD_Main.c: 159: LCDWriteNibble(ch,0);
  2407  037F  01F1               	clrf	LCDWriteNibble@rs
  2408  0380  0875               	movf	LCDPutCmd@ch,w
  2409  0381  118A  24CD  118A   	fcall	_LCDWriteNibble
  2410  0384                     l65:
  2411  0384  0008               	return
  2412  0385                     __end_of_LCDPutCmd:
  2413                           
  2414                           	psect	text11
  2415  04CD                     __ptext11:	
  2416 ;; *************** function _LCDWriteNibble *****************
  2417 ;; Defined at:
  2418 ;;		line 93 in file "LCD_Main.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  ch              1    wreg     unsigned char 
  2421 ;;  rs              1    1[COMMON] unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  ch              1    2[COMMON] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2433 ;;      Params:         1       0       0       0
  2434 ;;      Locals:         1       0       0       0
  2435 ;;      Temps:          0       0       0       0
  2436 ;;      Totals:         2       0       0       0
  2437 ;;Total ram usage:        2 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 1
  2440 ;; This function calls:
  2441 ;;		_ToggleEnable
  2442 ;; This function is called by:
  2443 ;;		_LCDPutChar
  2444 ;;		_LCDPutCmd
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448  04CD                     _LCDWriteNibble:	
  2449                           ;psect for function _LCDWriteNibble
  2450                           
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0+pclath+cstack]
  2454                           ;LCDWriteNibble@ch stored from wreg
  2455  04CD  00F2               	movwf	LCDWriteNibble@ch
  2456  04CE                     l1077:
  2457                           
  2458                           ;LCD_Main.c: 93: void LCDWriteNibble(char ch, char rs);LCD_Main.c: 94: {;LCD_Main.c: 96:
      +                           PORTBbits.RB6 = rs;
  2459  04CE  0C71               	rrf	LCDWriteNibble@rs,w
  2460  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2461  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2462  04D1  1C03               	skipc
  2463  04D2  1306               	bcf	6,6	;volatile
  2464  04D3  1803               	skipnc
  2465  04D4  1706               	bsf	6,6	;volatile
  2466  04D5                     l1079:
  2467                           
  2468                           ;LCD_Main.c: 99: PORTBbits.RB7 = 0;
  2469  04D5  1386               	bcf	6,7	;volatile
  2470  04D6                     l1081:
  2471                           
  2472                           ;LCD_Main.c: 103: RB0 = 0x00;
  2473  04D6  1006               	bcf	6,0	;volatile
  2474  04D7                     l1083:
  2475                           
  2476                           ;LCD_Main.c: 104: RB1 = 0x00;
  2477  04D7  1086               	bcf	6,1	;volatile
  2478  04D8                     l1085:
  2479                           
  2480                           ;LCD_Main.c: 105: RB2 = 0x00;
  2481  04D8  1106               	bcf	6,2	;volatile
  2482  04D9                     l1087:
  2483                           
  2484                           ;LCD_Main.c: 106: RB3 = 0x00;
  2485  04D9  1186               	bcf	6,3	;volatile
  2486  04DA                     l1089:
  2487                           
  2488                           ;LCD_Main.c: 108:     if ((ch&0x10) == 0x10)
  2489  04DA  1E72               	btfss	LCDWriteNibble@ch,4
  2490  04DB  2CDD               	goto	u431
  2491  04DC  2CDE               	goto	u430
  2492  04DD                     u431:
  2493  04DD  2CDF               	goto	l51
  2494  04DE                     u430:
  2495  04DE                     l1091:
  2496                           
  2497                           ;LCD_Main.c: 109:             RB0 = 1;
  2498  04DE  1406               	bsf	6,0	;volatile
  2499  04DF                     l51:
  2500                           
  2501                           ;LCD_Main.c: 110:     if ((ch&0x20) == 0x20)
  2502  04DF  1EF2               	btfss	LCDWriteNibble@ch,5
  2503  04E0  2CE2               	goto	u441
  2504  04E1  2CE3               	goto	u440
  2505  04E2                     u441:
  2506  04E2  2CE4               	goto	l52
  2507  04E3                     u440:
  2508  04E3                     l1093:
  2509                           
  2510                           ;LCD_Main.c: 111:             RB1 = 1;
  2511  04E3  1486               	bsf	6,1	;volatile
  2512  04E4                     l52:
  2513                           
  2514                           ;LCD_Main.c: 112:     if ((ch&0x40) == 0x40)
  2515  04E4  1F72               	btfss	LCDWriteNibble@ch,6
  2516  04E5  2CE7               	goto	u451
  2517  04E6  2CE8               	goto	u450
  2518  04E7                     u451:
  2519  04E7  2CE9               	goto	l53
  2520  04E8                     u450:
  2521  04E8                     l1095:
  2522                           
  2523                           ;LCD_Main.c: 113:             RB2 = 1;
  2524  04E8  1506               	bsf	6,2	;volatile
  2525  04E9                     l53:
  2526                           
  2527                           ;LCD_Main.c: 114:     if ((ch&0x80) == 0x80)
  2528  04E9  1FF2               	btfss	LCDWriteNibble@ch,7
  2529  04EA  2CEC               	goto	u461
  2530  04EB  2CED               	goto	u460
  2531  04EC                     u461:
  2532  04EC  2CEE               	goto	l1099
  2533  04ED                     u460:
  2534  04ED                     l1097:
  2535                           
  2536                           ;LCD_Main.c: 115:             RB3 = 1;
  2537  04ED  1586               	bsf	6,3	;volatile
  2538  04EE                     l1099:
  2539                           
  2540                           ;LCD_Main.c: 117: ToggleEnable();
  2541  04EE  118A  2396  118A   	fcall	_ToggleEnable
  2542  04F1                     l1101:
  2543                           
  2544                           ;LCD_Main.c: 121: RB0 = 0x00;
  2545  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2546  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2547  04F3  1006               	bcf	6,0	;volatile
  2548  04F4                     l1103:
  2549                           
  2550                           ;LCD_Main.c: 122: RB1 = 0x00;
  2551  04F4  1086               	bcf	6,1	;volatile
  2552  04F5                     l1105:
  2553                           
  2554                           ;LCD_Main.c: 123: RB2 = 0x00;
  2555  04F5  1106               	bcf	6,2	;volatile
  2556  04F6                     l1107:
  2557                           
  2558                           ;LCD_Main.c: 124: RB3 = 0x00;
  2559  04F6  1186               	bcf	6,3	;volatile
  2560  04F7                     l1109:
  2561                           
  2562                           ;LCD_Main.c: 126:     if ((ch&0x01) == 0x01)
  2563  04F7  1C72               	btfss	LCDWriteNibble@ch,0
  2564  04F8  2CFA               	goto	u471
  2565  04F9  2CFB               	goto	u470
  2566  04FA                     u471:
  2567  04FA  2CFC               	goto	l55
  2568  04FB                     u470:
  2569  04FB                     l1111:
  2570                           
  2571                           ;LCD_Main.c: 127:             RB0 = 1;
  2572  04FB  1406               	bsf	6,0	;volatile
  2573  04FC                     l55:
  2574                           
  2575                           ;LCD_Main.c: 128:     if ((ch&0x02) == 0x02)
  2576  04FC  1CF2               	btfss	LCDWriteNibble@ch,1
  2577  04FD  2CFF               	goto	u481
  2578  04FE  2D00               	goto	u480
  2579  04FF                     u481:
  2580  04FF  2D01               	goto	l56
  2581  0500                     u480:
  2582  0500                     l1113:
  2583                           
  2584                           ;LCD_Main.c: 129:             RB1 = 1;
  2585  0500  1486               	bsf	6,1	;volatile
  2586  0501                     l56:
  2587                           
  2588                           ;LCD_Main.c: 130:     if ((ch&0x04) == 0x04)
  2589  0501  1D72               	btfss	LCDWriteNibble@ch,2
  2590  0502  2D04               	goto	u491
  2591  0503  2D05               	goto	u490
  2592  0504                     u491:
  2593  0504  2D06               	goto	l57
  2594  0505                     u490:
  2595  0505                     l1115:
  2596                           
  2597                           ;LCD_Main.c: 131:             RB2 = 1;
  2598  0505  1506               	bsf	6,2	;volatile
  2599  0506                     l57:
  2600                           
  2601                           ;LCD_Main.c: 132:     if ((ch&0x08) == 0x08)
  2602  0506  1DF2               	btfss	LCDWriteNibble@ch,3
  2603  0507  2D09               	goto	u501
  2604  0508  2D0A               	goto	u500
  2605  0509                     u501:
  2606  0509  2D0B               	goto	l1119
  2607  050A                     u500:
  2608  050A                     l1117:
  2609                           
  2610                           ;LCD_Main.c: 133:             RB3 = 1;
  2611  050A  1586               	bsf	6,3	;volatile
  2612  050B                     l1119:
  2613                           
  2614                           ;LCD_Main.c: 135:  ToggleEnable();
  2615  050B  118A  2396  118A   	fcall	_ToggleEnable
  2616  050E                     l59:
  2617  050E  0008               	return
  2618  050F                     __end_of_LCDWriteNibble:
  2619                           
  2620                           	psect	text12
  2621  0396                     __ptext12:	
  2622 ;; *************** function _ToggleEnable *****************
  2623 ;; Defined at:
  2624 ;;		line 83 in file "LCD_Main.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2638 ;;      Params:         0       0       0       0
  2639 ;;      Locals:         0       0       0       0
  2640 ;;      Temps:          1       0       0       0
  2641 ;;      Totals:         1       0       0       0
  2642 ;;Total ram usage:        1 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_LCDWriteNibble
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651  0396                     _ToggleEnable:	
  2652                           ;psect for function _ToggleEnable
  2653                           
  2654  0396                     l1071:	
  2655                           ;incstack = 0
  2656                           ; Regs used in _ToggleEnable: [wreg]
  2657                           
  2658                           
  2659                           ;LCD_Main.c: 85: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2660  0396  3003               	movlw	3
  2661  0397  00F0               	movwf	??_ToggleEnable
  2662  0398                     u957:
  2663  0398  0BF0               	decfsz	??_ToggleEnable,f
  2664  0399  2B98               	goto	u957
  2665  039A                     l1073:
  2666                           
  2667                           ;LCD_Main.c: 86: PORTCbits.RC5 = 1;
  2668  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2669  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2670  039C  1687               	bsf	7,5	;volatile
  2671                           
  2672                           ;LCD_Main.c: 87: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2673  039D  3003               	movlw	3
  2674  039E  00F0               	movwf	??_ToggleEnable
  2675  039F                     u967:
  2676  039F  0BF0               	decfsz	??_ToggleEnable,f
  2677  03A0  2B9F               	goto	u967
  2678  03A1                     l1075:
  2679                           
  2680                           ;LCD_Main.c: 88: PORTCbits.RC5 = 0;
  2681  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2682  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2683  03A3  1287               	bcf	7,5	;volatile
  2684                           
  2685                           ;LCD_Main.c: 89: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2686  03A4  3003               	movlw	3
  2687  03A5  00F0               	movwf	??_ToggleEnable
  2688  03A6                     u977:
  2689  03A6  0BF0               	decfsz	??_ToggleEnable,f
  2690  03A7  2BA6               	goto	u977
  2691  03A8                     l48:
  2692  03A8  0008               	return
  2693  03A9                     __end_of_ToggleEnable:
  2694                           
  2695                           	psect	text13
  2696  0412                     __ptext13:	
  2697 ;; *************** function _ADC_Read *****************
  2698 ;; Defined at:
  2699 ;;		line 209 in file "LCD_Main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  channel         1    wreg     unsigned char 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  channel         1    4[COMMON] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  2    0[COMMON] unsigned int 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2713 ;;      Params:         2       0       0       0
  2714 ;;      Locals:         1       0       0       0
  2715 ;;      Temps:          2       0       0       0
  2716 ;;      Totals:         5       0       0       0
  2717 ;;Total ram usage:        5 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726  0412                     _ADC_Read:	
  2727                           ;psect for function _ADC_Read
  2728                           
  2729                           
  2730                           ;incstack = 0
  2731                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2732                           ;ADC_Read@channel stored from wreg
  2733  0412  00F4               	movwf	ADC_Read@channel
  2734  0413                     l1257:
  2735                           
  2736                           ;LCD_Main.c: 209: unsigned int ADC_Read(unsigned char channel);LCD_Main.c: 211: {;LCD_Ma
      +                          in.c: 213:   ADCON0 &= 0x11000101;
  2737  0413  3001               	movlw	1
  2738  0414  00F2               	movwf	??_ADC_Read
  2739  0415  0872               	movf	??_ADC_Read,w
  2740  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0418  059F               	andwf	31,f	;volatile
  2743                           
  2744                           ;LCD_Main.c: 215:   ADCON0 |= channel<<3;
  2745  0419  0874               	movf	ADC_Read@channel,w	;volatile
  2746  041A  00F2               	movwf	??_ADC_Read
  2747  041B  3002               	movlw	2
  2748  041C                     u715:
  2749  041C  1003               	clrc
  2750  041D  0DF2               	rlf	??_ADC_Read,f
  2751  041E  3EFF               	addlw	-1
  2752  041F  1D03               	skipz
  2753  0420  2C1C               	goto	u715
  2754  0421  1003               	clrc
  2755  0422  0D72               	rlf	??_ADC_Read,w
  2756  0423  00F3               	movwf	??_ADC_Read+1
  2757  0424  0873               	movf	??_ADC_Read+1,w
  2758  0425  049F               	iorwf	31,f	;volatile
  2759  0426                     l1259:
  2760                           
  2761                           ;LCD_Main.c: 217:   _delay((unsigned long)((2)*(4194304/4000.0)));
  2762  0426  3003               	movlw	3
  2763  0427  00F3               	movwf	??_ADC_Read+1
  2764  0428  30B8               	movlw	184
  2765  0429  00F2               	movwf	??_ADC_Read
  2766  042A                     u987:
  2767  042A  0BF2               	decfsz	??_ADC_Read,f
  2768  042B  2C2A               	goto	u987
  2769  042C  0BF3               	decfsz	??_ADC_Read+1,f
  2770  042D  2C2A               	goto	u987
  2771  042E                     l1261:
  2772                           
  2773                           ;LCD_Main.c: 219:   GO_nDONE = 1;
  2774  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2775  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0430  149F               	bsf	31,1	;volatile
  2777  0431                     l87:	
  2778                           ;LCD_Main.c: 221:   while(GO_nDONE);
  2779                           
  2780  0431  189F               	btfsc	31,1	;volatile
  2781  0432  2C34               	goto	u721
  2782  0433  2C35               	goto	u720
  2783  0434                     u721:
  2784  0434  2C31               	goto	l87
  2785  0435                     u720:
  2786  0435                     l1263:
  2787                           
  2788                           ;LCD_Main.c: 223:   return ((ADRESH<<8)+ADRESL);
  2789  0435  081E               	movf	30,w	;volatile
  2790  0436  00F1               	movwf	?_ADC_Read+1
  2791  0437  1683               	bsf	3,5	;RP0=1, select bank1
  2792  0438  1303               	bcf	3,6	;RP1=0, select bank1
  2793  0439  081E               	movf	30,w	;volatile
  2794  043A  00F0               	movwf	?_ADC_Read
  2795  043B                     l90:
  2796  043B  0008               	return
  2797  043C                     __end_of_ADC_Read:
  2798                           
  2799                           	psect	text14
  2800  0369                     __ptext14:	
  2801 ;; *************** function _ADC_Initialize *****************
  2802 ;; Defined at:
  2803 ;;		line 200 in file "LCD_Main.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2817 ;;      Params:         0       0       0       0
  2818 ;;      Locals:         0       0       0       0
  2819 ;;      Temps:          0       0       0       0
  2820 ;;      Totals:         0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_main
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830  0369                     _ADC_Initialize:	
  2831                           ;psect for function _ADC_Initialize
  2832                           
  2833  0369                     l1251:	
  2834                           ;incstack = 0
  2835                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2836                           
  2837                           
  2838                           ;LCD_Main.c: 202:   ANSELH = 0x00;
  2839  0369  1683               	bsf	3,5	;RP0=1, select bank3
  2840  036A  1703               	bsf	3,6	;RP1=1, select bank3
  2841  036B  0189               	clrf	9	;volatile
  2842  036C                     l1253:
  2843                           
  2844                           ;LCD_Main.c: 203:   ADCON0 = 0b01000001;
  2845  036C  3041               	movlw	65
  2846  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2847  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2848  036F  009F               	movwf	31	;volatile
  2849  0370                     l1255:
  2850                           
  2851                           ;LCD_Main.c: 205:   ADCON1 = 0b11000000;
  2852  0370  30C0               	movlw	192
  2853  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0372  1303               	bcf	3,6	;RP1=0, select bank1
  2855  0373  009F               	movwf	31	;volatile
  2856  0374                     l84:
  2857  0374  0008               	return
  2858  0375                     __end_of_ADC_Initialize:
  2859  007E                     btemp	set	126	;btemp
  2860  007E                     wtemp0	set	126
  2861                           
  2862                           	psect	idloc
  2863                           
  2864                           ;Config register IDLOC0 @ 0x2000
  2865                           ;	unspecified, using default values
  2866  2000                     	org	8192
  2867  2000  3FFF               	dw	16383
  2868                           
  2869                           ;Config register IDLOC1 @ 0x2001
  2870                           ;	unspecified, using default values
  2871  2001                     	org	8193
  2872  2001  3FFF               	dw	16383
  2873                           
  2874                           ;Config register IDLOC2 @ 0x2002
  2875                           ;	unspecified, using default values
  2876  2002                     	org	8194
  2877  2002  3FFF               	dw	16383
  2878                           
  2879                           ;Config register IDLOC3 @ 0x2003
  2880                           ;	unspecified, using default values
  2881  2003                     	org	8195
  2882  2003  3FFF               	dw	16383
  2883                           
  2884                           	psect	config
  2885                           
  2886                           ;Config register CONFIG1 @ 0x2007
  2887                           ;	Oscillator Selection bits
  2888                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2889                           ;	Watchdog Timer Enable bit
  2890                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2891                           ;	Power-up Timer Enable bit
  2892                           ;	PWRTE = ON, PWRT enabled
  2893                           ;	RE3/MCLR pin function select bit
  2894                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2895                           ;	Code Protection bit
  2896                           ;	CP = OFF, Program memory code protection is disabled
  2897                           ;	Data Code Protection bit
  2898                           ;	CPD = OFF, Data memory code protection is disabled
  2899                           ;	Brown Out Reset Selection bits
  2900                           ;	BOREN = ON, BOR enabled
  2901                           ;	Internal External Switchover bit
  2902                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2903                           ;	Fail-Safe Clock Monitor Enabled bit
  2904                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2905                           ;	Low Voltage Programming Enable bit
  2906                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2907                           ;	In-Circuit Debugger Mode bit
  2908                           ;	DEBUG = 0x1, unprogrammed default
  2909  2007                     	org	8199
  2910  2007  23E1               	dw	9185
  2911                           
  2912                           ;Config register CONFIG2 @ 0x2008
  2913                           ;	Brown-out Reset Selection bit
  2914                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2915                           ;	Flash Program Memory Self Write Enable bits
  2916                           ;	WRT = OFF, Write protection off
  2917  2008                     	org	8200
  2918  2008  3FFF               	dw	16383

Data Sizes:
    Strings     98
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      37
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[14]), main@iTime(BANK0[6]), STR_9(CODE[17]), STR_8(CODE[15]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[6]), STR_4(CODE[16]), 
		 -> STR_3(CODE[15]), main@ExpTime(BANK0[6]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDWriteNibble->_ToggleEnable

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    6569
                                              9 BANK0     28    28      0
                     _ADC_Initialize
                           _ADC_Read
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                               _itoa
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     281
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2167
                                             13 COMMON     1     1      0
                                              4 BANK0      5     1      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     372
                                              6 COMMON     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            4     2      2    1526
                                              6 COMMON     4     2      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1    1266
                                              6 COMMON     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     350
                                              1 COMMON     2     1      1
                       _ToggleEnable
 ---------------------------------------------------------------------------------
 (4) _ToggleEnable                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
         _ToggleEnable
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     25      25       3       46.2%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 31 22:35:24 2022

         _LCD_Initialize 043C                        pc 0002                       l51 04DF  
            ?_LCDPutChar 0070                       l52 04E4                       l53 04E9  
                     l45 0466                       l62 0395                       l55 04FC  
                     l71 0411                       l48 03A8                       l56 0501  
                     l57 0506                       l65 0384                       l90 043B  
                     l59 050E                       l84 0374                       l77 0492  
                     l87 0431              main@ExpTime 0039                       fsr 0004  
                    l104 07F7                      l107 07EF                      l651 03EC  
                    l469 0552                      l479 04CC                      l657 05A7  
                    l665 03C8                      l659 05BE                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RC4 003C                      u500 050A                      u501 0509  
                    u430 04DE                      u510 0517                      u431 04DD  
                    u511 0516                      u440 04E3                      u600 04AB  
                    u441 04E2                      u601 04AA                      u450 04E8  
                    u530 0529                      u610 04B5                      u451 04E7  
                    u531 0528                      u611 04B4                      u460 04ED  
                    u700 047A                      u461 04EC                      u701 0479  
                    u525 051B                      u470 04FB                      u550 053A  
                    u630 04C8                      u471 04FA                      u551 0539  
                    u631 04C7                      u615 04B1                      u720 0435  
                    u480 0500                      u640 0575                      u800 06AC  
                    u721 0434                      u481 04FF                      u545 052A  
                    u625 04BC                      u641 0574                      u801 06AB  
                    u490 0505                      u570 054E                      u650 05A3  
                    u730 03D0                      u810 06FB                      u715 041C  
                    u491 0504                      u571 054D                      u555 0536  
                    u651 05A2                      u731 03CF                      u811 06FA  
                    u580 0499                      u660 05BA                      u740 03C8  
                    u820 070A                      u565 0542                      u581 0498  
                    u661 05B9                      u741 03C7                      u821 0709  
                    u805 06A8                      u670 0411                      u830 077B  
                    u750 061A                      u671 0410                      u831 077A  
                    u815 06F7                      u751 0619                      u680 046E  
                    u840 07EF                      u760 0629                      u681 046D  
                    u841 07EE                      u825 0706                      u761 0628  
                    u690 0474                      u770 063E                      u691 0473  
                    u595 049D                      u907 07AD                      u835 0777  
                    u771 063D                      u755 0616                      u780 0688  
                    u917 0449                      u845 07EB                      u781 0687  
                    u765 0625                      u790 0697                      u927 038A  
                    u791 0696                      u775 063A                      u937 048D  
                    u785 0684                      u857 05EA                      u947 037A  
                    u795 0693                      u867 0671                      u957 0398  
                    u877 06DF                      u967 039F                      u887 0722  
                    u977 03A6                      u897 0760                      u987 042A  
                    fsr0 0004                      indf 0000          __end_of_LCDGoto 0493  
                   l1101 04F1                     l1111 04FB                     l1103 04F4  
                   l1113 0500                     l1105 04F5                     l1121 050F  
                   l1201 05B4                     l1115 0505                     l1107 04F6  
                   l1211 0441                     l1131 0525                     l1123 0511  
                   l1203 05BA                     l1117 050A                     l1109 04F7  
                   l1221 0456                     l1213 0444                     l1141 0548  
                   l1133 0529                     l1125 0517                     l1301 05DB  
                   l1071 0396                     l1119 050B                     l1231 03EF  
                   l1223 045A                     l1215 0445                     l1207 043C  
                   l1135 053A                     l1127 051A                     l1143 054E  
                   l1151 049C                     l1311 060B                     l1303 05E2  
                   l1073 039A                     l1081 04D6                     l1241 0475  
                   l1233 03FC                     l1225 045E                     l1217 044E  
                   l1209 043F                     l1137 0540                     l1129 0521  
                   l1161 04BB                     l1153 04A3                     l1401 07A2  
                   l1321 0644                     l1313 061A                     l1305 05F1  
                   l1251 0369                     l1075 03A1                     l1091 04DE  
                   l1083 04D7                     l1171 037F                     l1243 047A  
                   l1235 0400                     l1227 0462                     l1219 0452  
                   l1139 0541                     l1163 04C2                     l1155 04A7  
                   l1147 0493                     l1411 07D2                     l1403 07A5  
                   l1331 0669                     l1323 0652                     l1315 0629  
                   l1307 05F5                     l1253 036C                     l1261 042E  
                   l1093 04E3                     l1085 04D8                     l1077 04CE  
                   l1245 0480                     l1237 0468                     l1173 0386  
                   l1229 03ED                     l1157 04AB                     l1149 0499  
                   l1165 04C8                     l1181 056B                     l1413 07D9  
                   l1405 07B3                     l1341 06AC                     l1325 0657  
                   l1317 0631                     l1333 0679                     l1309 05FF  
                   l1255 0370                     l1263 0435                     l1095 04E8  
                   l1087 04D9                     l1079 04D5                     l1247 0485  
                   l1239 046E                     l1175 038F                     l1159 04B5  
                   l1191 058C                     l1183 056F                     l1271 03D0  
                   l1407 07C5                     l1415 07E1                     l1351 06D3  
                   l1343 06B2                     l1335 0688                     l1327 065E  
                   l1319 063E                     l1257 0413                     l1097 04ED  
                   l1089 04DA                     l1169 0376                     l1249 0489  
                   l1193 059B                     l1185 0575                     l1177 0556  
                   l1273 03D7                     l1281 03AA                     l1417 07F2  
                   l1409 07CB                     l1361 070A                     l1353 06D7  
                   l1345 06C0                     l1337 0697                     l1329 0665  
                   l1259 0426                     l1099 04EE                     l1195 05A3  
                   l1187 0579                     l1179 055A                     l1275 03DB  
                   l1267 03CC                     l1283 03AF                     l1371 073A  
                   l1363 0713                     l1355 06E6                     l1347 06C5  
                   l1339 069F                     l1291 05C2                     l1197 05AB  
                   l1189 057B                     l1277 03E0                     l1269 03CC  
                   l1285 03B6                     l1381 0758                     l1373 0740  
                   l1365 071A                     l1349 06CC                     l1357 06EC  
                   l1293 05C6                     l1199 05B2                     l1287 03BA  
                   l1391 0787                     l1383 0767                     l1375 0744  
                   l1367 0729                     l1359 06FB                     l1295 05C9  
                   l1393 0794                     l1377 074B                     l1369 072F  
                   l1385 076C                     l1297 05CE                     l1289 05BF  
                   l1395 079B                     l1387 077B                     l1379 0751  
                   l1299 05D5                     l1397 079F                     l1389 0780  
                   l1399 07A2                     STR_1 0042                     STR_2 0033  
                   STR_3 0051                     STR_4 0023                     STR_5 006E  
                   STR_6 0042                     STR_7 0033                     STR_8 0051  
                   STR_9 0012                     _main 05BF                     _itoa 03C9  
                   btemp 007E                     _utoa 0553         __end_of_ADC_Read 043C  
                   start 0000   __end_of_LCD_Initialize 0467              LCDPutCmd@ch 0075  
                  ?_main 0070                    ?_itoa 0024                    STR_10 0060  
                  ?_utoa 0078          __end_of___lwdiv 0553          __end_of___lwmod 04CD  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    main@i 003F                    pclath 000A  
                  utoa@c 0022                    utoa@v 0020                    status 0003  
                  wtemp0 007E          ?_LCD_Initialize 0070          __initialization 07FD  
           __end_of_main 07FD             __end_of_itoa 03ED             __end_of_utoa 05BF  
                 ??_main 0029                   ??_itoa 007D                   ??_utoa 007C  
              ??_LCDGoto 0077        __end_of_LCDPutCmd 0385             LCDPutChar@ch 0075  
      __end_of_LCDPutStr 0412                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
           LCDPutStr@str 0076           _LCDWriteNibble 04CD                ??___lwdiv 0074  
              ??___lwmod 0074          ADC_Read@channel 0074                   _memset 03A9  
              ?_ADC_Read 0070   __end_of_LCDWriteNibble 050F  __end_of__initialization 07FD  
              LCDGoto@ln 0076           __pcstackCOMMON 0070             ??_LCDPutChar 0073  
             ??_ADC_Read 0072          ?_LCDWriteNibble 0071       __end_of_LCDPutChar 0396  
             __pmaintext 05BF                  ?_memset 0070                  _LCDGoto 0467  
             __stringtab 0002         ??_LCD_Initialize 0076                  ___lwdiv 050F  
                ___lwmod 0493                  __ptext1 03A9                  __ptext2 03C9  
                __ptext3 0553                  __ptext4 0493                  __ptext5 050F  
                __ptext6 043C                  __ptext7 03ED                  __ptext8 0385  
                __ptext9 0467            ?_ToggleEnable 0070                _LCDPutCmd 0375  
                main@adc 0043                _LCDPutStr 03ED     end_of_initialization 07FD  
                itoa@buf 0028                  memset@c 0070                  itoa@val 0024  
                memset@n 0072                  memset@p 0076                  utoa@buf 0023  
                utoa@val 0078           ??_ToggleEnable 0070                _PORTBbits 0006  
              _PORTCbits 0007               main@Buffer 002C               ?_LCDPutCmd 0070  
             ?_LCDPutStr 0076               LCDGoto@pos 007B               LCDPutStr@i 0079  
         _ADC_Initialize 0369           __end_of_memset 03C9         main@ExposureTime 0041  
    start_initialization 07FD         ??_LCDWriteNibble 0072   __end_of_ADC_Initialize 0375  
               ??_memset 0074                 ?_LCDGoto 0076                ___latbits 0001  
          __pcstackBANK0 0020              ??_LCDPutCmd 0073              ??_LCDPutStr 0078  
   __end_of_ToggleEnable 03A9         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0070          ?_ADC_Initialize 0070         LCDWriteNibble@ch 0072  
       LCDWriteNibble@rs 0071                __pstrings 0002                 _ADC_Read 0412  
       ___lwdiv@quotient 0075              _LCDGoto$138 0079                 _GO_nDONE 00F9  
            __stringbase 0011                main@iTime 0033       __end_of__stringtab 0012  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0375  
               __ptext11 04CD                 __ptext12 0396                 __ptext13 0412  
               __ptext14 0369               _LCDPutChar 0385             _ToggleEnable 0396  
               itoa@base 0026                 memset@p1 0075         ___lwmod@dividend 0072  
       ??_ADC_Initialize 0070                stringcode 000C                 utoa@base 007A  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 000C  
               stringtab 0002  
