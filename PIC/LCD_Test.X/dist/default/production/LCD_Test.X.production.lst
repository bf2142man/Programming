

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 30 21:49:42 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F883 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  001E                     _ADRESH	set	30
   215  001F                     _ADCON0	set	31
   216  0006                     _PORTBbits	set	6
   217  0007                     _PORTCbits	set	7
   218  0007                     _PORTC	set	7
   219  0006                     _PORTB	set	6
   220  003C                     _RC4	set	60
   221  00F9                     _GO_nDONE	set	249
   222  0033                     _RB3	set	51
   223  0032                     _RB2	set	50
   224  0031                     _RB1	set	49
   225  0030                     _RB0	set	48
   226  009E                     _ADRESL	set	158
   227  009F                     _ADCON1	set	159
   228  0087                     _TRISC	set	135
   229  0086                     _TRISB	set	134
   230  0189                     _ANSELH	set	393
   231                           
   232                           	psect	strings
   233  0002                     __pstrings:
   234  0002                     stringtab:
   235  0002                     __stringtab:
   236                           
   237                           ;	String table - string pointers are 1 byte each
   238  0002  1BFF               	btfsc	btemp+1,7
   239  0003  280C               	ljmp	stringcode
   240  0004  1383               	bcf	3,7
   241  0005  187F               	btfsc	btemp+1,0
   242  0006  1783               	bsf	3,7
   243  0007  0800               	movf	0,w
   244  0008  0A84               	incf	4,f
   245  0009  1903               	skipnz
   246  000A  0AFF               	incf	btemp+1,f
   247  000B  0008               	return
   248  000C                     stringcode:
   249  000C                     stringdir:
   250  000C  3000               	movlw	high stringdir
   251  000D  008A               	movwf	10
   252  000E  0804               	movf	4,w
   253  000F  0A84               	incf	4,f
   254  0010  0782               	addwf	2,f
   255  0011                     __stringbase:
   256  0011  3400               	retlw	0
   257  0012                     __end_of__stringtab:
   258  0012                     STR_9:
   259  0012  3420               	retlw	32	;' '
   260  0013  3420               	retlw	32	;' '
   261  0014  3420               	retlw	32	;' '
   262  0015  3420               	retlw	32	;' '
   263  0016  3420               	retlw	32	;' '
   264  0017  3420               	retlw	32	;' '
   265  0018  3420               	retlw	32	;' '
   266  0019  3420               	retlw	32	;' '
   267  001A  3420               	retlw	32	;' '
   268  001B  3420               	retlw	32	;' '
   269  001C  3420               	retlw	32	;' '
   270  001D  3420               	retlw	32	;' '
   271  001E  3420               	retlw	32	;' '
   272  001F  3420               	retlw	32	;' '
   273  0020  3420               	retlw	32	;' '
   274  0021  3420               	retlw	32	;' '
   275  0022  3400               	retlw	0
   276  0023                     STR_4:
   277  0023  3420               	retlw	32	;' '
   278  0024  3473               	retlw	115	;'s'
   279  0025  3465               	retlw	101	;'e'
   280  0026  3463               	retlw	99	;'c'
   281  0027  3420               	retlw	32	;' '
   282  0028  3465               	retlw	101	;'e'
   283  0029  3478               	retlw	120	;'x'
   284  002A  3470               	retlw	112	;'p'
   285  002B  346F               	retlw	111	;'o'
   286  002C  3473               	retlw	115	;'s'
   287  002D  3475               	retlw	117	;'u'
   288  002E  3472               	retlw	114	;'r'
   289  002F  3465               	retlw	101	;'e'
   290  0030  3420               	retlw	32	;' '
   291  0031  3420               	retlw	32	;' '
   292  0032  3400               	retlw	0
   293  0033                     STR_2:
   294  0033  3420               	retlw	32	;' '
   295  0034  3420               	retlw	32	;' '
   296  0035  3420               	retlw	32	;' '
   297  0036  3420               	retlw	32	;' '
   298  0037  3454               	retlw	84	;'T'
   299  0038  3449               	retlw	73	;'I'
   300  0039  344D               	retlw	77	;'M'
   301  003A  3445               	retlw	69	;'E'
   302  003B  3452               	retlw	82	;'R'
   303  003C  3420               	retlw	32	;' '
   304  003D  3456               	retlw	86	;'V'
   305  003E  3431               	retlw	49	;'1'
   306  003F  3420               	retlw	32	;' '
   307  0040  3420               	retlw	32	;' '
   308  0041  3400               	retlw	0
   309  0042                     STR_1:
   310  0042  3420               	retlw	32	;' '
   311  0043  3420               	retlw	32	;' '
   312  0044  3420               	retlw	32	;' '
   313  0045  3420               	retlw	32	;' '
   314  0046  3445               	retlw	69	;'E'
   315  0047  344E               	retlw	78	;'N'
   316  0048  344C               	retlw	76	;'L'
   317  0049  3441               	retlw	65	;'A'
   318  004A  3452               	retlw	82	;'R'
   319  004B  3447               	retlw	71	;'G'
   320  004C  3445               	retlw	69	;'E'
   321  004D  3452               	retlw	82	;'R'
   322  004E  3420               	retlw	32	;' '
   323  004F  3420               	retlw	32	;' '
   324  0050  3400               	retlw	0
   325  0051                     STR_3:
   326  0051  3420               	retlw	32	;' '
   327  0052  3473               	retlw	115	;'s'
   328  0053  3465               	retlw	101	;'e'
   329  0054  3463               	retlw	99	;'c'
   330  0055  3420               	retlw	32	;' '
   331  0056  3465               	retlw	101	;'e'
   332  0057  3478               	retlw	120	;'x'
   333  0058  3470               	retlw	112	;'p'
   334  0059  346F               	retlw	111	;'o'
   335  005A  3473               	retlw	115	;'s'
   336  005B  3475               	retlw	117	;'u'
   337  005C  3472               	retlw	114	;'r'
   338  005D  3465               	retlw	101	;'e'
   339  005E  3420               	retlw	32	;' '
   340  005F  3400               	retlw	0
   341  0060                     STR_10:
   342  0060  3420               	retlw	32	;' '
   343  0061  3473               	retlw	115	;'s'
   344  0062  3465               	retlw	101	;'e'
   345  0063  3463               	retlw	99	;'c'
   346  0064  3420               	retlw	32	;' '
   347  0065  346C               	retlw	108	;'l'
   348  0066  3461               	retlw	97	;'a'
   349  0067  3473               	retlw	115	;'s'
   350  0068  3474               	retlw	116	;'t'
   351  0069  3420               	retlw	32	;' '
   352  006A  3465               	retlw	101	;'e'
   353  006B  3478               	retlw	120	;'x'
   354  006C  3470               	retlw	112	;'p'
   355  006D  3400               	retlw	0
   356  006E                     STR_5:
   357  006E  3452               	retlw	82	;'R'
   358  006F  3445               	retlw	69	;'E'
   359  0070  3453               	retlw	83	;'S'
   360  0071  3445               	retlw	69	;'E'
   361  0072  3454               	retlw	84	;'T'
   362  0073  3400               	retlw	0
   363  0033                     
   364                           	psect	cinit
   365  07FD                     start_initialization:	
   366                           ; #config settings
   367                           
   368  07FD                     __initialization:
   369  07FD                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  07FD                     __end_of__initialization:
   373  07FD  0183               	clrf	3
   374  07FE  118A  2DBE         	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	cstackCOMMON
   377  0070                     __pcstackCOMMON:
   378  0070                     ?_LCDPutCmd:
   379  0070                     ?_memset:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_LCD_Initialize:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_ToggleEnable:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_ToggleEnable:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_LCDPutChar:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_ADC_Initialize:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_ADC_Initialize:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_main:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_ADC_Read:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?___lwdiv:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     ?___lwmod:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0070                     ___lwdiv@divisor:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  0070                     ___lwmod@divisor:	
   416                           ; 2 bytes @ 0x0
   417                           
   418  0070                     memset@c:	
   419                           ; 2 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423  0070                     	ds	1
   424  0071                     ?_LCDWriteNibble:
   425  0071                     LCDWriteNibble@rs:	
   426                           ; 1 bytes @ 0x1
   427                           
   428                           
   429                           ; 1 bytes @ 0x1
   430  0071                     	ds	1
   431  0072                     ??_LCDWriteNibble:
   432  0072                     ??_ADC_Read:	
   433                           ; 1 bytes @ 0x2
   434                           
   435  0072                     LCDWriteNibble@ch:	
   436                           ; 1 bytes @ 0x2
   437                           
   438  0072                     ___lwdiv@dividend:	
   439                           ; 1 bytes @ 0x2
   440                           
   441  0072                     ___lwmod@dividend:	
   442                           ; 2 bytes @ 0x2
   443                           
   444  0072                     memset@n:	
   445                           ; 2 bytes @ 0x2
   446                           
   447                           
   448                           ; 2 bytes @ 0x2
   449  0072                     	ds	1
   450  0073                     ??_LCDPutCmd:
   451  0073                     ??_LCDPutChar:	
   452                           ; 1 bytes @ 0x3
   453                           
   454                           
   455                           ; 1 bytes @ 0x3
   456  0073                     	ds	1
   457  0074                     ??_memset:
   458  0074                     ??___lwdiv:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     ??___lwmod:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ADC_Read@channel:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 1 bytes @ 0x4
   469  0074                     	ds	1
   470  0075                     LCDPutChar@ch:
   471  0075                     LCDPutCmd@ch:	
   472                           ; 1 bytes @ 0x5
   473                           
   474  0075                     ___lwmod@counter:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0075                     memset@p1:	
   478                           ; 1 bytes @ 0x5
   479                           
   480  0075                     ___lwdiv@quotient:	
   481                           ; 1 bytes @ 0x5
   482                           
   483                           
   484                           ; 2 bytes @ 0x5
   485  0075                     	ds	1
   486  0076                     ??_LCD_Initialize:
   487  0076                     ?_LCDPutStr:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     ?_LCDGoto:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0076                     LCDGoto@ln:	
   494                           ; 1 bytes @ 0x6
   495                           
   496  0076                     memset@p:	
   497                           ; 1 bytes @ 0x6
   498                           
   499  0076                     LCDPutStr@str:	
   500                           ; 1 bytes @ 0x6
   501                           
   502                           
   503                           ; 2 bytes @ 0x6
   504  0076                     	ds	1
   505  0077                     ??_LCDGoto:
   506  0077                     ___lwdiv@counter:	
   507                           ; 1 bytes @ 0x7
   508                           
   509                           
   510                           ; 1 bytes @ 0x7
   511  0077                     	ds	1
   512  0078                     ?_utoa:
   513  0078                     ??_LCDPutStr:	
   514                           ; 1 bytes @ 0x8
   515                           
   516  0078                     utoa@val:	
   517                           ; 1 bytes @ 0x8
   518                           
   519                           
   520                           ; 2 bytes @ 0x8
   521  0078                     	ds	1
   522  0079                     LCDPutStr@i:
   523  0079                     _LCDGoto$138:	
   524                           ; 1 bytes @ 0x9
   525                           
   526                           
   527                           ; 2 bytes @ 0x9
   528  0079                     	ds	1
   529  007A                     utoa@base:
   530                           
   531                           ; 2 bytes @ 0xA
   532  007A                     	ds	1
   533  007B                     LCDGoto@pos:
   534                           
   535                           ; 1 bytes @ 0xB
   536  007B                     	ds	1
   537  007C                     ??_utoa:
   538                           
   539                           ; 1 bytes @ 0xC
   540  007C                     	ds	1
   541  007D                     ??_itoa:
   542                           
   543                           ; 1 bytes @ 0xD
   544  007D                     	ds	1
   545                           
   546                           	psect	cstackBANK0
   547  0020                     __pcstackBANK0:
   548  0020                     utoa@v:
   549                           
   550                           ; 2 bytes @ 0x0
   551  0020                     	ds	2
   552  0022                     utoa@c:
   553                           
   554                           ; 1 bytes @ 0x2
   555  0022                     	ds	1
   556  0023                     utoa@buf:
   557                           
   558                           ; 1 bytes @ 0x3
   559  0023                     	ds	1
   560  0024                     ?_itoa:
   561  0024                     itoa@val:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 2 bytes @ 0x4
   566  0024                     	ds	2
   567  0026                     itoa@base:
   568                           
   569                           ; 2 bytes @ 0x6
   570  0026                     	ds	2
   571  0028                     itoa@buf:
   572                           
   573                           ; 1 bytes @ 0x8
   574  0028                     	ds	1
   575  0029                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x9
   578  0029                     	ds	3
   579  002C                     main@Buffer:
   580                           
   581                           ; 7 bytes @ 0xC
   582  002C                     	ds	7
   583  0033                     main@iTime:
   584                           
   585                           ; 6 bytes @ 0x13
   586  0033                     	ds	6
   587  0039                     main@ExpTime:
   588                           
   589                           ; 6 bytes @ 0x19
   590  0039                     	ds	6
   591  003F                     main@i:
   592                           
   593                           ; 2 bytes @ 0x1F
   594  003F                     	ds	2
   595  0041                     main@ExposureTime:
   596                           
   597                           ; 2 bytes @ 0x21
   598  0041                     	ds	2
   599  0043                     main@adc:
   600                           
   601                           ; 2 bytes @ 0x23
   602  0043                     	ds	2
   603                           
   604                           	psect	maintext
   605  05BE                     __pmaintext:	
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 228 in file "LCD_Main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  Buffer          7   12[BANK0 ] unsigned char [7]
   616 ;;  ExpTime         6   25[BANK0 ] unsigned char [6]
   617 ;;  iTime           6   19[BANK0 ] unsigned char [6]
   618 ;;  adc             2   35[BANK0 ] int 
   619 ;;  ExposureTime    2   33[BANK0 ] int 
   620 ;;  i               2   31[BANK0 ] int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   630 ;;      Params:         0       0       0       0
   631 ;;      Locals:         0      25       0       0
   632 ;;      Temps:          0       3       0       0
   633 ;;      Totals:         0      28       0       0
   634 ;;Total ram usage:       28 bytes
   635 ;; Hardware stack levels required when called: 4
   636 ;; This function calls:
   637 ;;		_ADC_Initialize
   638 ;;		_ADC_Read
   639 ;;		_LCDGoto
   640 ;;		_LCDPutCmd
   641 ;;		_LCDPutStr
   642 ;;		_LCD_Initialize
   643 ;;		_itoa
   644 ;;		_memset
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650  05BE                     _main:	
   651                           ;psect for function _main
   652                           
   653  05BE                     l1289:	
   654                           ;incstack = 0
   655                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   656                           
   657                           
   658                           ;LCD_Main.c: 230: ADC_Initialize();
   659  05BE  118A  2368  118A   	fcall	_ADC_Initialize
   660  05C1                     l1291:
   661                           
   662                           ;LCD_Main.c: 231: int adc;;LCD_Main.c: 232: int ExposureTime = 0;
   663  05C1  1283               	bcf	3,5	;RP0=0, select bank0
   664  05C2  1303               	bcf	3,6	;RP1=0, select bank0
   665  05C3  01C1               	clrf	main@ExposureTime
   666  05C4  01C2               	clrf	main@ExposureTime+1
   667  05C5                     l1293:
   668                           
   669                           ;LCD_Main.c: 233: LCD_Initialize();
   670  05C5  118A  243B  118A   	fcall	_LCD_Initialize
   671  05C8                     l1295:
   672                           
   673                           ;LCD_Main.c: 234: int i;;LCD_Main.c: 235: char Buffer[7];;LCD_Main.c: 236: char ExpTime[
      +                          6];;LCD_Main.c: 237: char iTime[6];;LCD_Main.c: 240: LCDGoto(0,0);
   674  05C8  01F6               	clrf	LCDGoto@ln
   675  05C9  3000               	movlw	0
   676  05CA  118A  2466  118A   	fcall	_LCDGoto
   677  05CD                     l1297:
   678                           
   679                           ;LCD_Main.c: 241: LCDPutStr("    ENLARGER  ");
   680  05CD  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   681  05CE  00F6               	movwf	LCDPutStr@str
   682  05CF  3080               	movlw	128
   683  05D0  00F7               	movwf	LCDPutStr@str+1
   684  05D1  118A  23EC  118A   	fcall	_LCDPutStr
   685  05D4                     l1299:
   686                           
   687                           ;LCD_Main.c: 242: LCDGoto(0,1);
   688  05D4  01F6               	clrf	LCDGoto@ln
   689  05D5  0AF6               	incf	LCDGoto@ln,f
   690  05D6  3000               	movlw	0
   691  05D7  118A  2466  118A   	fcall	_LCDGoto
   692  05DA                     l1301:
   693                           
   694                           ;LCD_Main.c: 243: LCDPutStr("    TIMER V1  ");
   695  05DA  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   696  05DB  00F6               	movwf	LCDPutStr@str
   697  05DC  3080               	movlw	128
   698  05DD  00F7               	movwf	LCDPutStr@str+1
   699  05DE  118A  23EC  118A   	fcall	_LCDPutStr
   700  05E1                     l1303:
   701                           
   702                           ;LCD_Main.c: 244: _delay((unsigned long)((4000)*(4194304/4000.0)));
   703  05E1  3016               	movlw	22
   704  05E2  1283               	bcf	3,5	;RP0=0, select bank0
   705  05E3  1303               	bcf	3,6	;RP1=0, select bank0
   706  05E4  00AB               	movwf	??_main+2
   707  05E5  3048               	movlw	72
   708  05E6  00AA               	movwf	??_main+1
   709  05E7  3014               	movlw	20
   710  05E8  00A9               	movwf	??_main
   711  05E9                     u857:
   712  05E9  0BA9               	decfsz	??_main,f
   713  05EA  2DE9               	goto	u857
   714  05EB  0BAA               	decfsz	??_main+1,f
   715  05EC  2DE9               	goto	u857
   716  05ED  0BAB               	decfsz	??_main+2,f
   717  05EE  2DE9               	goto	u857
   718  05EF  2DF0               	nop2
   719  05F0                     l1305:
   720                           
   721                           ;LCD_Main.c: 245: LCDPutCmd(0x01);
   722  05F0  3001               	movlw	1
   723  05F1  118A  2374  118A   	fcall	_LCDPutCmd
   724  05F4                     l1307:
   725                           
   726                           ;LCD_Main.c: 248:   {;LCD_Main.c: 249:     adc = (ADC_Read(0));
   727  05F4  3000               	movlw	0
   728  05F5  118A  2411  118A   	fcall	_ADC_Read
   729  05F8  0871               	movf	?_ADC_Read+1,w
   730  05F9  1283               	bcf	3,5	;RP0=0, select bank0
   731  05FA  1303               	bcf	3,6	;RP1=0, select bank0
   732  05FB  00C4               	movwf	main@adc+1
   733  05FC  0870               	movf	?_ADC_Read,w
   734  05FD  00C3               	movwf	main@adc
   735  05FE                     l1309:
   736                           
   737                           ;LCD_Main.c: 252:     itoa(Buffer, adc, 10);
   738  05FE  0844               	movf	main@adc+1,w
   739  05FF  00A5               	movwf	itoa@val+1
   740  0600  0843               	movf	main@adc,w
   741  0601  00A4               	movwf	itoa@val
   742  0602  300A               	movlw	10
   743  0603  00A6               	movwf	itoa@base
   744  0604  3000               	movlw	0
   745  0605  00A7               	movwf	itoa@base+1
   746  0606  302C               	movlw	(low (main@Buffer| 0))& (0+255)
   747  0607  118A  23C8  118A   	fcall	_itoa
   748  060A                     l1311:
   749                           
   750                           ;LCD_Main.c: 255:     if (adc > 700 & adc < 800)
   751  060A  1283               	bcf	3,5	;RP0=0, select bank0
   752  060B  1303               	bcf	3,6	;RP1=0, select bank0
   753  060C  0844               	movf	main@adc+1,w
   754  060D  3A80               	xorlw	128
   755  060E  00FF               	movwf	btemp+1
   756  060F  3082               	movlw	130
   757  0610  027F               	subwf	btemp+1,w
   758  0611  1D03               	skipz
   759  0612  2E15               	goto	u755
   760  0613  30BD               	movlw	189
   761  0614  0243               	subwf	main@adc,w
   762  0615                     u755:
   763  0615  1C03               	skipc
   764  0616  2E18               	goto	u751
   765  0617  2E19               	goto	u750
   766  0618                     u751:
   767  0618  2E78               	goto	l1333
   768  0619                     u750:
   769  0619                     l1313:
   770  0619  1283               	bcf	3,5	;RP0=0, select bank0
   771  061A  1303               	bcf	3,6	;RP1=0, select bank0
   772  061B  0844               	movf	main@adc+1,w
   773  061C  3A80               	xorlw	128
   774  061D  00FF               	movwf	btemp+1
   775  061E  3083               	movlw	131
   776  061F  027F               	subwf	btemp+1,w
   777  0620  1D03               	skipz
   778  0621  2E24               	goto	u765
   779  0622  3020               	movlw	32
   780  0623  0243               	subwf	main@adc,w
   781  0624                     u765:
   782  0624  1803               	skipnc
   783  0625  2E27               	goto	u761
   784  0626  2E28               	goto	u760
   785  0627                     u761:
   786  0627  2E78               	goto	l1333
   787  0628                     u760:
   788  0628                     l1315:
   789                           
   790                           ;LCD_Main.c: 256:     {;LCD_Main.c: 257:         ExposureTime++;
   791  0628  3001               	movlw	1
   792  0629  1283               	bcf	3,5	;RP0=0, select bank0
   793  062A  1303               	bcf	3,6	;RP1=0, select bank0
   794  062B  07C1               	addwf	main@ExposureTime,f
   795  062C  1803               	skipnc
   796  062D  0AC2               	incf	main@ExposureTime+1,f
   797  062E  3000               	movlw	0
   798  062F  07C2               	addwf	main@ExposureTime+1,f
   799  0630                     l1317:
   800                           
   801                           ;LCD_Main.c: 258:         if (ExposureTime >99) ExposureTime = 99;
   802  0630  0842               	movf	main@ExposureTime+1,w
   803  0631  3A80               	xorlw	128
   804  0632  00FF               	movwf	btemp+1
   805  0633  3080               	movlw	128
   806  0634  027F               	subwf	btemp+1,w
   807  0635  1D03               	skipz
   808  0636  2E39               	goto	u775
   809  0637  3064               	movlw	100
   810  0638  0241               	subwf	main@ExposureTime,w
   811  0639                     u775:
   812  0639  1C03               	skipc
   813  063A  2E3C               	goto	u771
   814  063B  2E3D               	goto	u770
   815  063C                     u771:
   816  063C  2E43               	goto	l1321
   817  063D                     u770:
   818  063D                     l1319:
   819  063D  3063               	movlw	99
   820  063E  1283               	bcf	3,5	;RP0=0, select bank0
   821  063F  1303               	bcf	3,6	;RP1=0, select bank0
   822  0640  00C1               	movwf	main@ExposureTime
   823  0641  3000               	movlw	0
   824  0642  00C2               	movwf	main@ExposureTime+1
   825  0643                     l1321:
   826                           
   827                           ;LCD_Main.c: 259:         itoa(ExpTime, ExposureTime, 10);
   828  0643  1283               	bcf	3,5	;RP0=0, select bank0
   829  0644  1303               	bcf	3,6	;RP1=0, select bank0
   830  0645  0842               	movf	main@ExposureTime+1,w
   831  0646  00A5               	movwf	itoa@val+1
   832  0647  0841               	movf	main@ExposureTime,w
   833  0648  00A4               	movwf	itoa@val
   834  0649  300A               	movlw	10
   835  064A  00A6               	movwf	itoa@base
   836  064B  3000               	movlw	0
   837  064C  00A7               	movwf	itoa@base+1
   838  064D  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   839  064E  118A  23C8  118A   	fcall	_itoa
   840  0651                     l1323:
   841                           
   842                           ;LCD_Main.c: 260:         LCDGoto(0,0);
   843  0651  01F6               	clrf	LCDGoto@ln
   844  0652  3000               	movlw	0
   845  0653  118A  2466  118A   	fcall	_LCDGoto
   846  0656                     l1325:
   847                           
   848                           ;LCD_Main.c: 261:         LCDPutStr(ExpTime);
   849  0656  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   850  0657  00F6               	movwf	LCDPutStr@str
   851  0658  3000               	movlw	0
   852  0659  00F7               	movwf	LCDPutStr@str+1
   853  065A  118A  23EC  118A   	fcall	_LCDPutStr
   854  065D                     l1327:
   855                           
   856                           ;LCD_Main.c: 262:         LCDPutStr(" sec exposure ");
   857  065D  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   858  065E  00F6               	movwf	LCDPutStr@str
   859  065F  3080               	movlw	128
   860  0660  00F7               	movwf	LCDPutStr@str+1
   861  0661  118A  23EC  118A   	fcall	_LCDPutStr
   862  0664                     l1329:
   863                           
   864                           ;LCD_Main.c: 263:         LCDPutCmd(0x02);
   865  0664  3002               	movlw	2
   866  0665  118A  2374  118A   	fcall	_LCDPutCmd
   867  0668                     l1331:
   868                           
   869                           ;LCD_Main.c: 264:         _delay((unsigned long)((200)*(4194304/4000.0)));
   870  0668  3002               	movlw	2
   871  0669  1283               	bcf	3,5	;RP0=0, select bank0
   872  066A  1303               	bcf	3,6	;RP1=0, select bank0
   873  066B  00AB               	movwf	??_main+2
   874  066C  3011               	movlw	17
   875  066D  00AA               	movwf	??_main+1
   876  066E  3057               	movlw	87
   877  066F  00A9               	movwf	??_main
   878  0670                     u867:
   879  0670  0BA9               	decfsz	??_main,f
   880  0671  2E70               	goto	u867
   881  0672  0BAA               	decfsz	??_main+1,f
   882  0673  2E70               	goto	u867
   883  0674  0BAB               	decfsz	??_main+2,f
   884  0675  2E70               	goto	u867
   885  0676  2E77               	nop2
   886                           
   887                           ;LCD_Main.c: 265:     }
   888  0677  2DF4               	goto	l1307
   889  0678                     l1333:
   890  0678  1283               	bcf	3,5	;RP0=0, select bank0
   891  0679  1303               	bcf	3,6	;RP1=0, select bank0
   892  067A  0844               	movf	main@adc+1,w
   893  067B  3A80               	xorlw	128
   894  067C  00FF               	movwf	btemp+1
   895  067D  3082               	movlw	130
   896  067E  027F               	subwf	btemp+1,w
   897  067F  1D03               	skipz
   898  0680  2E83               	goto	u785
   899  0681  3059               	movlw	89
   900  0682  0243               	subwf	main@adc,w
   901  0683                     u785:
   902  0683  1C03               	skipc
   903  0684  2E86               	goto	u781
   904  0685  2E87               	goto	u780
   905  0686                     u781:
   906  0686  2EEB               	goto	l1357
   907  0687                     u780:
   908  0687                     l1335:
   909  0687  1283               	bcf	3,5	;RP0=0, select bank0
   910  0688  1303               	bcf	3,6	;RP1=0, select bank0
   911  0689  0844               	movf	main@adc+1,w
   912  068A  3A80               	xorlw	128
   913  068B  00FF               	movwf	btemp+1
   914  068C  3082               	movlw	130
   915  068D  027F               	subwf	btemp+1,w
   916  068E  1D03               	skipz
   917  068F  2E92               	goto	u795
   918  0690  30BC               	movlw	188
   919  0691  0243               	subwf	main@adc,w
   920  0692                     u795:
   921  0692  1803               	skipnc
   922  0693  2E95               	goto	u791
   923  0694  2E96               	goto	u790
   924  0695                     u791:
   925  0695  2EEB               	goto	l1357
   926  0696                     u790:
   927  0696                     l1337:
   928                           
   929                           ;LCD_Main.c: 267:     {;LCD_Main.c: 268:         ExposureTime--;
   930  0696  30FF               	movlw	255
   931  0697  1283               	bcf	3,5	;RP0=0, select bank0
   932  0698  1303               	bcf	3,6	;RP1=0, select bank0
   933  0699  07C1               	addwf	main@ExposureTime,f
   934  069A  1803               	skipnc
   935  069B  0AC2               	incf	main@ExposureTime+1,f
   936  069C  30FF               	movlw	255
   937  069D  07C2               	addwf	main@ExposureTime+1,f
   938  069E                     l1339:
   939                           
   940                           ;LCD_Main.c: 269:         if (ExposureTime <1) ExposureTime = 1;
   941  069E  0842               	movf	main@ExposureTime+1,w
   942  069F  3A80               	xorlw	128
   943  06A0  00FF               	movwf	btemp+1
   944  06A1  3080               	movlw	128
   945  06A2  027F               	subwf	btemp+1,w
   946  06A3  1D03               	skipz
   947  06A4  2EA7               	goto	u805
   948  06A5  3001               	movlw	1
   949  06A6  0241               	subwf	main@ExposureTime,w
   950  06A7                     u805:
   951  06A7  1803               	skipnc
   952  06A8  2EAA               	goto	u801
   953  06A9  2EAB               	goto	u800
   954  06AA                     u801:
   955  06AA  2EB1               	goto	l1343
   956  06AB                     u800:
   957  06AB                     l1341:
   958  06AB  3001               	movlw	1
   959  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   960  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   961  06AE  00C1               	movwf	main@ExposureTime
   962  06AF  3000               	movlw	0
   963  06B0  00C2               	movwf	main@ExposureTime+1
   964  06B1                     l1343:
   965                           
   966                           ;LCD_Main.c: 270:         itoa(ExpTime, ExposureTime, 10);
   967  06B1  1283               	bcf	3,5	;RP0=0, select bank0
   968  06B2  1303               	bcf	3,6	;RP1=0, select bank0
   969  06B3  0842               	movf	main@ExposureTime+1,w
   970  06B4  00A5               	movwf	itoa@val+1
   971  06B5  0841               	movf	main@ExposureTime,w
   972  06B6  00A4               	movwf	itoa@val
   973  06B7  300A               	movlw	10
   974  06B8  00A6               	movwf	itoa@base
   975  06B9  3000               	movlw	0
   976  06BA  00A7               	movwf	itoa@base+1
   977  06BB  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   978  06BC  118A  23C8  118A   	fcall	_itoa
   979  06BF                     l1345:
   980                           
   981                           ;LCD_Main.c: 271:         LCDGoto(0,0);
   982  06BF  01F6               	clrf	LCDGoto@ln
   983  06C0  3000               	movlw	0
   984  06C1  118A  2466  118A   	fcall	_LCDGoto
   985  06C4                     l1347:
   986                           
   987                           ;LCD_Main.c: 272:         LCDPutStr(ExpTime);
   988  06C4  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   989  06C5  00F6               	movwf	LCDPutStr@str
   990  06C6  3000               	movlw	0
   991  06C7  00F7               	movwf	LCDPutStr@str+1
   992  06C8  118A  23EC  118A   	fcall	_LCDPutStr
   993  06CB                     l1349:
   994                           
   995                           ;LCD_Main.c: 273:         LCDPutStr(" sec exposure  ");
   996  06CB  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   997  06CC  00F6               	movwf	LCDPutStr@str
   998  06CD  3080               	movlw	128
   999  06CE  00F7               	movwf	LCDPutStr@str+1
  1000  06CF  118A  23EC  118A   	fcall	_LCDPutStr
  1001  06D2                     l1351:
  1002                           
  1003                           ;LCD_Main.c: 274:         LCDPutCmd(0x02);
  1004  06D2  3002               	movlw	2
  1005  06D3  118A  2374  118A   	fcall	_LCDPutCmd
  1006  06D6                     l1353:
  1007                           
  1008                           ;LCD_Main.c: 275:         _delay((unsigned long)((200)*(4194304/4000.0)));
  1009  06D6  3002               	movlw	2
  1010  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1011  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1012  06D9  00AB               	movwf	??_main+2
  1013  06DA  3011               	movlw	17
  1014  06DB  00AA               	movwf	??_main+1
  1015  06DC  3057               	movlw	87
  1016  06DD  00A9               	movwf	??_main
  1017  06DE                     u877:
  1018  06DE  0BA9               	decfsz	??_main,f
  1019  06DF  2EDE               	goto	u877
  1020  06E0  0BAA               	decfsz	??_main+1,f
  1021  06E1  2EDE               	goto	u877
  1022  06E2  0BAB               	decfsz	??_main+2,f
  1023  06E3  2EDE               	goto	u877
  1024  06E4  2EE5               	nop2
  1025  06E5                     l1355:
  1026                           
  1027                           ;LCD_Main.c: 276:         LCDGoto(0,0);
  1028  06E5  01F6               	clrf	LCDGoto@ln
  1029  06E6  3000               	movlw	0
  1030  06E7  118A  2466  118A   	fcall	_LCDGoto
  1031                           
  1032                           ;LCD_Main.c: 278:     }
  1033  06EA  2DF4               	goto	l1307
  1034  06EB                     l1357:
  1035  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1036  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1037  06ED  0844               	movf	main@adc+1,w
  1038  06EE  3A80               	xorlw	128
  1039  06EF  00FF               	movwf	btemp+1
  1040  06F0  3081               	movlw	129
  1041  06F1  027F               	subwf	btemp+1,w
  1042  06F2  1D03               	skipz
  1043  06F3  2EF6               	goto	u815
  1044  06F4  30F5               	movlw	245
  1045  06F5  0243               	subwf	main@adc,w
  1046  06F6                     u815:
  1047  06F6  1C03               	skipc
  1048  06F7  2EF9               	goto	u811
  1049  06F8  2EFA               	goto	u810
  1050  06F9                     u811:
  1051  06F9  2F6B               	goto	l1385
  1052  06FA                     u810:
  1053  06FA                     l1359:
  1054  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1055  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1056  06FC  0844               	movf	main@adc+1,w
  1057  06FD  3A80               	xorlw	128
  1058  06FE  00FF               	movwf	btemp+1
  1059  06FF  3082               	movlw	130
  1060  0700  027F               	subwf	btemp+1,w
  1061  0701  1D03               	skipz
  1062  0702  2F05               	goto	u825
  1063  0703  3058               	movlw	88
  1064  0704  0243               	subwf	main@adc,w
  1065  0705                     u825:
  1066  0705  1803               	skipnc
  1067  0706  2F08               	goto	u821
  1068  0707  2F09               	goto	u820
  1069  0708                     u821:
  1070  0708  2F6B               	goto	l1385
  1071  0709                     u820:
  1072  0709                     l1361:
  1073                           
  1074                           ;LCD_Main.c: 280:     {;LCD_Main.c: 282:         LCDPutCmd(0x01);
  1075  0709  3001               	movlw	1
  1076  070A  118A  2374  118A   	fcall	_LCDPutCmd
  1077                           
  1078                           ;LCD_Main.c: 283:         LCDGoto(5,0);
  1079  070D  01F6               	clrf	LCDGoto@ln
  1080  070E  3005               	movlw	5
  1081  070F  118A  2466  118A   	fcall	_LCDGoto
  1082  0712                     l1363:
  1083                           
  1084                           ;LCD_Main.c: 284:         LCDPutStr("RESET");
  1085  0712  305D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1086  0713  00F6               	movwf	LCDPutStr@str
  1087  0714  3080               	movlw	128
  1088  0715  00F7               	movwf	LCDPutStr@str+1
  1089  0716  118A  23EC  118A   	fcall	_LCDPutStr
  1090  0719                     l1365:
  1091                           
  1092                           ;LCD_Main.c: 285:         _delay((unsigned long)((1000)*(4194304/4000.0)));
  1093  0719  3006               	movlw	6
  1094  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1095  071B  1303               	bcf	3,6	;RP1=0, select bank0
  1096  071C  00AB               	movwf	??_main+2
  1097  071D  3052               	movlw	82
  1098  071E  00AA               	movwf	??_main+1
  1099  071F  30C3               	movlw	195
  1100  0720  00A9               	movwf	??_main
  1101  0721                     u887:
  1102  0721  0BA9               	decfsz	??_main,f
  1103  0722  2F21               	goto	u887
  1104  0723  0BAA               	decfsz	??_main+1,f
  1105  0724  2F21               	goto	u887
  1106  0725  0BAB               	decfsz	??_main+2,f
  1107  0726  2F21               	goto	u887
  1108  0727  0000               	nop
  1109  0728                     l1367:
  1110                           
  1111                           ;LCD_Main.c: 286:         ExposureTime = 1;
  1112  0728  3001               	movlw	1
  1113  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1114  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1115  072B  00C1               	movwf	main@ExposureTime
  1116  072C  3000               	movlw	0
  1117  072D  00C2               	movwf	main@ExposureTime+1
  1118  072E                     l1369:
  1119                           
  1120                           ;LCD_Main.c: 287:         memset(ExpTime, '\0', sizeof(ExpTime));
  1121  072E  3000               	movlw	0
  1122  072F  00F0               	movwf	memset@c
  1123  0730  00F1               	movwf	memset@c+1
  1124  0731  3006               	movlw	6
  1125  0732  00F2               	movwf	memset@n
  1126  0733  3000               	movlw	0
  1127  0734  00F3               	movwf	memset@n+1
  1128  0735  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1129  0736  118A  23A8  118A   	fcall	_memset
  1130  0739                     l1371:
  1131                           
  1132                           ;LCD_Main.c: 288:         ExpTime[0] = '1';
  1133  0739  3031               	movlw	49
  1134  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1135  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1136  073C  00A9               	movwf	??_main
  1137  073D  0829               	movf	??_main,w
  1138  073E  00B9               	movwf	main@ExpTime
  1139  073F                     l1373:
  1140                           
  1141                           ;LCD_Main.c: 289:         LCDPutCmd(0x02);
  1142  073F  3002               	movlw	2
  1143  0740  118A  2374  118A   	fcall	_LCDPutCmd
  1144  0743                     l1375:
  1145                           
  1146                           ;LCD_Main.c: 290:         LCDPutStr("    ENLARGER  ");
  1147  0743  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1148  0744  00F6               	movwf	LCDPutStr@str
  1149  0745  3080               	movlw	128
  1150  0746  00F7               	movwf	LCDPutStr@str+1
  1151  0747  118A  23EC  118A   	fcall	_LCDPutStr
  1152  074A                     l1377:
  1153                           
  1154                           ;LCD_Main.c: 291:         LCDGoto(0,1);
  1155  074A  01F6               	clrf	LCDGoto@ln
  1156  074B  0AF6               	incf	LCDGoto@ln,f
  1157  074C  3000               	movlw	0
  1158  074D  118A  2466  118A   	fcall	_LCDGoto
  1159  0750                     l1379:
  1160                           
  1161                           ;LCD_Main.c: 292:         LCDPutStr("    TIMER V1  ");
  1162  0750  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1163  0751  00F6               	movwf	LCDPutStr@str
  1164  0752  3080               	movlw	128
  1165  0753  00F7               	movwf	LCDPutStr@str+1
  1166  0754  118A  23EC  118A   	fcall	_LCDPutStr
  1167  0757                     l1381:
  1168                           
  1169                           ;LCD_Main.c: 293:         _delay((unsigned long)((4000)*(4194304/4000.0)));
  1170  0757  3016               	movlw	22
  1171  0758  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0759  1303               	bcf	3,6	;RP1=0, select bank0
  1173  075A  00AB               	movwf	??_main+2
  1174  075B  3048               	movlw	72
  1175  075C  00AA               	movwf	??_main+1
  1176  075D  3014               	movlw	20
  1177  075E  00A9               	movwf	??_main
  1178  075F                     u897:
  1179  075F  0BA9               	decfsz	??_main,f
  1180  0760  2F5F               	goto	u897
  1181  0761  0BAA               	decfsz	??_main+1,f
  1182  0762  2F5F               	goto	u897
  1183  0763  0BAB               	decfsz	??_main+2,f
  1184  0764  2F5F               	goto	u897
  1185  0765  2F66               	nop2
  1186  0766                     l1383:
  1187                           
  1188                           ;LCD_Main.c: 294:         LCDPutCmd(0x01);
  1189  0766  3001               	movlw	1
  1190  0767  118A  2374  118A   	fcall	_LCDPutCmd
  1191                           
  1192                           ;LCD_Main.c: 295:     }
  1193  076A  2DF4               	goto	l1307
  1194  076B                     l1385:
  1195  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1196  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1197  076D  0844               	movf	main@adc+1,w
  1198  076E  3A80               	xorlw	128
  1199  076F  00FF               	movwf	btemp+1
  1200  0770  3080               	movlw	128
  1201  0771  027F               	subwf	btemp+1,w
  1202  0772  1D03               	skipz
  1203  0773  2F76               	goto	u835
  1204  0774  300A               	movlw	10
  1205  0775  0243               	subwf	main@adc,w
  1206  0776                     u835:
  1207  0776  1803               	skipnc
  1208  0777  2F79               	goto	u831
  1209  0778  2F7A               	goto	u830
  1210  0779                     u831:
  1211  0779  2FF7               	goto	l104
  1212  077A                     u830:
  1213  077A                     l1387:
  1214                           
  1215                           ;LCD_Main.c: 297:     {;LCD_Main.c: 298:         LCDGoto(0,0);
  1216  077A  01F6               	clrf	LCDGoto@ln
  1217  077B  3000               	movlw	0
  1218  077C  118A  2466  118A   	fcall	_LCDGoto
  1219  077F                     l1389:
  1220                           
  1221                           ;LCD_Main.c: 299:         LCDPutStr(ExpTime);
  1222  077F  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1223  0780  00F6               	movwf	LCDPutStr@str
  1224  0781  3000               	movlw	0
  1225  0782  00F7               	movwf	LCDPutStr@str+1
  1226  0783  118A  23EC  118A   	fcall	_LCDPutStr
  1227  0786                     l1391:
  1228                           
  1229                           ;LCD_Main.c: 300:         LCDPutStr(" sec exposure ");
  1230  0786  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1231  0787  00F6               	movwf	LCDPutStr@str
  1232  0788  3080               	movlw	128
  1233  0789  00F7               	movwf	LCDPutStr@str+1
  1234  078A  118A  23EC  118A   	fcall	_LCDPutStr
  1235                           
  1236                           ;LCD_Main.c: 301:         LCDGoto(0,1);
  1237  078D  01F6               	clrf	LCDGoto@ln
  1238  078E  0AF6               	incf	LCDGoto@ln,f
  1239  078F  3000               	movlw	0
  1240  0790  118A  2466  118A   	fcall	_LCDGoto
  1241  0793                     l1393:
  1242                           
  1243                           ;LCD_Main.c: 302:         LCDPutStr("                ");
  1244  0793  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1245  0794  00F6               	movwf	LCDPutStr@str
  1246  0795  3080               	movlw	128
  1247  0796  00F7               	movwf	LCDPutStr@str+1
  1248  0797  118A  23EC  118A   	fcall	_LCDPutStr
  1249  079A                     l1395:
  1250                           
  1251                           ;LCD_Main.c: 303:         LCDPutCmd(0x02);
  1252  079A  3002               	movlw	2
  1253  079B  118A  2374  118A   	fcall	_LCDPutCmd
  1254  079E                     l1397:
  1255                           
  1256                           ;LCD_Main.c: 304:         RC4 = 0;
  1257  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1258  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1259  07A0  1207               	bcf	7,4	;volatile
  1260  07A1                     l1399:
  1261  07A1                     l1401:
  1262                           
  1263                           ;LCD_Main.c: 306:         for (i=0;i< ExposureTime;i++)
  1264  07A1  01BF               	clrf	main@i
  1265  07A2  01C0               	clrf	main@i+1
  1266  07A3  2FE1               	goto	l1415
  1267  07A4                     l1403:
  1268                           
  1269                           ;LCD_Main.c: 307:         {;LCD_Main.c: 308:             _delay((unsigned long)((1000)*(
      +                          4194304/4000.0)));
  1270  07A4  3006               	movlw	6
  1271  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1272  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1273  07A7  00AB               	movwf	??_main+2
  1274  07A8  3052               	movlw	82
  1275  07A9  00AA               	movwf	??_main+1
  1276  07AA  30C3               	movlw	195
  1277  07AB  00A9               	movwf	??_main
  1278  07AC                     u907:
  1279  07AC  0BA9               	decfsz	??_main,f
  1280  07AD  2FAC               	goto	u907
  1281  07AE  0BAA               	decfsz	??_main+1,f
  1282  07AF  2FAC               	goto	u907
  1283  07B0  0BAB               	decfsz	??_main+2,f
  1284  07B1  2FAC               	goto	u907
  1285  07B2  0000               	nop
  1286  07B3                     l1405:
  1287                           
  1288                           ;LCD_Main.c: 309:             itoa(iTime, i+1, 10);
  1289  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1290  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1291  07B5  083F               	movf	main@i,w
  1292  07B6  3E01               	addlw	1
  1293  07B7  00A4               	movwf	itoa@val
  1294  07B8  0840               	movf	main@i+1,w
  1295  07B9  1803               	skipnc
  1296  07BA  3E01               	addlw	1
  1297  07BB  3E00               	addlw	0
  1298  07BC  00A5               	movwf	itoa@val+1
  1299  07BD  300A               	movlw	10
  1300  07BE  00A6               	movwf	itoa@base
  1301  07BF  3000               	movlw	0
  1302  07C0  00A7               	movwf	itoa@base+1
  1303  07C1  3033               	movlw	(low (main@iTime| 0))& (0+255)
  1304  07C2  118A  23C8  118A   	fcall	_itoa
  1305  07C5                     l1407:
  1306                           
  1307                           ;LCD_Main.c: 310:             LCDGoto(0,1);
  1308  07C5  01F6               	clrf	LCDGoto@ln
  1309  07C6  0AF6               	incf	LCDGoto@ln,f
  1310  07C7  3000               	movlw	0
  1311  07C8  118A  2466  118A   	fcall	_LCDGoto
  1312  07CB                     l1409:
  1313                           
  1314                           ;LCD_Main.c: 311:             LCDPutStr(iTime);
  1315  07CB  3033               	movlw	(low (main@iTime| 0))& (0+255)
  1316  07CC  00F6               	movwf	LCDPutStr@str
  1317  07CD  3000               	movlw	0
  1318  07CE  00F7               	movwf	LCDPutStr@str+1
  1319  07CF  118A  23EC  118A   	fcall	_LCDPutStr
  1320  07D2                     l1411:
  1321                           
  1322                           ;LCD_Main.c: 312:             LCDPutStr(" sec last exp");
  1323  07D2  304F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1324  07D3  00F6               	movwf	LCDPutStr@str
  1325  07D4  3080               	movlw	128
  1326  07D5  00F7               	movwf	LCDPutStr@str+1
  1327  07D6  118A  23EC  118A   	fcall	_LCDPutStr
  1328  07D9                     l1413:
  1329                           
  1330                           ;LCD_Main.c: 313:         }
  1331  07D9  3001               	movlw	1
  1332  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1333  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1334  07DC  07BF               	addwf	main@i,f
  1335  07DD  1803               	skipnc
  1336  07DE  0AC0               	incf	main@i+1,f
  1337  07DF  3000               	movlw	0
  1338  07E0  07C0               	addwf	main@i+1,f
  1339  07E1                     l1415:
  1340  07E1  0840               	movf	main@i+1,w
  1341  07E2  3A80               	xorlw	128
  1342  07E3  00A9               	movwf	??_main
  1343  07E4  0842               	movf	main@ExposureTime+1,w
  1344  07E5  3A80               	xorlw	128
  1345  07E6  0229               	subwf	??_main,w
  1346  07E7  1D03               	skipz
  1347  07E8  2FEB               	goto	u845
  1348  07E9  0841               	movf	main@ExposureTime,w
  1349  07EA  023F               	subwf	main@i,w
  1350  07EB                     u845:
  1351  07EB  1C03               	skipc
  1352  07EC  2FEE               	goto	u841
  1353  07ED  2FEF               	goto	u840
  1354  07EE                     u841:
  1355  07EE  2FA4               	goto	l1403
  1356  07EF                     u840:
  1357  07EF                     l107:
  1358                           
  1359                           ;LCD_Main.c: 315:         RC4 = 1;
  1360  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  1361  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  1362  07F1  1607               	bsf	7,4	;volatile
  1363  07F2                     l1417:
  1364                           
  1365                           ;LCD_Main.c: 316:         LCDPutCmd(0x02);
  1366  07F2  3002               	movlw	2
  1367  07F3  118A  2374  118A   	fcall	_LCDPutCmd
  1368                           
  1369                           ;LCD_Main.c: 317:     }
  1370  07F6  2DF4               	goto	l1307
  1371  07F7                     l104:	
  1372                           ;LCD_Main.c: 318:     else
  1373                           
  1374                           
  1375                           ;LCD_Main.c: 319:     {;LCD_Main.c: 320:      RC4 = 1;
  1376  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  1377  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  1378  07F9  1607               	bsf	7,4	;volatile
  1379  07FA  2DF4               	goto	l1307
  1380  07FB  118A  2800         	ljmp	start
  1381  07FD                     __end_of_main:
  1382                           
  1383                           	psect	text1
  1384  03A8                     __ptext1:	
  1385 ;; *************** function _memset *****************
  1386 ;; Defined at:
  1387 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memset.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  p1              1    wreg     PTR void 
  1390 ;;		 -> main@ExpTime(6), 
  1391 ;;  c               2    0[COMMON] int 
  1392 ;;  n               2    2[COMMON] unsigned int 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  p1              1    5[COMMON] PTR void 
  1395 ;;		 -> main@ExpTime(6), 
  1396 ;;  p               1    6[COMMON] PTR unsigned char 
  1397 ;;		 -> main@ExpTime(6), 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      PTR void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1407 ;;      Params:         4       0       0       0
  1408 ;;      Locals:         2       0       0       0
  1409 ;;      Temps:          1       0       0       0
  1410 ;;      Totals:         7       0       0       0
  1411 ;;Total ram usage:        7 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420  03A8                     _memset:	
  1421                           ;psect for function _memset
  1422                           
  1423                           
  1424                           ;incstack = 0
  1425                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1426                           ;memset@p1 stored from wreg
  1427  03A8  00F5               	movwf	memset@p1
  1428  03A9                     l1281:
  1429  03A9  0875               	movf	memset@p1,w
  1430  03AA  00F4               	movwf	??_memset
  1431  03AB  0874               	movf	??_memset,w
  1432  03AC  00F6               	movwf	memset@p
  1433  03AD  2BB9               	goto	l1287
  1434  03AE                     l1283:
  1435  03AE  0870               	movf	memset@c,w
  1436  03AF  00F4               	movwf	??_memset
  1437  03B0  0876               	movf	memset@p,w
  1438  03B1  0084               	movwf	4
  1439  03B2  0874               	movf	??_memset,w
  1440  03B3  1383               	bcf	3,7	;select IRP bank0
  1441  03B4  0080               	movwf	0
  1442  03B5                     l1285:
  1443  03B5  3001               	movlw	1
  1444  03B6  00F4               	movwf	??_memset
  1445  03B7  0874               	movf	??_memset,w
  1446  03B8  07F6               	addwf	memset@p,f
  1447  03B9                     l1287:
  1448  03B9  3001               	movlw	1
  1449  03BA  02F2               	subwf	memset@n,f
  1450  03BB  3000               	movlw	0
  1451  03BC  1C03               	skipc
  1452  03BD  03F3               	decf	memset@n+1,f
  1453  03BE  02F3               	subwf	memset@n+1,f
  1454  03BF  0A72               	incf	memset@n,w
  1455  03C0  1D03               	skipz
  1456  03C1  2BC6               	goto	u741
  1457  03C2  0A73               	incf	memset@n+1,w
  1458  03C3  1D03               	btfss	3,2
  1459  03C4  2BC6               	goto	u741
  1460  03C5  2BC7               	goto	u740
  1461  03C6                     u741:
  1462  03C6  2BAE               	goto	l1283
  1463  03C7                     u740:
  1464  03C7                     l665:
  1465  03C7  0008               	return
  1466  03C8                     __end_of_memset:
  1467                           
  1468                           	psect	text2
  1469  03C8                     __ptext2:	
  1470 ;; *************** function _itoa *****************
  1471 ;; Defined at:
  1472 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  buf             1    wreg     PTR unsigned char 
  1475 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1476 ;;  val             2    4[BANK0 ] int 
  1477 ;;  base            2    6[BANK0 ] int 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  1480 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1481 ;;  cp              1    0        PTR unsigned char 
  1482 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      PTR unsigned char 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1492 ;;      Params:         0       4       0       0
  1493 ;;      Locals:         0       1       0       0
  1494 ;;      Temps:          1       0       0       0
  1495 ;;      Totals:         1       5       0       0
  1496 ;;Total ram usage:        6 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 2
  1499 ;; This function calls:
  1500 ;;		_utoa
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506  03C8                     _itoa:	
  1507                           ;psect for function _itoa
  1508                           
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1512                           ;itoa@buf stored from wreg
  1513  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1514  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1515  03CA  00A8               	movwf	itoa@buf
  1516  03CB                     l1267:
  1517  03CB                     l1269:
  1518  03CB  1FA5               	btfss	itoa@val+1,7
  1519  03CC  2BCE               	goto	u731
  1520  03CD  2BCF               	goto	u730
  1521  03CE                     u731:
  1522  03CE  2BDF               	goto	l1277
  1523  03CF                     u730:
  1524  03CF                     l1271:
  1525  03CF  302D               	movlw	45
  1526  03D0  00FD               	movwf	??_itoa
  1527  03D1  0828               	movf	itoa@buf,w
  1528  03D2  0084               	movwf	4
  1529  03D3  087D               	movf	??_itoa,w
  1530  03D4  1383               	bcf	3,7	;select IRP bank0
  1531  03D5  0080               	movwf	0
  1532  03D6                     l1273:
  1533  03D6  3001               	movlw	1
  1534  03D7  00FD               	movwf	??_itoa
  1535  03D8  087D               	movf	??_itoa,w
  1536  03D9  07A8               	addwf	itoa@buf,f
  1537  03DA                     l1275:
  1538  03DA  09A4               	comf	itoa@val,f
  1539  03DB  09A5               	comf	itoa@val+1,f
  1540  03DC  0AA4               	incf	itoa@val,f
  1541  03DD  1903               	skipnz
  1542  03DE  0AA5               	incf	itoa@val+1,f
  1543  03DF                     l1277:
  1544  03DF  0825               	movf	itoa@val+1,w
  1545  03E0  00F9               	movwf	utoa@val+1
  1546  03E1  0824               	movf	itoa@val,w
  1547  03E2  00F8               	movwf	utoa@val
  1548  03E3  0827               	movf	itoa@base+1,w
  1549  03E4  00FB               	movwf	utoa@base+1
  1550  03E5  0826               	movf	itoa@base,w
  1551  03E6  00FA               	movwf	utoa@base
  1552  03E7  0828               	movf	itoa@buf,w
  1553  03E8  118A  2552  118A   	fcall	_utoa
  1554  03EB                     l651:
  1555  03EB  0008               	return
  1556  03EC                     __end_of_itoa:
  1557                           
  1558                           	psect	text3
  1559  0552                     __ptext3:	
  1560 ;; *************** function _utoa *****************
  1561 ;; Defined at:
  1562 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  buf             1    wreg     PTR unsigned char 
  1565 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1566 ;;  val             2    8[COMMON] unsigned int 
  1567 ;;  base            2   10[COMMON] int 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1570 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1571 ;;  v               2    0[BANK0 ] unsigned int 
  1572 ;;  c               1    2[BANK0 ] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      PTR unsigned char 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1582 ;;      Params:         4       0       0       0
  1583 ;;      Locals:         0       4       0       0
  1584 ;;      Temps:          1       0       0       0
  1585 ;;      Totals:         5       4       0       0
  1586 ;;Total ram usage:        9 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 1
  1589 ;; This function calls:
  1590 ;;		___lwdiv
  1591 ;;		___lwmod
  1592 ;; This function is called by:
  1593 ;;		_itoa
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597  0552                     _utoa:	
  1598                           ;psect for function _utoa
  1599                           
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1603                           ;utoa@buf stored from wreg
  1604  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0554  00A3               	movwf	utoa@buf
  1607  0555                     l1177:
  1608  0555  0879               	movf	utoa@val+1,w
  1609  0556  00A1               	movwf	utoa@v+1
  1610  0557  0878               	movf	utoa@val,w
  1611  0558  00A0               	movwf	utoa@v
  1612  0559                     l1179:
  1613  0559  087B               	movf	utoa@base+1,w
  1614  055A  00F1               	movwf	___lwdiv@divisor+1
  1615  055B  087A               	movf	utoa@base,w
  1616  055C  00F0               	movwf	___lwdiv@divisor
  1617  055D  0821               	movf	utoa@v+1,w
  1618  055E  00F3               	movwf	___lwdiv@dividend+1
  1619  055F  0820               	movf	utoa@v,w
  1620  0560  00F2               	movwf	___lwdiv@dividend
  1621  0561  118A  250E  118A   	fcall	___lwdiv
  1622  0564  0871               	movf	?___lwdiv+1,w
  1623  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1625  0567  00A1               	movwf	utoa@v+1
  1626  0568  0870               	movf	?___lwdiv,w
  1627  0569  00A0               	movwf	utoa@v
  1628  056A                     l1181:
  1629  056A  3001               	movlw	1
  1630  056B  00FC               	movwf	??_utoa
  1631  056C  087C               	movf	??_utoa,w
  1632  056D  07A3               	addwf	utoa@buf,f
  1633  056E                     l1183:
  1634  056E  0820               	movf	utoa@v,w
  1635  056F  0421               	iorwf	utoa@v+1,w
  1636  0570  1D03               	btfss	3,2
  1637  0571  2D73               	goto	u641
  1638  0572  2D74               	goto	u640
  1639  0573                     u641:
  1640  0573  2D59               	goto	l1179
  1641  0574                     u640:
  1642  0574                     l1185:
  1643  0574  0823               	movf	utoa@buf,w
  1644  0575  0084               	movwf	4
  1645  0576  1383               	bcf	3,7	;select IRP bank0
  1646  0577  0180               	clrf	0
  1647  0578                     l1187:
  1648  0578  3001               	movlw	1
  1649  0579  02A3               	subwf	utoa@buf,f
  1650  057A                     l1189:
  1651  057A  087B               	movf	utoa@base+1,w
  1652  057B  00F1               	movwf	___lwmod@divisor+1
  1653  057C  087A               	movf	utoa@base,w
  1654  057D  00F0               	movwf	___lwmod@divisor
  1655  057E  0879               	movf	utoa@val+1,w
  1656  057F  00F3               	movwf	___lwmod@dividend+1
  1657  0580  0878               	movf	utoa@val,w
  1658  0581  00F2               	movwf	___lwmod@dividend
  1659  0582  118A  2492  118A   	fcall	___lwmod
  1660  0585  0870               	movf	?___lwmod,w
  1661  0586  00FC               	movwf	??_utoa
  1662  0587  087C               	movf	??_utoa,w
  1663  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1665  058A  00A2               	movwf	utoa@c
  1666  058B                     l1191:
  1667  058B  087B               	movf	utoa@base+1,w
  1668  058C  00F1               	movwf	___lwdiv@divisor+1
  1669  058D  087A               	movf	utoa@base,w
  1670  058E  00F0               	movwf	___lwdiv@divisor
  1671  058F  0879               	movf	utoa@val+1,w
  1672  0590  00F3               	movwf	___lwdiv@dividend+1
  1673  0591  0878               	movf	utoa@val,w
  1674  0592  00F2               	movwf	___lwdiv@dividend
  1675  0593  118A  250E  118A   	fcall	___lwdiv
  1676  0596  0871               	movf	?___lwdiv+1,w
  1677  0597  00F9               	movwf	utoa@val+1
  1678  0598  0870               	movf	?___lwdiv,w
  1679  0599  00F8               	movwf	utoa@val
  1680  059A                     l1193:
  1681  059A  300A               	movlw	10
  1682  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1683  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1684  059D  0222               	subwf	utoa@c,w
  1685  059E  1C03               	skipc
  1686  059F  2DA1               	goto	u651
  1687  05A0  2DA2               	goto	u650
  1688  05A1                     u651:
  1689  05A1  2DA6               	goto	l657
  1690  05A2                     u650:
  1691  05A2                     l1195:
  1692  05A2  3007               	movlw	7
  1693  05A3  00FC               	movwf	??_utoa
  1694  05A4  087C               	movf	??_utoa,w
  1695  05A5  07A2               	addwf	utoa@c,f
  1696  05A6                     l657:
  1697  05A6  3030               	movlw	48
  1698  05A7  00FC               	movwf	??_utoa
  1699  05A8  087C               	movf	??_utoa,w
  1700  05A9  07A2               	addwf	utoa@c,f
  1701  05AA                     l1197:
  1702  05AA  0822               	movf	utoa@c,w
  1703  05AB  00FC               	movwf	??_utoa
  1704  05AC  0823               	movf	utoa@buf,w
  1705  05AD  0084               	movwf	4
  1706  05AE  087C               	movf	??_utoa,w
  1707  05AF  1383               	bcf	3,7	;select IRP bank0
  1708  05B0  0080               	movwf	0
  1709  05B1                     l1199:
  1710  05B1  3001               	movlw	1
  1711  05B2  02A3               	subwf	utoa@buf,f
  1712  05B3                     l1201:
  1713  05B3  0878               	movf	utoa@val,w
  1714  05B4  0479               	iorwf	utoa@val+1,w
  1715  05B5  1D03               	btfss	3,2
  1716  05B6  2DB8               	goto	u661
  1717  05B7  2DB9               	goto	u660
  1718  05B8                     u661:
  1719  05B8  2D7A               	goto	l1189
  1720  05B9                     u660:
  1721  05B9                     l1203:
  1722                           
  1723                           ;	Return value of _utoa is never used
  1724  05B9  3001               	movlw	1
  1725  05BA  00FC               	movwf	??_utoa
  1726  05BB  087C               	movf	??_utoa,w
  1727  05BC  07A3               	addwf	utoa@buf,f
  1728  05BD                     l659:
  1729  05BD  0008               	return
  1730  05BE                     __end_of_utoa:
  1731                           
  1732                           	psect	text4
  1733  0492                     __ptext4:	
  1734 ;; *************** function ___lwmod *****************
  1735 ;; Defined at:
  1736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  divisor         2    0[COMMON] unsigned int 
  1739 ;;  dividend        2    2[COMMON] unsigned int 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  counter         1    5[COMMON] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  2    0[COMMON] unsigned int 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1751 ;;      Params:         4       0       0       0
  1752 ;;      Locals:         1       0       0       0
  1753 ;;      Temps:          1       0       0       0
  1754 ;;      Totals:         6       0       0       0
  1755 ;;Total ram usage:        6 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_utoa
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764  0492                     ___lwmod:	
  1765                           ;psect for function ___lwmod
  1766                           
  1767  0492                     l1147:	
  1768                           ;incstack = 0
  1769                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1770                           
  1771  0492  0870               	movf	___lwmod@divisor,w
  1772  0493  0471               	iorwf	___lwmod@divisor+1,w
  1773  0494  1903               	btfsc	3,2
  1774  0495  2C97               	goto	u581
  1775  0496  2C98               	goto	u580
  1776  0497                     u581:
  1777  0497  2CC7               	goto	l1165
  1778  0498                     u580:
  1779  0498                     l1149:
  1780  0498  01F5               	clrf	___lwmod@counter
  1781  0499  0AF5               	incf	___lwmod@counter,f
  1782  049A  2CA6               	goto	l1155
  1783  049B                     l1151:
  1784  049B  3001               	movlw	1
  1785  049C                     u595:
  1786  049C  1003               	clrc
  1787  049D  0DF0               	rlf	___lwmod@divisor,f
  1788  049E  0DF1               	rlf	___lwmod@divisor+1,f
  1789  049F  3EFF               	addlw	-1
  1790  04A0  1D03               	skipz
  1791  04A1  2C9C               	goto	u595
  1792  04A2                     l1153:
  1793  04A2  3001               	movlw	1
  1794  04A3  00F4               	movwf	??___lwmod
  1795  04A4  0874               	movf	??___lwmod,w
  1796  04A5  07F5               	addwf	___lwmod@counter,f
  1797  04A6                     l1155:
  1798  04A6  1FF1               	btfss	___lwmod@divisor+1,7
  1799  04A7  2CA9               	goto	u601
  1800  04A8  2CAA               	goto	u600
  1801  04A9                     u601:
  1802  04A9  2C9B               	goto	l1151
  1803  04AA                     u600:
  1804  04AA                     l1157:
  1805  04AA  0871               	movf	___lwmod@divisor+1,w
  1806  04AB  0273               	subwf	___lwmod@dividend+1,w
  1807  04AC  1D03               	skipz
  1808  04AD  2CB0               	goto	u615
  1809  04AE  0870               	movf	___lwmod@divisor,w
  1810  04AF  0272               	subwf	___lwmod@dividend,w
  1811  04B0                     u615:
  1812  04B0  1C03               	skipc
  1813  04B1  2CB3               	goto	u611
  1814  04B2  2CB4               	goto	u610
  1815  04B3                     u611:
  1816  04B3  2CBA               	goto	l1161
  1817  04B4                     u610:
  1818  04B4                     l1159:
  1819  04B4  0870               	movf	___lwmod@divisor,w
  1820  04B5  02F2               	subwf	___lwmod@dividend,f
  1821  04B6  0871               	movf	___lwmod@divisor+1,w
  1822  04B7  1C03               	skipc
  1823  04B8  03F3               	decf	___lwmod@dividend+1,f
  1824  04B9  02F3               	subwf	___lwmod@dividend+1,f
  1825  04BA                     l1161:
  1826  04BA  3001               	movlw	1
  1827  04BB                     u625:
  1828  04BB  1003               	clrc
  1829  04BC  0CF1               	rrf	___lwmod@divisor+1,f
  1830  04BD  0CF0               	rrf	___lwmod@divisor,f
  1831  04BE  3EFF               	addlw	-1
  1832  04BF  1D03               	skipz
  1833  04C0  2CBB               	goto	u625
  1834  04C1                     l1163:
  1835  04C1  3001               	movlw	1
  1836  04C2  02F5               	subwf	___lwmod@counter,f
  1837  04C3  1D03               	btfss	3,2
  1838  04C4  2CC6               	goto	u631
  1839  04C5  2CC7               	goto	u630
  1840  04C6                     u631:
  1841  04C6  2CAA               	goto	l1157
  1842  04C7                     u630:
  1843  04C7                     l1165:
  1844  04C7  0873               	movf	___lwmod@dividend+1,w
  1845  04C8  00F1               	movwf	?___lwmod+1
  1846  04C9  0872               	movf	___lwmod@dividend,w
  1847  04CA  00F0               	movwf	?___lwmod
  1848  04CB                     l479:
  1849  04CB  0008               	return
  1850  04CC                     __end_of___lwmod:
  1851                           
  1852                           	psect	text5
  1853  050E                     __ptext5:	
  1854 ;; *************** function ___lwdiv *****************
  1855 ;; Defined at:
  1856 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  divisor         2    0[COMMON] unsigned int 
  1859 ;;  dividend        2    2[COMMON] unsigned int 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  quotient        2    5[COMMON] unsigned int 
  1862 ;;  counter         1    7[COMMON] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2    0[COMMON] unsigned int 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1872 ;;      Params:         4       0       0       0
  1873 ;;      Locals:         3       0       0       0
  1874 ;;      Temps:          1       0       0       0
  1875 ;;      Totals:         8       0       0       0
  1876 ;;Total ram usage:        8 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_utoa
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885  050E                     ___lwdiv:	
  1886                           ;psect for function ___lwdiv
  1887                           
  1888  050E                     l1121:	
  1889                           ;incstack = 0
  1890                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1891                           
  1892  050E  01F5               	clrf	___lwdiv@quotient
  1893  050F  01F6               	clrf	___lwdiv@quotient+1
  1894  0510                     l1123:
  1895  0510  0870               	movf	___lwdiv@divisor,w
  1896  0511  0471               	iorwf	___lwdiv@divisor+1,w
  1897  0512  1903               	btfsc	3,2
  1898  0513  2D15               	goto	u511
  1899  0514  2D16               	goto	u510
  1900  0515                     u511:
  1901  0515  2D4D               	goto	l1143
  1902  0516                     u510:
  1903  0516                     l1125:
  1904  0516  01F7               	clrf	___lwdiv@counter
  1905  0517  0AF7               	incf	___lwdiv@counter,f
  1906  0518  2D24               	goto	l1131
  1907  0519                     l1127:
  1908  0519  3001               	movlw	1
  1909  051A                     u525:
  1910  051A  1003               	clrc
  1911  051B  0DF0               	rlf	___lwdiv@divisor,f
  1912  051C  0DF1               	rlf	___lwdiv@divisor+1,f
  1913  051D  3EFF               	addlw	-1
  1914  051E  1D03               	skipz
  1915  051F  2D1A               	goto	u525
  1916  0520                     l1129:
  1917  0520  3001               	movlw	1
  1918  0521  00F4               	movwf	??___lwdiv
  1919  0522  0874               	movf	??___lwdiv,w
  1920  0523  07F7               	addwf	___lwdiv@counter,f
  1921  0524                     l1131:
  1922  0524  1FF1               	btfss	___lwdiv@divisor+1,7
  1923  0525  2D27               	goto	u531
  1924  0526  2D28               	goto	u530
  1925  0527                     u531:
  1926  0527  2D19               	goto	l1127
  1927  0528                     u530:
  1928  0528                     l1133:
  1929  0528  3001               	movlw	1
  1930  0529                     u545:
  1931  0529  1003               	clrc
  1932  052A  0DF5               	rlf	___lwdiv@quotient,f
  1933  052B  0DF6               	rlf	___lwdiv@quotient+1,f
  1934  052C  3EFF               	addlw	-1
  1935  052D  1D03               	skipz
  1936  052E  2D29               	goto	u545
  1937  052F  0871               	movf	___lwdiv@divisor+1,w
  1938  0530  0273               	subwf	___lwdiv@dividend+1,w
  1939  0531  1D03               	skipz
  1940  0532  2D35               	goto	u555
  1941  0533  0870               	movf	___lwdiv@divisor,w
  1942  0534  0272               	subwf	___lwdiv@dividend,w
  1943  0535                     u555:
  1944  0535  1C03               	skipc
  1945  0536  2D38               	goto	u551
  1946  0537  2D39               	goto	u550
  1947  0538                     u551:
  1948  0538  2D40               	goto	l1139
  1949  0539                     u550:
  1950  0539                     l1135:
  1951  0539  0870               	movf	___lwdiv@divisor,w
  1952  053A  02F2               	subwf	___lwdiv@dividend,f
  1953  053B  0871               	movf	___lwdiv@divisor+1,w
  1954  053C  1C03               	skipc
  1955  053D  03F3               	decf	___lwdiv@dividend+1,f
  1956  053E  02F3               	subwf	___lwdiv@dividend+1,f
  1957  053F                     l1137:
  1958  053F  1475               	bsf	___lwdiv@quotient,0
  1959  0540                     l1139:
  1960  0540  3001               	movlw	1
  1961  0541                     u565:
  1962  0541  1003               	clrc
  1963  0542  0CF1               	rrf	___lwdiv@divisor+1,f
  1964  0543  0CF0               	rrf	___lwdiv@divisor,f
  1965  0544  3EFF               	addlw	-1
  1966  0545  1D03               	skipz
  1967  0546  2D41               	goto	u565
  1968  0547                     l1141:
  1969  0547  3001               	movlw	1
  1970  0548  02F7               	subwf	___lwdiv@counter,f
  1971  0549  1D03               	btfss	3,2
  1972  054A  2D4C               	goto	u571
  1973  054B  2D4D               	goto	u570
  1974  054C                     u571:
  1975  054C  2D28               	goto	l1133
  1976  054D                     u570:
  1977  054D                     l1143:
  1978  054D  0876               	movf	___lwdiv@quotient+1,w
  1979  054E  00F1               	movwf	?___lwdiv+1
  1980  054F  0875               	movf	___lwdiv@quotient,w
  1981  0550  00F0               	movwf	?___lwdiv
  1982  0551                     l469:
  1983  0551  0008               	return
  1984  0552                     __end_of___lwdiv:
  1985                           
  1986                           	psect	text6
  1987  043B                     __ptext6:	
  1988 ;; *************** function _LCD_Initialize *****************
  1989 ;; Defined at:
  1990 ;;		line 60 in file "LCD_Main.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2004 ;;      Params:         0       0       0       0
  2005 ;;      Locals:         0       0       0       0
  2006 ;;      Temps:          2       0       0       0
  2007 ;;      Totals:         2       0       0       0
  2008 ;;Total ram usage:        2 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 3
  2011 ;; This function calls:
  2012 ;;		_LCDPutCmd
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018  043B                     _LCD_Initialize:	
  2019                           ;psect for function _LCD_Initialize
  2020                           
  2021  043B                     l1207:	
  2022                           ;incstack = 0
  2023                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2024                           
  2025                           
  2026                           ;LCD_Main.c: 63: PORTB = 0;
  2027  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2028  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2029  043D  0186               	clrf	6	;volatile
  2030  043E                     l1209:
  2031                           
  2032                           ;LCD_Main.c: 64: PORTC = 0b00010000;
  2033  043E  3010               	movlw	16
  2034  043F  0087               	movwf	7	;volatile
  2035  0440                     l1211:
  2036                           
  2037                           ;LCD_Main.c: 65: TRISB = 0x00;
  2038  0440  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0441  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0442  0186               	clrf	6	;volatile
  2041  0443                     l1213:
  2042                           
  2043                           ;LCD_Main.c: 66: TRISC = 0x00;
  2044  0443  0187               	clrf	7	;volatile
  2045  0444                     l1215:
  2046                           
  2047                           ;LCD_Main.c: 69: _delay((unsigned long)((15)*(4194304/4000.0)));
  2048  0444  3015               	movlw	21
  2049  0445  00F7               	movwf	??_LCD_Initialize+1
  2050  0446  306B               	movlw	107
  2051  0447  00F6               	movwf	??_LCD_Initialize
  2052  0448                     u917:
  2053  0448  0BF6               	decfsz	??_LCD_Initialize,f
  2054  0449  2C48               	goto	u917
  2055  044A  0BF7               	decfsz	??_LCD_Initialize+1,f
  2056  044B  2C48               	goto	u917
  2057  044C  2C4D               	nop2
  2058  044D                     l1217:
  2059                           
  2060                           ;LCD_Main.c: 70: LCDPutCmd(0x02);
  2061  044D  3002               	movlw	2
  2062  044E  118A  2374  118A   	fcall	_LCDPutCmd
  2063  0451                     l1219:
  2064                           
  2065                           ;LCD_Main.c: 72: LCDPutCmd(0x28);
  2066  0451  3028               	movlw	40
  2067  0452  118A  2374  118A   	fcall	_LCDPutCmd
  2068  0455                     l1221:
  2069                           
  2070                           ;LCD_Main.c: 74: LCDPutCmd(0x0C);
  2071  0455  300C               	movlw	12
  2072  0456  118A  2374  118A   	fcall	_LCDPutCmd
  2073  0459                     l1223:
  2074                           
  2075                           ;LCD_Main.c: 76: LCDPutCmd(0x06);
  2076  0459  3006               	movlw	6
  2077  045A  118A  2374  118A   	fcall	_LCDPutCmd
  2078  045D                     l1225:
  2079                           
  2080                           ;LCD_Main.c: 78: LCDPutCmd(0x01);
  2081  045D  3001               	movlw	1
  2082  045E  118A  2374  118A   	fcall	_LCDPutCmd
  2083  0461                     l1227:
  2084                           
  2085                           ;LCD_Main.c: 80: LCDPutCmd(0x80);
  2086  0461  3080               	movlw	128
  2087  0462  118A  2374  118A   	fcall	_LCDPutCmd
  2088  0465                     l45:
  2089  0465  0008               	return
  2090  0466                     __end_of_LCD_Initialize:
  2091                           
  2092                           	psect	text7
  2093  03EC                     __ptext7:	
  2094 ;; *************** function _LCDPutStr *****************
  2095 ;; Defined at:
  2096 ;;		line 169 in file "LCD_Main.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  str             2    6[COMMON] PTR const unsigned char 
  2099 ;;		 -> STR_10(14), main@iTime(6), STR_9(17), STR_8(15), 
  2100 ;;		 -> STR_7(15), STR_6(15), STR_5(6), STR_4(16), 
  2101 ;;		 -> STR_3(15), main@ExpTime(6), STR_2(15), STR_1(15), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  i               1    9[COMMON] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2113 ;;      Params:         2       0       0       0
  2114 ;;      Locals:         1       0       0       0
  2115 ;;      Temps:          1       0       0       0
  2116 ;;      Totals:         4       0       0       0
  2117 ;;Total ram usage:        4 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 3
  2120 ;; This function calls:
  2121 ;;		_LCDPutChar
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127  03EC                     _LCDPutStr:	
  2128                           ;psect for function _LCDPutStr
  2129                           
  2130  03EC                     l1229:	
  2131                           ;incstack = 0
  2132                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2133                           
  2134                           
  2135                           ;LCD_Main.c: 169: void LCDPutStr(const char *str);LCD_Main.c: 170: {;LCD_Main.c: 171: ch
      +                          ar i=0;
  2136  03EC  01F9               	clrf	LCDPutStr@i
  2137                           
  2138                           ;LCD_Main.c: 174: while (str[i])
  2139  03ED  2BFF               	goto	l1235
  2140  03EE                     l1231:
  2141                           
  2142                           ;LCD_Main.c: 175: {;LCD_Main.c: 177: LCDPutChar(str[i++]);
  2143  03EE  0879               	movf	LCDPutStr@i,w
  2144  03EF  0776               	addwf	LCDPutStr@str,w
  2145  03F0  0084               	movwf	4
  2146  03F1  0877               	movf	LCDPutStr@str+1,w
  2147  03F2  1803               	skipnc
  2148  03F3  0A77               	incf	LCDPutStr@str+1,w
  2149  03F4  00FF               	movwf	btemp+1
  2150  03F5  118A  2002  118A   	fcall	stringtab
  2151  03F8  118A  2384  118A   	fcall	_LCDPutChar
  2152  03FB                     l1233:
  2153  03FB  3001               	movlw	1
  2154  03FC  00F8               	movwf	??_LCDPutStr
  2155  03FD  0878               	movf	??_LCDPutStr,w
  2156  03FE  07F9               	addwf	LCDPutStr@i,f
  2157  03FF                     l1235:
  2158                           
  2159                           ;LCD_Main.c: 174: while (str[i])
  2160  03FF  0879               	movf	LCDPutStr@i,w
  2161  0400  0776               	addwf	LCDPutStr@str,w
  2162  0401  0084               	movwf	4
  2163  0402  0877               	movf	LCDPutStr@str+1,w
  2164  0403  1803               	skipnc
  2165  0404  0A77               	incf	LCDPutStr@str+1,w
  2166  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0406  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0407  00FF               	movwf	btemp+1
  2169  0408  118A  2002  118A   	fcall	stringtab
  2170  040B  3A00               	xorlw	0
  2171  040C  1D03               	skipz
  2172  040D  2C0F               	goto	u671
  2173  040E  2C10               	goto	u670
  2174  040F                     u671:
  2175  040F  2BEE               	goto	l1231
  2176  0410                     u670:
  2177  0410                     l71:
  2178  0410  0008               	return
  2179  0411                     __end_of_LCDPutStr:
  2180                           
  2181                           	psect	text8
  2182  0384                     __ptext8:	
  2183 ;; *************** function _LCDPutChar *****************
  2184 ;; Defined at:
  2185 ;;		line 143 in file "LCD_Main.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  ch              1    wreg     unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  ch              1    5[COMMON] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2199 ;;      Params:         0       0       0       0
  2200 ;;      Locals:         1       0       0       0
  2201 ;;      Temps:          2       0       0       0
  2202 ;;      Totals:         3       0       0       0
  2203 ;;Total ram usage:        3 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 2
  2206 ;; This function calls:
  2207 ;;		_LCDWriteNibble
  2208 ;; This function is called by:
  2209 ;;		_LCDPutStr
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213  0384                     _LCDPutChar:	
  2214                           ;psect for function _LCDPutChar
  2215                           
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  2219                           ;LCDPutChar@ch stored from wreg
  2220  0384  00F5               	movwf	LCDPutChar@ch
  2221  0385                     l1173:
  2222                           
  2223                           ;LCD_Main.c: 143: void LCDPutChar(char ch);LCD_Main.c: 144: {;LCD_Main.c: 145: _delay((u
      +                          nsigned long)((5)*(4194304/4000.0)));
  2224  0385  3007               	movlw	7
  2225  0386  00F4               	movwf	??_LCDPutChar+1
  2226  0387  30CD               	movlw	205
  2227  0388  00F3               	movwf	??_LCDPutChar
  2228  0389                     u927:
  2229  0389  0BF3               	decfsz	??_LCDPutChar,f
  2230  038A  2B89               	goto	u927
  2231  038B  0BF4               	decfsz	??_LCDPutChar+1,f
  2232  038C  2B89               	goto	u927
  2233  038D  2B8E               	nop2
  2234  038E                     l1175:
  2235                           
  2236                           ;LCD_Main.c: 148: LCDWriteNibble(ch,1);
  2237  038E  01F1               	clrf	LCDWriteNibble@rs
  2238  038F  0AF1               	incf	LCDWriteNibble@rs,f
  2239  0390  0875               	movf	LCDPutChar@ch,w
  2240  0391  118A  24CC  118A   	fcall	_LCDWriteNibble
  2241  0394                     l62:
  2242  0394  0008               	return
  2243  0395                     __end_of_LCDPutChar:
  2244                           
  2245                           	psect	text9
  2246  0466                     __ptext9:	
  2247 ;; *************** function _LCDGoto *****************
  2248 ;; Defined at:
  2249 ;;		line 182 in file "LCD_Main.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  pos             1    wreg     unsigned char 
  2252 ;;  ln              1    6[COMMON] unsigned char 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  pos             1   11[COMMON] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2264 ;;      Params:         1       0       0       0
  2265 ;;      Locals:         3       0       0       0
  2266 ;;      Temps:          2       0       0       0
  2267 ;;      Totals:         6       0       0       0
  2268 ;;Total ram usage:        6 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 3
  2271 ;; This function calls:
  2272 ;;		_LCDPutCmd
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278  0466                     _LCDGoto:	
  2279                           ;psect for function _LCDGoto
  2280                           
  2281                           
  2282                           ;incstack = 0
  2283                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  2284                           ;LCDGoto@pos stored from wreg
  2285  0466  00FB               	movwf	LCDGoto@pos
  2286  0467                     l1237:
  2287                           
  2288                           ;LCD_Main.c: 182: void LCDGoto(char pos,char ln);LCD_Main.c: 183: {;LCD_Main.c: 185: if 
      +                          ((ln > (2 -1)) || (pos > (16 -1)))
  2289  0467  3002               	movlw	2
  2290  0468  0276               	subwf	LCDGoto@ln,w
  2291  0469  1803               	skipnc
  2292  046A  2C6C               	goto	u681
  2293  046B  2C6D               	goto	u680
  2294  046C                     u681:
  2295  046C  2C91               	goto	l77
  2296  046D                     u680:
  2297  046D                     l1239:
  2298  046D  3010               	movlw	16
  2299  046E  027B               	subwf	LCDGoto@pos,w
  2300  046F  1C03               	skipc
  2301  0470  2C72               	goto	u691
  2302  0471  2C73               	goto	u690
  2303  0472                     u691:
  2304  0472  2C74               	goto	l1241
  2305  0473                     u690:
  2306  0473  2C91               	goto	l77
  2307  0474                     l1241:
  2308                           
  2309                           ;LCD_Main.c: 192: LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  2310  0474  0376               	decf	LCDGoto@ln,w
  2311  0475  1903               	btfsc	3,2
  2312  0476  2C78               	goto	u701
  2313  0477  2C79               	goto	u700
  2314  0478                     u701:
  2315  0478  2C7F               	goto	l1245
  2316  0479                     u700:
  2317  0479                     l1243:
  2318  0479  3080               	movlw	128
  2319  047A  047B               	iorwf	LCDGoto@pos,w
  2320  047B  00F9               	movwf	_LCDGoto$138
  2321  047C  3000               	movlw	0
  2322  047D  00FA               	movwf	_LCDGoto$138+1
  2323  047E  2C84               	goto	l1247
  2324  047F                     l1245:
  2325  047F  30C0               	movlw	192
  2326  0480  047B               	iorwf	LCDGoto@pos,w
  2327  0481  00F9               	movwf	_LCDGoto$138
  2328  0482  3000               	movlw	0
  2329  0483  00FA               	movwf	_LCDGoto$138+1
  2330  0484                     l1247:
  2331  0484  0879               	movf	_LCDGoto$138,w
  2332  0485  118A  2374  118A   	fcall	_LCDPutCmd
  2333  0488                     l1249:
  2334                           
  2335                           ;LCD_Main.c: 195: _delay((unsigned long)((5)*(4194304/4000.0)));
  2336  0488  3007               	movlw	7
  2337  0489  00F8               	movwf	??_LCDGoto+1
  2338  048A  30CD               	movlw	205
  2339  048B  00F7               	movwf	??_LCDGoto
  2340  048C                     u937:
  2341  048C  0BF7               	decfsz	??_LCDGoto,f
  2342  048D  2C8C               	goto	u937
  2343  048E  0BF8               	decfsz	??_LCDGoto+1,f
  2344  048F  2C8C               	goto	u937
  2345  0490  2C91               	nop2
  2346  0491                     l77:
  2347  0491  0008               	return
  2348  0492                     __end_of_LCDGoto:
  2349                           
  2350                           	psect	text10
  2351  0374                     __ptext10:	
  2352 ;; *************** function _LCDPutCmd *****************
  2353 ;; Defined at:
  2354 ;;		line 154 in file "LCD_Main.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  ch              1    wreg     unsigned char 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  ch              1    5[COMMON] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0, pclath, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2368 ;;      Params:         0       0       0       0
  2369 ;;      Locals:         1       0       0       0
  2370 ;;      Temps:          2       0       0       0
  2371 ;;      Totals:         3       0       0       0
  2372 ;;Total ram usage:        3 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 2
  2375 ;; This function calls:
  2376 ;;		_LCDWriteNibble
  2377 ;; This function is called by:
  2378 ;;		_LCD_Initialize
  2379 ;;		_LCDGoto
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384  0374                     _LCDPutCmd:	
  2385                           ;psect for function _LCDPutCmd
  2386                           
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  2390                           ;LCDPutCmd@ch stored from wreg
  2391  0374  00F5               	movwf	LCDPutCmd@ch
  2392  0375                     l1169:
  2393                           
  2394                           ;LCD_Main.c: 154: void LCDPutCmd(char ch);LCD_Main.c: 155: {;LCD_Main.c: 156: _delay((un
      +                          signed long)((5)*(4194304/4000.0)));
  2395  0375  3007               	movlw	7
  2396  0376  00F4               	movwf	??_LCDPutCmd+1
  2397  0377  30CD               	movlw	205
  2398  0378  00F3               	movwf	??_LCDPutCmd
  2399  0379                     u947:
  2400  0379  0BF3               	decfsz	??_LCDPutCmd,f
  2401  037A  2B79               	goto	u947
  2402  037B  0BF4               	decfsz	??_LCDPutCmd+1,f
  2403  037C  2B79               	goto	u947
  2404  037D  2B7E               	nop2
  2405  037E                     l1171:
  2406                           
  2407                           ;LCD_Main.c: 159: LCDWriteNibble(ch,0);
  2408  037E  01F1               	clrf	LCDWriteNibble@rs
  2409  037F  0875               	movf	LCDPutCmd@ch,w
  2410  0380  118A  24CC  118A   	fcall	_LCDWriteNibble
  2411  0383                     l65:
  2412  0383  0008               	return
  2413  0384                     __end_of_LCDPutCmd:
  2414                           
  2415                           	psect	text11
  2416  04CC                     __ptext11:	
  2417 ;; *************** function _LCDWriteNibble *****************
  2418 ;; Defined at:
  2419 ;;		line 93 in file "LCD_Main.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  ch              1    wreg     unsigned char 
  2422 ;;  rs              1    1[COMMON] unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  ch              1    2[COMMON] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, pclath, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2434 ;;      Params:         1       0       0       0
  2435 ;;      Locals:         1       0       0       0
  2436 ;;      Temps:          0       0       0       0
  2437 ;;      Totals:         2       0       0       0
  2438 ;;Total ram usage:        2 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 1
  2441 ;; This function calls:
  2442 ;;		_ToggleEnable
  2443 ;; This function is called by:
  2444 ;;		_LCDPutChar
  2445 ;;		_LCDPutCmd
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449  04CC                     _LCDWriteNibble:	
  2450                           ;psect for function _LCDWriteNibble
  2451                           
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0+pclath+cstack]
  2455                           ;LCDWriteNibble@ch stored from wreg
  2456  04CC  00F2               	movwf	LCDWriteNibble@ch
  2457  04CD                     l1077:
  2458                           
  2459                           ;LCD_Main.c: 93: void LCDWriteNibble(char ch, char rs);LCD_Main.c: 94: {;LCD_Main.c: 96:
      +                           PORTBbits.RB6 = rs;
  2460  04CD  0C71               	rrf	LCDWriteNibble@rs,w
  2461  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2462  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2463  04D0  1C03               	skipc
  2464  04D1  1306               	bcf	6,6	;volatile
  2465  04D2  1803               	skipnc
  2466  04D3  1706               	bsf	6,6	;volatile
  2467  04D4                     l1079:
  2468                           
  2469                           ;LCD_Main.c: 99: PORTBbits.RB7 = 0;
  2470  04D4  1386               	bcf	6,7	;volatile
  2471  04D5                     l1081:
  2472                           
  2473                           ;LCD_Main.c: 103: RB0 = 0x00;
  2474  04D5  1006               	bcf	6,0	;volatile
  2475  04D6                     l1083:
  2476                           
  2477                           ;LCD_Main.c: 104: RB1 = 0x00;
  2478  04D6  1086               	bcf	6,1	;volatile
  2479  04D7                     l1085:
  2480                           
  2481                           ;LCD_Main.c: 105: RB2 = 0x00;
  2482  04D7  1106               	bcf	6,2	;volatile
  2483  04D8                     l1087:
  2484                           
  2485                           ;LCD_Main.c: 106: RB3 = 0x00;
  2486  04D8  1186               	bcf	6,3	;volatile
  2487  04D9                     l1089:
  2488                           
  2489                           ;LCD_Main.c: 108:     if ((ch&0x10) == 0x10)
  2490  04D9  1E72               	btfss	LCDWriteNibble@ch,4
  2491  04DA  2CDC               	goto	u431
  2492  04DB  2CDD               	goto	u430
  2493  04DC                     u431:
  2494  04DC  2CDE               	goto	l51
  2495  04DD                     u430:
  2496  04DD                     l1091:
  2497                           
  2498                           ;LCD_Main.c: 109:             RB0 = 1;
  2499  04DD  1406               	bsf	6,0	;volatile
  2500  04DE                     l51:
  2501                           
  2502                           ;LCD_Main.c: 110:     if ((ch&0x20) == 0x20)
  2503  04DE  1EF2               	btfss	LCDWriteNibble@ch,5
  2504  04DF  2CE1               	goto	u441
  2505  04E0  2CE2               	goto	u440
  2506  04E1                     u441:
  2507  04E1  2CE3               	goto	l52
  2508  04E2                     u440:
  2509  04E2                     l1093:
  2510                           
  2511                           ;LCD_Main.c: 111:             RB1 = 1;
  2512  04E2  1486               	bsf	6,1	;volatile
  2513  04E3                     l52:
  2514                           
  2515                           ;LCD_Main.c: 112:     if ((ch&0x40) == 0x40)
  2516  04E3  1F72               	btfss	LCDWriteNibble@ch,6
  2517  04E4  2CE6               	goto	u451
  2518  04E5  2CE7               	goto	u450
  2519  04E6                     u451:
  2520  04E6  2CE8               	goto	l53
  2521  04E7                     u450:
  2522  04E7                     l1095:
  2523                           
  2524                           ;LCD_Main.c: 113:             RB2 = 1;
  2525  04E7  1506               	bsf	6,2	;volatile
  2526  04E8                     l53:
  2527                           
  2528                           ;LCD_Main.c: 114:     if ((ch&0x80) == 0x80)
  2529  04E8  1FF2               	btfss	LCDWriteNibble@ch,7
  2530  04E9  2CEB               	goto	u461
  2531  04EA  2CEC               	goto	u460
  2532  04EB                     u461:
  2533  04EB  2CED               	goto	l1099
  2534  04EC                     u460:
  2535  04EC                     l1097:
  2536                           
  2537                           ;LCD_Main.c: 115:             RB3 = 1;
  2538  04EC  1586               	bsf	6,3	;volatile
  2539  04ED                     l1099:
  2540                           
  2541                           ;LCD_Main.c: 117: ToggleEnable();
  2542  04ED  118A  2395  118A   	fcall	_ToggleEnable
  2543  04F0                     l1101:
  2544                           
  2545                           ;LCD_Main.c: 121: RB0 = 0x00;
  2546  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2547  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2548  04F2  1006               	bcf	6,0	;volatile
  2549  04F3                     l1103:
  2550                           
  2551                           ;LCD_Main.c: 122: RB1 = 0x00;
  2552  04F3  1086               	bcf	6,1	;volatile
  2553  04F4                     l1105:
  2554                           
  2555                           ;LCD_Main.c: 123: RB2 = 0x00;
  2556  04F4  1106               	bcf	6,2	;volatile
  2557  04F5                     l1107:
  2558                           
  2559                           ;LCD_Main.c: 124: RB3 = 0x00;
  2560  04F5  1186               	bcf	6,3	;volatile
  2561  04F6                     l1109:
  2562                           
  2563                           ;LCD_Main.c: 126:     if ((ch&0x01) == 0x01)
  2564  04F6  1C72               	btfss	LCDWriteNibble@ch,0
  2565  04F7  2CF9               	goto	u471
  2566  04F8  2CFA               	goto	u470
  2567  04F9                     u471:
  2568  04F9  2CFB               	goto	l55
  2569  04FA                     u470:
  2570  04FA                     l1111:
  2571                           
  2572                           ;LCD_Main.c: 127:             RB0 = 1;
  2573  04FA  1406               	bsf	6,0	;volatile
  2574  04FB                     l55:
  2575                           
  2576                           ;LCD_Main.c: 128:     if ((ch&0x02) == 0x02)
  2577  04FB  1CF2               	btfss	LCDWriteNibble@ch,1
  2578  04FC  2CFE               	goto	u481
  2579  04FD  2CFF               	goto	u480
  2580  04FE                     u481:
  2581  04FE  2D00               	goto	l56
  2582  04FF                     u480:
  2583  04FF                     l1113:
  2584                           
  2585                           ;LCD_Main.c: 129:             RB1 = 1;
  2586  04FF  1486               	bsf	6,1	;volatile
  2587  0500                     l56:
  2588                           
  2589                           ;LCD_Main.c: 130:     if ((ch&0x04) == 0x04)
  2590  0500  1D72               	btfss	LCDWriteNibble@ch,2
  2591  0501  2D03               	goto	u491
  2592  0502  2D04               	goto	u490
  2593  0503                     u491:
  2594  0503  2D05               	goto	l57
  2595  0504                     u490:
  2596  0504                     l1115:
  2597                           
  2598                           ;LCD_Main.c: 131:             RB2 = 1;
  2599  0504  1506               	bsf	6,2	;volatile
  2600  0505                     l57:
  2601                           
  2602                           ;LCD_Main.c: 132:     if ((ch&0x08) == 0x08)
  2603  0505  1DF2               	btfss	LCDWriteNibble@ch,3
  2604  0506  2D08               	goto	u501
  2605  0507  2D09               	goto	u500
  2606  0508                     u501:
  2607  0508  2D0A               	goto	l1119
  2608  0509                     u500:
  2609  0509                     l1117:
  2610                           
  2611                           ;LCD_Main.c: 133:             RB3 = 1;
  2612  0509  1586               	bsf	6,3	;volatile
  2613  050A                     l1119:
  2614                           
  2615                           ;LCD_Main.c: 135:  ToggleEnable();
  2616  050A  118A  2395  118A   	fcall	_ToggleEnable
  2617  050D                     l59:
  2618  050D  0008               	return
  2619  050E                     __end_of_LCDWriteNibble:
  2620                           
  2621                           	psect	text12
  2622  0395                     __ptext12:	
  2623 ;; *************** function _ToggleEnable *****************
  2624 ;; Defined at:
  2625 ;;		line 83 in file "LCD_Main.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2639 ;;      Params:         0       0       0       0
  2640 ;;      Locals:         0       0       0       0
  2641 ;;      Temps:          1       0       0       0
  2642 ;;      Totals:         1       0       0       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_LCDWriteNibble
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652  0395                     _ToggleEnable:	
  2653                           ;psect for function _ToggleEnable
  2654                           
  2655  0395                     l1071:	
  2656                           ;incstack = 0
  2657                           ; Regs used in _ToggleEnable: [wreg]
  2658                           
  2659                           
  2660                           ;LCD_Main.c: 85: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2661  0395  3003               	movlw	3
  2662  0396  00F0               	movwf	??_ToggleEnable
  2663  0397                     u957:
  2664  0397  0BF0               	decfsz	??_ToggleEnable,f
  2665  0398  2B97               	goto	u957
  2666  0399                     l1073:
  2667                           
  2668                           ;LCD_Main.c: 86: PORTCbits.RC5 = 1;
  2669  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2670  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2671  039B  1687               	bsf	7,5	;volatile
  2672                           
  2673                           ;LCD_Main.c: 87: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2674  039C  3003               	movlw	3
  2675  039D  00F0               	movwf	??_ToggleEnable
  2676  039E                     u967:
  2677  039E  0BF0               	decfsz	??_ToggleEnable,f
  2678  039F  2B9E               	goto	u967
  2679  03A0                     l1075:
  2680                           
  2681                           ;LCD_Main.c: 88: PORTCbits.RC5 = 0;
  2682  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2683  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2684  03A2  1287               	bcf	7,5	;volatile
  2685                           
  2686                           ;LCD_Main.c: 89: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2687  03A3  3003               	movlw	3
  2688  03A4  00F0               	movwf	??_ToggleEnable
  2689  03A5                     u977:
  2690  03A5  0BF0               	decfsz	??_ToggleEnable,f
  2691  03A6  2BA5               	goto	u977
  2692  03A7                     l48:
  2693  03A7  0008               	return
  2694  03A8                     __end_of_ToggleEnable:
  2695                           
  2696                           	psect	text13
  2697  0411                     __ptext13:	
  2698 ;; *************** function _ADC_Read *****************
  2699 ;; Defined at:
  2700 ;;		line 209 in file "LCD_Main.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  channel         1    wreg     unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  channel         1    4[COMMON] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  2    0[COMMON] unsigned int 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2714 ;;      Params:         2       0       0       0
  2715 ;;      Locals:         1       0       0       0
  2716 ;;      Temps:          2       0       0       0
  2717 ;;      Totals:         5       0       0       0
  2718 ;;Total ram usage:        5 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727  0411                     _ADC_Read:	
  2728                           ;psect for function _ADC_Read
  2729                           
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2733                           ;ADC_Read@channel stored from wreg
  2734  0411  00F4               	movwf	ADC_Read@channel
  2735  0412                     l1257:
  2736                           
  2737                           ;LCD_Main.c: 209: unsigned int ADC_Read(unsigned char channel);LCD_Main.c: 211: {;LCD_Ma
      +                          in.c: 213:   ADCON0 &= 0x11000101;
  2738  0412  3001               	movlw	1
  2739  0413  00F2               	movwf	??_ADC_Read
  2740  0414  0872               	movf	??_ADC_Read,w
  2741  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0417  059F               	andwf	31,f	;volatile
  2744                           
  2745                           ;LCD_Main.c: 215:   ADCON0 |= channel<<3;
  2746  0418  0874               	movf	ADC_Read@channel,w	;volatile
  2747  0419  00F2               	movwf	??_ADC_Read
  2748  041A  3002               	movlw	2
  2749  041B                     u715:
  2750  041B  1003               	clrc
  2751  041C  0DF2               	rlf	??_ADC_Read,f
  2752  041D  3EFF               	addlw	-1
  2753  041E  1D03               	skipz
  2754  041F  2C1B               	goto	u715
  2755  0420  1003               	clrc
  2756  0421  0D72               	rlf	??_ADC_Read,w
  2757  0422  00F3               	movwf	??_ADC_Read+1
  2758  0423  0873               	movf	??_ADC_Read+1,w
  2759  0424  049F               	iorwf	31,f	;volatile
  2760  0425                     l1259:
  2761                           
  2762                           ;LCD_Main.c: 217:   _delay((unsigned long)((2)*(4194304/4000.0)));
  2763  0425  3003               	movlw	3
  2764  0426  00F3               	movwf	??_ADC_Read+1
  2765  0427  30B8               	movlw	184
  2766  0428  00F2               	movwf	??_ADC_Read
  2767  0429                     u987:
  2768  0429  0BF2               	decfsz	??_ADC_Read,f
  2769  042A  2C29               	goto	u987
  2770  042B  0BF3               	decfsz	??_ADC_Read+1,f
  2771  042C  2C29               	goto	u987
  2772  042D                     l1261:
  2773                           
  2774                           ;LCD_Main.c: 219:   GO_nDONE = 1;
  2775  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2776  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2777  042F  149F               	bsf	31,1	;volatile
  2778  0430                     l87:	
  2779                           ;LCD_Main.c: 221:   while(GO_nDONE);
  2780                           
  2781  0430  189F               	btfsc	31,1	;volatile
  2782  0431  2C33               	goto	u721
  2783  0432  2C34               	goto	u720
  2784  0433                     u721:
  2785  0433  2C30               	goto	l87
  2786  0434                     u720:
  2787  0434                     l1263:
  2788                           
  2789                           ;LCD_Main.c: 223:   return ((ADRESH<<8)+ADRESL);
  2790  0434  081E               	movf	30,w	;volatile
  2791  0435  00F1               	movwf	?_ADC_Read+1
  2792  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2794  0438  081E               	movf	30,w	;volatile
  2795  0439  00F0               	movwf	?_ADC_Read
  2796  043A                     l90:
  2797  043A  0008               	return
  2798  043B                     __end_of_ADC_Read:
  2799                           
  2800                           	psect	text14
  2801  0368                     __ptext14:	
  2802 ;; *************** function _ADC_Initialize *****************
  2803 ;; Defined at:
  2804 ;;		line 200 in file "LCD_Main.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2818 ;;      Params:         0       0       0       0
  2819 ;;      Locals:         0       0       0       0
  2820 ;;      Temps:          0       0       0       0
  2821 ;;      Totals:         0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831  0368                     _ADC_Initialize:	
  2832                           ;psect for function _ADC_Initialize
  2833                           
  2834  0368                     l1251:	
  2835                           ;incstack = 0
  2836                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2837                           
  2838                           
  2839                           ;LCD_Main.c: 202:   ANSELH = 0x00;
  2840  0368  1683               	bsf	3,5	;RP0=1, select bank3
  2841  0369  1703               	bsf	3,6	;RP1=1, select bank3
  2842  036A  0189               	clrf	9	;volatile
  2843  036B                     l1253:
  2844                           
  2845                           ;LCD_Main.c: 203:   ADCON0 = 0b01000001;
  2846  036B  3041               	movlw	65
  2847  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2848  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2849  036E  009F               	movwf	31	;volatile
  2850  036F                     l1255:
  2851                           
  2852                           ;LCD_Main.c: 205:   ADCON1 = 0b11000000;
  2853  036F  30C0               	movlw	192
  2854  0370  1683               	bsf	3,5	;RP0=1, select bank1
  2855  0371  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0372  009F               	movwf	31	;volatile
  2857  0373                     l84:
  2858  0373  0008               	return
  2859  0374                     __end_of_ADC_Initialize:
  2860  007E                     btemp	set	126	;btemp
  2861  007E                     wtemp0	set	126
  2862                           
  2863                           	psect	idloc
  2864                           
  2865                           ;Config register IDLOC0 @ 0x2000
  2866                           ;	unspecified, using default values
  2867  2000                     	org	8192
  2868  2000  3FFF               	dw	16383
  2869                           
  2870                           ;Config register IDLOC1 @ 0x2001
  2871                           ;	unspecified, using default values
  2872  2001                     	org	8193
  2873  2001  3FFF               	dw	16383
  2874                           
  2875                           ;Config register IDLOC2 @ 0x2002
  2876                           ;	unspecified, using default values
  2877  2002                     	org	8194
  2878  2002  3FFF               	dw	16383
  2879                           
  2880                           ;Config register IDLOC3 @ 0x2003
  2881                           ;	unspecified, using default values
  2882  2003                     	org	8195
  2883  2003  3FFF               	dw	16383
  2884                           
  2885                           	psect	config
  2886                           
  2887                           ;Config register CONFIG1 @ 0x2007
  2888                           ;	Oscillator Selection bits
  2889                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2890                           ;	Watchdog Timer Enable bit
  2891                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2892                           ;	Power-up Timer Enable bit
  2893                           ;	PWRTE = ON, PWRT enabled
  2894                           ;	RE3/MCLR pin function select bit
  2895                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2896                           ;	Code Protection bit
  2897                           ;	CP = OFF, Program memory code protection is disabled
  2898                           ;	Data Code Protection bit
  2899                           ;	CPD = OFF, Data memory code protection is disabled
  2900                           ;	Brown Out Reset Selection bits
  2901                           ;	BOREN = ON, BOR enabled
  2902                           ;	Internal External Switchover bit
  2903                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2904                           ;	Fail-Safe Clock Monitor Enabled bit
  2905                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2906                           ;	Low Voltage Programming Enable bit
  2907                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2908                           ;	In-Circuit Debugger Mode bit
  2909                           ;	DEBUG = 0x1, unprogrammed default
  2910  2007                     	org	8199
  2911  2007  23E1               	dw	9185
  2912                           
  2913                           ;Config register CONFIG2 @ 0x2008
  2914                           ;	Brown-out Reset Selection bit
  2915                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2916                           ;	Flash Program Memory Self Write Enable bits
  2917                           ;	WRT = OFF, Write protection off
  2918  2008                     	org	8200
  2919  2008  3FFF               	dw	16383

Data Sizes:
    Strings     98
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      37
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[14]), main@iTime(BANK0[6]), STR_9(CODE[17]), STR_8(CODE[15]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[6]), STR_4(CODE[16]), 
		 -> STR_3(CODE[15]), main@ExpTime(BANK0[6]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDWriteNibble->_ToggleEnable

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    6569
                                              9 BANK0     28    28      0
                     _ADC_Initialize
                           _ADC_Read
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                               _itoa
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     281
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2167
                                             13 COMMON     1     1      0
                                              4 BANK0      5     1      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     372
                                              6 COMMON     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            4     2      2    1526
                                              6 COMMON     4     2      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1    1266
                                              6 COMMON     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     350
                                              1 COMMON     2     1      1
                       _ToggleEnable
 ---------------------------------------------------------------------------------
 (4) _ToggleEnable                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
         _ToggleEnable
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     25      25       3       46.2%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 30 21:49:42 2022

         _LCD_Initialize 043B                        pc 0002                       l51 04DE  
            ?_LCDPutChar 0070                       l52 04E3                       l53 04E8  
                     l45 0465                       l62 0394                       l55 04FB  
                     l71 0410                       l48 03A7                       l56 0500  
                     l57 0505                       l65 0383                       l90 043A  
                     l59 050D                       l84 0373                       l77 0491  
                     l87 0430              main@ExpTime 0039                       fsr 0004  
                    l104 07F7                      l107 07EF                      l651 03EB  
                    l469 0551                      l479 04CB                      l657 05A6  
                    l665 03C7                      l659 05BD                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RC4 003C                      u500 0509                      u501 0508  
                    u430 04DD                      u510 0516                      u431 04DC  
                    u511 0515                      u440 04E2                      u600 04AA  
                    u441 04E1                      u601 04A9                      u450 04E7  
                    u530 0528                      u610 04B4                      u451 04E6  
                    u531 0527                      u611 04B3                      u460 04EC  
                    u700 0479                      u461 04EB                      u701 0478  
                    u525 051A                      u470 04FA                      u550 0539  
                    u630 04C7                      u471 04F9                      u551 0538  
                    u631 04C6                      u615 04B0                      u720 0434  
                    u480 04FF                      u640 0574                      u800 06AB  
                    u721 0433                      u481 04FE                      u545 0529  
                    u625 04BB                      u641 0573                      u801 06AA  
                    u490 0504                      u570 054D                      u650 05A2  
                    u730 03CF                      u810 06FA                      u715 041B  
                    u491 0503                      u571 054C                      u555 0535  
                    u651 05A1                      u731 03CE                      u811 06F9  
                    u580 0498                      u660 05B9                      u740 03C7  
                    u820 0709                      u565 0541                      u581 0497  
                    u661 05B8                      u741 03C6                      u821 0708  
                    u805 06A7                      u670 0410                      u830 077A  
                    u750 0619                      u671 040F                      u831 0779  
                    u815 06F6                      u751 0618                      u680 046D  
                    u840 07EF                      u760 0628                      u681 046C  
                    u841 07EE                      u825 0705                      u761 0627  
                    u690 0473                      u770 063D                      u691 0472  
                    u595 049C                      u907 07AC                      u835 0776  
                    u771 063C                      u755 0615                      u780 0687  
                    u917 0448                      u845 07EB                      u781 0686  
                    u765 0624                      u790 0696                      u927 0389  
                    u791 0695                      u775 0639                      u937 048C  
                    u785 0683                      u857 05E9                      u947 0379  
                    u795 0692                      u867 0670                      u957 0397  
                    u877 06DE                      u967 039E                      u887 0721  
                    u977 03A5                      u897 075F                      u987 0429  
                    fsr0 0004                      indf 0000          __end_of_LCDGoto 0492  
                   l1101 04F0                     l1111 04FA                     l1103 04F3  
                   l1113 04FF                     l1105 04F4                     l1121 050E  
                   l1201 05B3                     l1115 0504                     l1107 04F5  
                   l1211 0440                     l1131 0524                     l1123 0510  
                   l1203 05B9                     l1117 0509                     l1109 04F6  
                   l1221 0455                     l1213 0443                     l1141 0547  
                   l1133 0528                     l1125 0516                     l1301 05DA  
                   l1071 0395                     l1119 050A                     l1231 03EE  
                   l1223 0459                     l1215 0444                     l1207 043B  
                   l1135 0539                     l1127 0519                     l1143 054D  
                   l1151 049B                     l1311 060A                     l1303 05E1  
                   l1073 0399                     l1081 04D5                     l1241 0474  
                   l1233 03FB                     l1225 045D                     l1217 044D  
                   l1209 043E                     l1137 053F                     l1129 0520  
                   l1161 04BA                     l1153 04A2                     l1401 07A1  
                   l1321 0643                     l1313 0619                     l1305 05F0  
                   l1251 0368                     l1075 03A0                     l1091 04DD  
                   l1083 04D6                     l1171 037E                     l1243 0479  
                   l1235 03FF                     l1227 0461                     l1219 0451  
                   l1139 0540                     l1163 04C1                     l1155 04A6  
                   l1147 0492                     l1411 07D2                     l1403 07A4  
                   l1331 0668                     l1323 0651                     l1315 0628  
                   l1307 05F4                     l1253 036B                     l1261 042D  
                   l1093 04E2                     l1085 04D7                     l1077 04CD  
                   l1245 047F                     l1237 0467                     l1173 0385  
                   l1229 03EC                     l1157 04AA                     l1149 0498  
                   l1165 04C7                     l1181 056A                     l1413 07D9  
                   l1405 07B3                     l1341 06AB                     l1325 0656  
                   l1317 0630                     l1333 0678                     l1309 05FE  
                   l1255 036F                     l1263 0434                     l1095 04E7  
                   l1087 04D8                     l1079 04D4                     l1247 0484  
                   l1239 046D                     l1175 038E                     l1159 04B4  
                   l1191 058B                     l1183 056E                     l1271 03CF  
                   l1407 07C5                     l1415 07E1                     l1351 06D2  
                   l1343 06B1                     l1335 0687                     l1327 065D  
                   l1319 063D                     l1257 0412                     l1097 04EC  
                   l1089 04D9                     l1169 0375                     l1249 0488  
                   l1193 059A                     l1185 0574                     l1177 0555  
                   l1273 03D6                     l1281 03A9                     l1417 07F2  
                   l1409 07CB                     l1361 0709                     l1353 06D6  
                   l1345 06BF                     l1337 0696                     l1329 0664  
                   l1259 0425                     l1099 04ED                     l1195 05A2  
                   l1187 0578                     l1179 0559                     l1275 03DA  
                   l1267 03CB                     l1283 03AE                     l1371 0739  
                   l1363 0712                     l1355 06E5                     l1347 06C4  
                   l1339 069E                     l1291 05C1                     l1197 05AA  
                   l1189 057A                     l1277 03DF                     l1269 03CB  
                   l1285 03B5                     l1381 0757                     l1373 073F  
                   l1365 0719                     l1349 06CB                     l1357 06EB  
                   l1293 05C5                     l1199 05B1                     l1287 03B9  
                   l1391 0786                     l1383 0766                     l1375 0743  
                   l1367 0728                     l1359 06FA                     l1295 05C8  
                   l1393 0793                     l1377 074A                     l1369 072E  
                   l1385 076B                     l1297 05CD                     l1289 05BE  
                   l1395 079A                     l1387 077A                     l1379 0750  
                   l1299 05D4                     l1397 079E                     l1389 077F  
                   l1399 07A1                     STR_1 0042                     STR_2 0033  
                   STR_3 0051                     STR_4 0023                     STR_5 006E  
                   STR_6 0042                     STR_7 0033                     STR_8 0051  
                   STR_9 0012                     _main 05BE                     _itoa 03C8  
                   btemp 007E                     _utoa 0552         __end_of_ADC_Read 043B  
                   start 0000   __end_of_LCD_Initialize 0466              LCDPutCmd@ch 0075  
                  ?_main 0070                    ?_itoa 0024                    STR_10 0060  
                  ?_utoa 0078          __end_of___lwdiv 0552          __end_of___lwmod 04CC  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    main@i 003F                    pclath 000A  
                  utoa@c 0022                    utoa@v 0020                    status 0003  
                  wtemp0 007E          ?_LCD_Initialize 0070          __initialization 07FD  
           __end_of_main 07FD             __end_of_itoa 03EC             __end_of_utoa 05BE  
                 ??_main 0029                   ??_itoa 007D                   ??_utoa 007C  
              ??_LCDGoto 0077        __end_of_LCDPutCmd 0384             LCDPutChar@ch 0075  
      __end_of_LCDPutStr 0411                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
           LCDPutStr@str 0076           _LCDWriteNibble 04CC                ??___lwdiv 0074  
              ??___lwmod 0074          ADC_Read@channel 0074                   _memset 03A8  
              ?_ADC_Read 0070   __end_of_LCDWriteNibble 050E  __end_of__initialization 07FD  
              LCDGoto@ln 0076           __pcstackCOMMON 0070             ??_LCDPutChar 0073  
             ??_ADC_Read 0072          ?_LCDWriteNibble 0071       __end_of_LCDPutChar 0395  
             __pmaintext 05BE                  ?_memset 0070                  _LCDGoto 0466  
             __stringtab 0002         ??_LCD_Initialize 0076                  ___lwdiv 050E  
                ___lwmod 0492                  __ptext1 03A8                  __ptext2 03C8  
                __ptext3 0552                  __ptext4 0492                  __ptext5 050E  
                __ptext6 043B                  __ptext7 03EC                  __ptext8 0384  
                __ptext9 0466            ?_ToggleEnable 0070                _LCDPutCmd 0374  
                main@adc 0043                _LCDPutStr 03EC     end_of_initialization 07FD  
                itoa@buf 0028                  memset@c 0070                  itoa@val 0024  
                memset@n 0072                  memset@p 0076                  utoa@buf 0023  
                utoa@val 0078           ??_ToggleEnable 0070                _PORTBbits 0006  
              _PORTCbits 0007               main@Buffer 002C               ?_LCDPutCmd 0070  
             ?_LCDPutStr 0076               LCDGoto@pos 007B               LCDPutStr@i 0079  
         _ADC_Initialize 0368           __end_of_memset 03C8         main@ExposureTime 0041  
    start_initialization 07FD         ??_LCDWriteNibble 0072   __end_of_ADC_Initialize 0374  
               ??_memset 0074                 ?_LCDGoto 0076                ___latbits 0001  
          __pcstackBANK0 0020              ??_LCDPutCmd 0073              ??_LCDPutStr 0078  
   __end_of_ToggleEnable 03A8         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0070          ?_ADC_Initialize 0070         LCDWriteNibble@ch 0072  
       LCDWriteNibble@rs 0071                __pstrings 0002                 _ADC_Read 0411  
       ___lwdiv@quotient 0075              _LCDGoto$138 0079                 _GO_nDONE 00F9  
            __stringbase 0011                main@iTime 0033       __end_of__stringtab 0012  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0374  
               __ptext11 04CC                 __ptext12 0395                 __ptext13 0411  
               __ptext14 0368               _LCDPutChar 0384             _ToggleEnable 0395  
               itoa@base 0026                 memset@p1 0075         ___lwmod@dividend 0072  
       ??_ADC_Initialize 0070                stringcode 000C                 utoa@base 007A  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 000C  
               stringtab 0002  
