

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jun 04 15:54:55 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F883 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  001E                     _ADRESH	set	30
   215  001F                     _ADCON0	set	31
   216  0006                     _PORTBbits	set	6
   217  0007                     _PORTCbits	set	7
   218  0007                     _PORTC	set	7
   219  0006                     _PORTB	set	6
   220  003C                     _RC4	set	60
   221  00F9                     _GO_nDONE	set	249
   222  0033                     _RB3	set	51
   223  0032                     _RB2	set	50
   224  0031                     _RB1	set	49
   225  0030                     _RB0	set	48
   226  009E                     _ADRESL	set	158
   227  009F                     _ADCON1	set	159
   228  0087                     _TRISC	set	135
   229  0086                     _TRISB	set	134
   230  0189                     _ANSELH	set	393
   231                           
   232                           	psect	strings
   233  0002                     __pstrings:
   234  0002                     stringtab:
   235  0002                     __stringtab:
   236                           
   237                           ;	String table - string pointers are 1 byte each
   238  0002  1BFF               	btfsc	btemp+1,7
   239  0003  280C               	ljmp	stringcode
   240  0004  1383               	bcf	3,7
   241  0005  187F               	btfsc	btemp+1,0
   242  0006  1783               	bsf	3,7
   243  0007  0800               	movf	0,w
   244  0008  0A84               	incf	4,f
   245  0009  1903               	skipnz
   246  000A  0AFF               	incf	btemp+1,f
   247  000B  0008               	return
   248  000C                     stringcode:
   249  000C                     stringdir:
   250  000C  3000               	movlw	high stringdir
   251  000D  008A               	movwf	10
   252  000E  0804               	movf	4,w
   253  000F  0A84               	incf	4,f
   254  0010  0782               	addwf	2,f
   255  0011                     __stringbase:
   256  0011  3400               	retlw	0
   257  0012                     __end_of__stringtab:
   258  0012                     STR_9:
   259  0012  3420               	retlw	32	;' '
   260  0013  3420               	retlw	32	;' '
   261  0014  3420               	retlw	32	;' '
   262  0015  3420               	retlw	32	;' '
   263  0016  3420               	retlw	32	;' '
   264  0017  3420               	retlw	32	;' '
   265  0018  3420               	retlw	32	;' '
   266  0019  3420               	retlw	32	;' '
   267  001A  3420               	retlw	32	;' '
   268  001B  3420               	retlw	32	;' '
   269  001C  3420               	retlw	32	;' '
   270  001D  3420               	retlw	32	;' '
   271  001E  3420               	retlw	32	;' '
   272  001F  3420               	retlw	32	;' '
   273  0020  3420               	retlw	32	;' '
   274  0021  3420               	retlw	32	;' '
   275  0022  3400               	retlw	0
   276  0023                     STR_4:
   277  0023  3420               	retlw	32	;' '
   278  0024  3473               	retlw	115	;'s'
   279  0025  3465               	retlw	101	;'e'
   280  0026  3463               	retlw	99	;'c'
   281  0027  3420               	retlw	32	;' '
   282  0028  3465               	retlw	101	;'e'
   283  0029  3478               	retlw	120	;'x'
   284  002A  3470               	retlw	112	;'p'
   285  002B  346F               	retlw	111	;'o'
   286  002C  3473               	retlw	115	;'s'
   287  002D  3475               	retlw	117	;'u'
   288  002E  3472               	retlw	114	;'r'
   289  002F  3465               	retlw	101	;'e'
   290  0030  3420               	retlw	32	;' '
   291  0031  3420               	retlw	32	;' '
   292  0032  3400               	retlw	0
   293  0033                     STR_2:
   294  0033  3420               	retlw	32	;' '
   295  0034  3420               	retlw	32	;' '
   296  0035  3420               	retlw	32	;' '
   297  0036  3420               	retlw	32	;' '
   298  0037  3454               	retlw	84	;'T'
   299  0038  3449               	retlw	73	;'I'
   300  0039  344D               	retlw	77	;'M'
   301  003A  3445               	retlw	69	;'E'
   302  003B  3452               	retlw	82	;'R'
   303  003C  3420               	retlw	32	;' '
   304  003D  3456               	retlw	86	;'V'
   305  003E  3431               	retlw	49	;'1'
   306  003F  3420               	retlw	32	;' '
   307  0040  3420               	retlw	32	;' '
   308  0041  3400               	retlw	0
   309  0042                     STR_1:
   310  0042  3420               	retlw	32	;' '
   311  0043  3420               	retlw	32	;' '
   312  0044  3420               	retlw	32	;' '
   313  0045  3420               	retlw	32	;' '
   314  0046  3445               	retlw	69	;'E'
   315  0047  344E               	retlw	78	;'N'
   316  0048  344C               	retlw	76	;'L'
   317  0049  3441               	retlw	65	;'A'
   318  004A  3452               	retlw	82	;'R'
   319  004B  3447               	retlw	71	;'G'
   320  004C  3445               	retlw	69	;'E'
   321  004D  3452               	retlw	82	;'R'
   322  004E  3420               	retlw	32	;' '
   323  004F  3420               	retlw	32	;' '
   324  0050  3400               	retlw	0
   325  0051                     STR_3:
   326  0051  3420               	retlw	32	;' '
   327  0052  3473               	retlw	115	;'s'
   328  0053  3465               	retlw	101	;'e'
   329  0054  3463               	retlw	99	;'c'
   330  0055  3420               	retlw	32	;' '
   331  0056  3465               	retlw	101	;'e'
   332  0057  3478               	retlw	120	;'x'
   333  0058  3470               	retlw	112	;'p'
   334  0059  346F               	retlw	111	;'o'
   335  005A  3473               	retlw	115	;'s'
   336  005B  3475               	retlw	117	;'u'
   337  005C  3472               	retlw	114	;'r'
   338  005D  3465               	retlw	101	;'e'
   339  005E  3420               	retlw	32	;' '
   340  005F  3400               	retlw	0
   341  0060                     STR_10:
   342  0060  3420               	retlw	32	;' '
   343  0061  3473               	retlw	115	;'s'
   344  0062  3465               	retlw	101	;'e'
   345  0063  3463               	retlw	99	;'c'
   346  0064  3420               	retlw	32	;' '
   347  0065  346C               	retlw	108	;'l'
   348  0066  3461               	retlw	97	;'a'
   349  0067  3473               	retlw	115	;'s'
   350  0068  3474               	retlw	116	;'t'
   351  0069  3420               	retlw	32	;' '
   352  006A  3465               	retlw	101	;'e'
   353  006B  3478               	retlw	120	;'x'
   354  006C  3470               	retlw	112	;'p'
   355  006D  3400               	retlw	0
   356  006E                     STR_5:
   357  006E  3452               	retlw	82	;'R'
   358  006F  3445               	retlw	69	;'E'
   359  0070  3453               	retlw	83	;'S'
   360  0071  3445               	retlw	69	;'E'
   361  0072  3454               	retlw	84	;'T'
   362  0073  3400               	retlw	0
   363  0033                     
   364                           	psect	cinit
   365  07FD                     start_initialization:	
   366                           ; #config settings
   367                           
   368  07FD                     __initialization:
   369  07FD                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  07FD                     __end_of__initialization:
   373  07FD  0183               	clrf	3
   374  07FE  118A  2DAF         	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	cstackCOMMON
   377  0070                     __pcstackCOMMON:
   378  0070                     ?_LCDPutCmd:
   379  0070                     ?_memset:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_LCD_Initialize:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_ToggleEnable:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_ToggleEnable:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_LCDPutChar:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_ADC_Initialize:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_ADC_Initialize:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_main:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_ADC_Read:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?___lwdiv:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     ?___lwmod:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0070                     ___lwdiv@divisor:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  0070                     ___lwmod@divisor:	
   416                           ; 2 bytes @ 0x0
   417                           
   418  0070                     memset@c:	
   419                           ; 2 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423  0070                     	ds	1
   424  0071                     ?_LCDWriteNibble:
   425  0071                     LCDWriteNibble@rs:	
   426                           ; 1 bytes @ 0x1
   427                           
   428                           
   429                           ; 1 bytes @ 0x1
   430  0071                     	ds	1
   431  0072                     ??_LCDWriteNibble:
   432  0072                     ??_ADC_Read:	
   433                           ; 1 bytes @ 0x2
   434                           
   435  0072                     LCDWriteNibble@ch:	
   436                           ; 1 bytes @ 0x2
   437                           
   438  0072                     ___lwdiv@dividend:	
   439                           ; 1 bytes @ 0x2
   440                           
   441  0072                     ___lwmod@dividend:	
   442                           ; 2 bytes @ 0x2
   443                           
   444  0072                     memset@n:	
   445                           ; 2 bytes @ 0x2
   446                           
   447                           
   448                           ; 2 bytes @ 0x2
   449  0072                     	ds	1
   450  0073                     ??_LCDPutCmd:
   451  0073                     ??_LCDPutChar:	
   452                           ; 1 bytes @ 0x3
   453                           
   454                           
   455                           ; 1 bytes @ 0x3
   456  0073                     	ds	1
   457  0074                     ??_memset:
   458  0074                     ??___lwdiv:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     ??___lwmod:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ADC_Read@channel:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 1 bytes @ 0x4
   469  0074                     	ds	1
   470  0075                     LCDPutChar@ch:
   471  0075                     LCDPutCmd@ch:	
   472                           ; 1 bytes @ 0x5
   473                           
   474  0075                     ___lwmod@counter:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0075                     memset@p1:	
   478                           ; 1 bytes @ 0x5
   479                           
   480  0075                     ___lwdiv@quotient:	
   481                           ; 1 bytes @ 0x5
   482                           
   483                           
   484                           ; 2 bytes @ 0x5
   485  0075                     	ds	1
   486  0076                     ??_LCD_Initialize:
   487  0076                     ?_LCDPutStr:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     ?_LCDGoto:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0076                     LCDGoto@ln:	
   494                           ; 1 bytes @ 0x6
   495                           
   496  0076                     memset@p:	
   497                           ; 1 bytes @ 0x6
   498                           
   499  0076                     LCDPutStr@str:	
   500                           ; 1 bytes @ 0x6
   501                           
   502                           
   503                           ; 2 bytes @ 0x6
   504  0076                     	ds	1
   505  0077                     ??_LCDGoto:
   506  0077                     ___lwdiv@counter:	
   507                           ; 1 bytes @ 0x7
   508                           
   509                           
   510                           ; 1 bytes @ 0x7
   511  0077                     	ds	1
   512  0078                     ?_utoa:
   513  0078                     ??_LCDPutStr:	
   514                           ; 1 bytes @ 0x8
   515                           
   516  0078                     utoa@val:	
   517                           ; 1 bytes @ 0x8
   518                           
   519                           
   520                           ; 2 bytes @ 0x8
   521  0078                     	ds	1
   522  0079                     LCDPutStr@i:
   523  0079                     _LCDGoto$138:	
   524                           ; 1 bytes @ 0x9
   525                           
   526                           
   527                           ; 2 bytes @ 0x9
   528  0079                     	ds	1
   529  007A                     utoa@base:
   530                           
   531                           ; 2 bytes @ 0xA
   532  007A                     	ds	1
   533  007B                     LCDGoto@pos:
   534                           
   535                           ; 1 bytes @ 0xB
   536  007B                     	ds	1
   537  007C                     ??_utoa:
   538                           
   539                           ; 1 bytes @ 0xC
   540  007C                     	ds	1
   541  007D                     ??_itoa:
   542                           
   543                           ; 1 bytes @ 0xD
   544  007D                     	ds	1
   545                           
   546                           	psect	cstackBANK0
   547  0020                     __pcstackBANK0:
   548  0020                     utoa@v:
   549                           
   550                           ; 2 bytes @ 0x0
   551  0020                     	ds	2
   552  0022                     utoa@c:
   553                           
   554                           ; 1 bytes @ 0x2
   555  0022                     	ds	1
   556  0023                     utoa@buf:
   557                           
   558                           ; 1 bytes @ 0x3
   559  0023                     	ds	1
   560  0024                     ?_itoa:
   561  0024                     itoa@val:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 2 bytes @ 0x4
   566  0024                     	ds	2
   567  0026                     itoa@base:
   568                           
   569                           ; 2 bytes @ 0x6
   570  0026                     	ds	2
   571  0028                     itoa@buf:
   572                           
   573                           ; 1 bytes @ 0x8
   574  0028                     	ds	1
   575  0029                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x9
   578  0029                     	ds	3
   579  002C                     main@Buffer:
   580                           
   581                           ; 7 bytes @ 0xC
   582  002C                     	ds	7
   583  0033                     main@iTime:
   584                           
   585                           ; 6 bytes @ 0x13
   586  0033                     	ds	6
   587  0039                     main@ExpTime:
   588                           
   589                           ; 6 bytes @ 0x19
   590  0039                     	ds	6
   591  003F                     main@i:
   592                           
   593                           ; 2 bytes @ 0x1F
   594  003F                     	ds	2
   595  0041                     main@ExposureTime:
   596                           
   597                           ; 2 bytes @ 0x21
   598  0041                     	ds	2
   599  0043                     main@adc:
   600                           
   601                           ; 2 bytes @ 0x23
   602  0043                     	ds	2
   603                           
   604                           	psect	maintext
   605  05AF                     __pmaintext:	
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 228 in file "LCD_Main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  Buffer          7   12[BANK0 ] unsigned char [7]
   616 ;;  ExpTime         6   25[BANK0 ] unsigned char [6]
   617 ;;  iTime           6   19[BANK0 ] unsigned char [6]
   618 ;;  adc             2   35[BANK0 ] int 
   619 ;;  ExposureTime    2   33[BANK0 ] int 
   620 ;;  i               2   31[BANK0 ] int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   630 ;;      Params:         0       0       0       0
   631 ;;      Locals:         0      25       0       0
   632 ;;      Temps:          0       3       0       0
   633 ;;      Totals:         0      28       0       0
   634 ;;Total ram usage:       28 bytes
   635 ;; Hardware stack levels required when called: 4
   636 ;; This function calls:
   637 ;;		_ADC_Initialize
   638 ;;		_ADC_Read
   639 ;;		_LCDGoto
   640 ;;		_LCDPutCmd
   641 ;;		_LCDPutStr
   642 ;;		_LCD_Initialize
   643 ;;		_itoa
   644 ;;		_memset
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650  05AF                     _main:	
   651                           ;psect for function _main
   652                           
   653  05AF                     l1291:	
   654                           ;incstack = 0
   655                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   656                           
   657                           
   658                           ;LCD_Main.c: 230: ADC_Initialize();
   659  05AF  118A  2359  118A   	fcall	_ADC_Initialize
   660  05B2                     l1293:
   661                           
   662                           ;LCD_Main.c: 231: int adc;;LCD_Main.c: 232: int ExposureTime = 1;
   663  05B2  3001               	movlw	1
   664  05B3  1283               	bcf	3,5	;RP0=0, select bank0
   665  05B4  1303               	bcf	3,6	;RP1=0, select bank0
   666  05B5  00C1               	movwf	main@ExposureTime
   667  05B6  3000               	movlw	0
   668  05B7  00C2               	movwf	main@ExposureTime+1
   669  05B8                     l1295:
   670                           
   671                           ;LCD_Main.c: 233: LCD_Initialize();
   672  05B8  118A  242C  118A   	fcall	_LCD_Initialize
   673  05BB                     l1297:
   674                           
   675                           ;LCD_Main.c: 234: int i;;LCD_Main.c: 235: char Buffer[7];;LCD_Main.c: 236: char ExpTime[
      +                          6];;LCD_Main.c: 237: char iTime[6];;LCD_Main.c: 240: LCDGoto(0,0);
   676  05BB  01F6               	clrf	LCDGoto@ln
   677  05BC  3000               	movlw	0
   678  05BD  118A  2457  118A   	fcall	_LCDGoto
   679  05C0                     l1299:
   680                           
   681                           ;LCD_Main.c: 241: LCDPutStr("    ENLARGER  ");
   682  05C0  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   683  05C1  00F6               	movwf	LCDPutStr@str
   684  05C2  3080               	movlw	128
   685  05C3  00F7               	movwf	LCDPutStr@str+1
   686  05C4  118A  23DD  118A   	fcall	_LCDPutStr
   687  05C7                     l1301:
   688                           
   689                           ;LCD_Main.c: 242: LCDGoto(0,1);
   690  05C7  01F6               	clrf	LCDGoto@ln
   691  05C8  0AF6               	incf	LCDGoto@ln,f
   692  05C9  3000               	movlw	0
   693  05CA  118A  2457  118A   	fcall	_LCDGoto
   694  05CD                     l1303:
   695                           
   696                           ;LCD_Main.c: 243: LCDPutStr("    TIMER V1  ");
   697  05CD  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   698  05CE  00F6               	movwf	LCDPutStr@str
   699  05CF  3080               	movlw	128
   700  05D0  00F7               	movwf	LCDPutStr@str+1
   701  05D1  118A  23DD  118A   	fcall	_LCDPutStr
   702                           
   703                           ;LCD_Main.c: 244: _delay((unsigned long)((4000)*(4194304/4000.0)));
   704  05D4  3016               	movlw	22
   705  05D5  1283               	bcf	3,5	;RP0=0, select bank0
   706  05D6  1303               	bcf	3,6	;RP1=0, select bank0
   707  05D7  00AB               	movwf	??_main+2
   708  05D8  3048               	movlw	72
   709  05D9  00AA               	movwf	??_main+1
   710  05DA  3014               	movlw	20
   711  05DB  00A9               	movwf	??_main
   712  05DC                     u857:
   713  05DC  0BA9               	decfsz	??_main,f
   714  05DD  2DDC               	goto	u857
   715  05DE  0BAA               	decfsz	??_main+1,f
   716  05DF  2DDC               	goto	u857
   717  05E0  0BAB               	decfsz	??_main+2,f
   718  05E1  2DDC               	goto	u857
   719  05E2  2DE3               	nop2
   720  05E3                     l1305:
   721                           
   722                           ;LCD_Main.c: 245: LCDPutCmd(0x01);
   723  05E3  3001               	movlw	1
   724  05E4  118A  2365  118A   	fcall	_LCDPutCmd
   725  05E7                     l1307:
   726                           
   727                           ;LCD_Main.c: 248:   {;LCD_Main.c: 249:     adc = (ADC_Read(0));
   728  05E7  3000               	movlw	0
   729  05E8  118A  2402  118A   	fcall	_ADC_Read
   730  05EB  0871               	movf	?_ADC_Read+1,w
   731  05EC  1283               	bcf	3,5	;RP0=0, select bank0
   732  05ED  1303               	bcf	3,6	;RP1=0, select bank0
   733  05EE  00C4               	movwf	main@adc+1
   734  05EF  0870               	movf	?_ADC_Read,w
   735  05F0  00C3               	movwf	main@adc
   736  05F1                     l1309:
   737                           
   738                           ;LCD_Main.c: 252:     itoa(Buffer, adc, 10);
   739  05F1  0844               	movf	main@adc+1,w
   740  05F2  00A5               	movwf	itoa@val+1
   741  05F3  0843               	movf	main@adc,w
   742  05F4  00A4               	movwf	itoa@val
   743  05F5  300A               	movlw	10
   744  05F6  00A6               	movwf	itoa@base
   745  05F7  3000               	movlw	0
   746  05F8  00A7               	movwf	itoa@base+1
   747  05F9  302C               	movlw	(low (main@Buffer| 0))& (0+255)
   748  05FA  118A  23B9  118A   	fcall	_itoa
   749  05FD                     l1311:
   750                           
   751                           ;LCD_Main.c: 255:     if (adc > 700 & adc < 800)
   752  05FD  1283               	bcf	3,5	;RP0=0, select bank0
   753  05FE  1303               	bcf	3,6	;RP1=0, select bank0
   754  05FF  0844               	movf	main@adc+1,w
   755  0600  3A80               	xorlw	128
   756  0601  00FF               	movwf	btemp+1
   757  0602  3082               	movlw	130
   758  0603  027F               	subwf	btemp+1,w
   759  0604  1D03               	skipz
   760  0605  2E08               	goto	u755
   761  0606  30BD               	movlw	189
   762  0607  0243               	subwf	main@adc,w
   763  0608                     u755:
   764  0608  1C03               	skipc
   765  0609  2E0B               	goto	u751
   766  060A  2E0C               	goto	u750
   767  060B                     u751:
   768  060B  2E6B               	goto	l1333
   769  060C                     u750:
   770  060C                     l1313:
   771  060C  1283               	bcf	3,5	;RP0=0, select bank0
   772  060D  1303               	bcf	3,6	;RP1=0, select bank0
   773  060E  0844               	movf	main@adc+1,w
   774  060F  3A80               	xorlw	128
   775  0610  00FF               	movwf	btemp+1
   776  0611  3083               	movlw	131
   777  0612  027F               	subwf	btemp+1,w
   778  0613  1D03               	skipz
   779  0614  2E17               	goto	u765
   780  0615  3020               	movlw	32
   781  0616  0243               	subwf	main@adc,w
   782  0617                     u765:
   783  0617  1803               	skipnc
   784  0618  2E1A               	goto	u761
   785  0619  2E1B               	goto	u760
   786  061A                     u761:
   787  061A  2E6B               	goto	l1333
   788  061B                     u760:
   789  061B                     l1315:
   790                           
   791                           ;LCD_Main.c: 256:     {;LCD_Main.c: 257:         ExposureTime++;
   792  061B  3001               	movlw	1
   793  061C  1283               	bcf	3,5	;RP0=0, select bank0
   794  061D  1303               	bcf	3,6	;RP1=0, select bank0
   795  061E  07C1               	addwf	main@ExposureTime,f
   796  061F  1803               	skipnc
   797  0620  0AC2               	incf	main@ExposureTime+1,f
   798  0621  3000               	movlw	0
   799  0622  07C2               	addwf	main@ExposureTime+1,f
   800  0623                     l1317:
   801                           
   802                           ;LCD_Main.c: 258:         if (ExposureTime >99) ExposureTime = 99;
   803  0623  0842               	movf	main@ExposureTime+1,w
   804  0624  3A80               	xorlw	128
   805  0625  00FF               	movwf	btemp+1
   806  0626  3080               	movlw	128
   807  0627  027F               	subwf	btemp+1,w
   808  0628  1D03               	skipz
   809  0629  2E2C               	goto	u775
   810  062A  3064               	movlw	100
   811  062B  0241               	subwf	main@ExposureTime,w
   812  062C                     u775:
   813  062C  1C03               	skipc
   814  062D  2E2F               	goto	u771
   815  062E  2E30               	goto	u770
   816  062F                     u771:
   817  062F  2E36               	goto	l1321
   818  0630                     u770:
   819  0630                     l1319:
   820  0630  3063               	movlw	99
   821  0631  1283               	bcf	3,5	;RP0=0, select bank0
   822  0632  1303               	bcf	3,6	;RP1=0, select bank0
   823  0633  00C1               	movwf	main@ExposureTime
   824  0634  3000               	movlw	0
   825  0635  00C2               	movwf	main@ExposureTime+1
   826  0636                     l1321:
   827                           
   828                           ;LCD_Main.c: 259:         itoa(ExpTime, ExposureTime, 10);
   829  0636  1283               	bcf	3,5	;RP0=0, select bank0
   830  0637  1303               	bcf	3,6	;RP1=0, select bank0
   831  0638  0842               	movf	main@ExposureTime+1,w
   832  0639  00A5               	movwf	itoa@val+1
   833  063A  0841               	movf	main@ExposureTime,w
   834  063B  00A4               	movwf	itoa@val
   835  063C  300A               	movlw	10
   836  063D  00A6               	movwf	itoa@base
   837  063E  3000               	movlw	0
   838  063F  00A7               	movwf	itoa@base+1
   839  0640  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   840  0641  118A  23B9  118A   	fcall	_itoa
   841  0644                     l1323:
   842                           
   843                           ;LCD_Main.c: 260:         LCDGoto(0,0);
   844  0644  01F6               	clrf	LCDGoto@ln
   845  0645  3000               	movlw	0
   846  0646  118A  2457  118A   	fcall	_LCDGoto
   847  0649                     l1325:
   848                           
   849                           ;LCD_Main.c: 261:         LCDPutStr(ExpTime);
   850  0649  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   851  064A  00F6               	movwf	LCDPutStr@str
   852  064B  3000               	movlw	0
   853  064C  00F7               	movwf	LCDPutStr@str+1
   854  064D  118A  23DD  118A   	fcall	_LCDPutStr
   855  0650                     l1327:
   856                           
   857                           ;LCD_Main.c: 262:         LCDPutStr(" sec exposure ");
   858  0650  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   859  0651  00F6               	movwf	LCDPutStr@str
   860  0652  3080               	movlw	128
   861  0653  00F7               	movwf	LCDPutStr@str+1
   862  0654  118A  23DD  118A   	fcall	_LCDPutStr
   863  0657                     l1329:
   864                           
   865                           ;LCD_Main.c: 263:         LCDPutCmd(0x02);
   866  0657  3002               	movlw	2
   867  0658  118A  2365  118A   	fcall	_LCDPutCmd
   868  065B                     l1331:
   869                           
   870                           ;LCD_Main.c: 264:         _delay((unsigned long)((200)*(4194304/4000.0)));
   871  065B  3002               	movlw	2
   872  065C  1283               	bcf	3,5	;RP0=0, select bank0
   873  065D  1303               	bcf	3,6	;RP1=0, select bank0
   874  065E  00AB               	movwf	??_main+2
   875  065F  3011               	movlw	17
   876  0660  00AA               	movwf	??_main+1
   877  0661  3057               	movlw	87
   878  0662  00A9               	movwf	??_main
   879  0663                     u867:
   880  0663  0BA9               	decfsz	??_main,f
   881  0664  2E63               	goto	u867
   882  0665  0BAA               	decfsz	??_main+1,f
   883  0666  2E63               	goto	u867
   884  0667  0BAB               	decfsz	??_main+2,f
   885  0668  2E63               	goto	u867
   886  0669  2E6A               	nop2
   887                           
   888                           ;LCD_Main.c: 265:     }
   889  066A  2DE7               	goto	l1307
   890  066B                     l1333:
   891  066B  1283               	bcf	3,5	;RP0=0, select bank0
   892  066C  1303               	bcf	3,6	;RP1=0, select bank0
   893  066D  0844               	movf	main@adc+1,w
   894  066E  3A80               	xorlw	128
   895  066F  00FF               	movwf	btemp+1
   896  0670  3082               	movlw	130
   897  0671  027F               	subwf	btemp+1,w
   898  0672  1D03               	skipz
   899  0673  2E76               	goto	u785
   900  0674  3059               	movlw	89
   901  0675  0243               	subwf	main@adc,w
   902  0676                     u785:
   903  0676  1C03               	skipc
   904  0677  2E79               	goto	u781
   905  0678  2E7A               	goto	u780
   906  0679                     u781:
   907  0679  2EDE               	goto	l1357
   908  067A                     u780:
   909  067A                     l1335:
   910  067A  1283               	bcf	3,5	;RP0=0, select bank0
   911  067B  1303               	bcf	3,6	;RP1=0, select bank0
   912  067C  0844               	movf	main@adc+1,w
   913  067D  3A80               	xorlw	128
   914  067E  00FF               	movwf	btemp+1
   915  067F  3082               	movlw	130
   916  0680  027F               	subwf	btemp+1,w
   917  0681  1D03               	skipz
   918  0682  2E85               	goto	u795
   919  0683  30BC               	movlw	188
   920  0684  0243               	subwf	main@adc,w
   921  0685                     u795:
   922  0685  1803               	skipnc
   923  0686  2E88               	goto	u791
   924  0687  2E89               	goto	u790
   925  0688                     u791:
   926  0688  2EDE               	goto	l1357
   927  0689                     u790:
   928  0689                     l1337:
   929                           
   930                           ;LCD_Main.c: 267:     {;LCD_Main.c: 268:         ExposureTime--;
   931  0689  30FF               	movlw	255
   932  068A  1283               	bcf	3,5	;RP0=0, select bank0
   933  068B  1303               	bcf	3,6	;RP1=0, select bank0
   934  068C  07C1               	addwf	main@ExposureTime,f
   935  068D  1803               	skipnc
   936  068E  0AC2               	incf	main@ExposureTime+1,f
   937  068F  30FF               	movlw	255
   938  0690  07C2               	addwf	main@ExposureTime+1,f
   939  0691                     l1339:
   940                           
   941                           ;LCD_Main.c: 269:         if (ExposureTime <1) ExposureTime = 1;
   942  0691  0842               	movf	main@ExposureTime+1,w
   943  0692  3A80               	xorlw	128
   944  0693  00FF               	movwf	btemp+1
   945  0694  3080               	movlw	128
   946  0695  027F               	subwf	btemp+1,w
   947  0696  1D03               	skipz
   948  0697  2E9A               	goto	u805
   949  0698  3001               	movlw	1
   950  0699  0241               	subwf	main@ExposureTime,w
   951  069A                     u805:
   952  069A  1803               	skipnc
   953  069B  2E9D               	goto	u801
   954  069C  2E9E               	goto	u800
   955  069D                     u801:
   956  069D  2EA4               	goto	l1343
   957  069E                     u800:
   958  069E                     l1341:
   959  069E  3001               	movlw	1
   960  069F  1283               	bcf	3,5	;RP0=0, select bank0
   961  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   962  06A1  00C1               	movwf	main@ExposureTime
   963  06A2  3000               	movlw	0
   964  06A3  00C2               	movwf	main@ExposureTime+1
   965  06A4                     l1343:
   966                           
   967                           ;LCD_Main.c: 270:         itoa(ExpTime, ExposureTime, 10);
   968  06A4  1283               	bcf	3,5	;RP0=0, select bank0
   969  06A5  1303               	bcf	3,6	;RP1=0, select bank0
   970  06A6  0842               	movf	main@ExposureTime+1,w
   971  06A7  00A5               	movwf	itoa@val+1
   972  06A8  0841               	movf	main@ExposureTime,w
   973  06A9  00A4               	movwf	itoa@val
   974  06AA  300A               	movlw	10
   975  06AB  00A6               	movwf	itoa@base
   976  06AC  3000               	movlw	0
   977  06AD  00A7               	movwf	itoa@base+1
   978  06AE  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   979  06AF  118A  23B9  118A   	fcall	_itoa
   980  06B2                     l1345:
   981                           
   982                           ;LCD_Main.c: 271:         LCDGoto(0,0);
   983  06B2  01F6               	clrf	LCDGoto@ln
   984  06B3  3000               	movlw	0
   985  06B4  118A  2457  118A   	fcall	_LCDGoto
   986  06B7                     l1347:
   987                           
   988                           ;LCD_Main.c: 272:         LCDPutStr(ExpTime);
   989  06B7  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
   990  06B8  00F6               	movwf	LCDPutStr@str
   991  06B9  3000               	movlw	0
   992  06BA  00F7               	movwf	LCDPutStr@str+1
   993  06BB  118A  23DD  118A   	fcall	_LCDPutStr
   994  06BE                     l1349:
   995                           
   996                           ;LCD_Main.c: 273:         LCDPutStr(" sec exposure  ");
   997  06BE  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   998  06BF  00F6               	movwf	LCDPutStr@str
   999  06C0  3080               	movlw	128
  1000  06C1  00F7               	movwf	LCDPutStr@str+1
  1001  06C2  118A  23DD  118A   	fcall	_LCDPutStr
  1002  06C5                     l1351:
  1003                           
  1004                           ;LCD_Main.c: 274:         LCDPutCmd(0x02);
  1005  06C5  3002               	movlw	2
  1006  06C6  118A  2365  118A   	fcall	_LCDPutCmd
  1007  06C9                     l1353:
  1008                           
  1009                           ;LCD_Main.c: 275:         _delay((unsigned long)((200)*(4194304/4000.0)));
  1010  06C9  3002               	movlw	2
  1011  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1012  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1013  06CC  00AB               	movwf	??_main+2
  1014  06CD  3011               	movlw	17
  1015  06CE  00AA               	movwf	??_main+1
  1016  06CF  3057               	movlw	87
  1017  06D0  00A9               	movwf	??_main
  1018  06D1                     u877:
  1019  06D1  0BA9               	decfsz	??_main,f
  1020  06D2  2ED1               	goto	u877
  1021  06D3  0BAA               	decfsz	??_main+1,f
  1022  06D4  2ED1               	goto	u877
  1023  06D5  0BAB               	decfsz	??_main+2,f
  1024  06D6  2ED1               	goto	u877
  1025  06D7  2ED8               	nop2
  1026  06D8                     l1355:
  1027                           
  1028                           ;LCD_Main.c: 276:         LCDGoto(0,0);
  1029  06D8  01F6               	clrf	LCDGoto@ln
  1030  06D9  3000               	movlw	0
  1031  06DA  118A  2457  118A   	fcall	_LCDGoto
  1032                           
  1033                           ;LCD_Main.c: 278:     }
  1034  06DD  2DE7               	goto	l1307
  1035  06DE                     l1357:
  1036  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1037  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1038  06E0  0844               	movf	main@adc+1,w
  1039  06E1  3A80               	xorlw	128
  1040  06E2  00FF               	movwf	btemp+1
  1041  06E3  3081               	movlw	129
  1042  06E4  027F               	subwf	btemp+1,w
  1043  06E5  1D03               	skipz
  1044  06E6  2EE9               	goto	u815
  1045  06E7  30F5               	movlw	245
  1046  06E8  0243               	subwf	main@adc,w
  1047  06E9                     u815:
  1048  06E9  1C03               	skipc
  1049  06EA  2EEC               	goto	u811
  1050  06EB  2EED               	goto	u810
  1051  06EC                     u811:
  1052  06EC  2F5E               	goto	l1385
  1053  06ED                     u810:
  1054  06ED                     l1359:
  1055  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1056  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1057  06EF  0844               	movf	main@adc+1,w
  1058  06F0  3A80               	xorlw	128
  1059  06F1  00FF               	movwf	btemp+1
  1060  06F2  3082               	movlw	130
  1061  06F3  027F               	subwf	btemp+1,w
  1062  06F4  1D03               	skipz
  1063  06F5  2EF8               	goto	u825
  1064  06F6  3058               	movlw	88
  1065  06F7  0243               	subwf	main@adc,w
  1066  06F8                     u825:
  1067  06F8  1803               	skipnc
  1068  06F9  2EFB               	goto	u821
  1069  06FA  2EFC               	goto	u820
  1070  06FB                     u821:
  1071  06FB  2F5E               	goto	l1385
  1072  06FC                     u820:
  1073  06FC                     l1361:
  1074                           
  1075                           ;LCD_Main.c: 280:     {;LCD_Main.c: 282:         LCDPutCmd(0x01);
  1076  06FC  3001               	movlw	1
  1077  06FD  118A  2365  118A   	fcall	_LCDPutCmd
  1078                           
  1079                           ;LCD_Main.c: 283:         LCDGoto(5,0);
  1080  0700  01F6               	clrf	LCDGoto@ln
  1081  0701  3005               	movlw	5
  1082  0702  118A  2457  118A   	fcall	_LCDGoto
  1083  0705                     l1363:
  1084                           
  1085                           ;LCD_Main.c: 284:         LCDPutStr("RESET");
  1086  0705  305D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1087  0706  00F6               	movwf	LCDPutStr@str
  1088  0707  3080               	movlw	128
  1089  0708  00F7               	movwf	LCDPutStr@str+1
  1090  0709  118A  23DD  118A   	fcall	_LCDPutStr
  1091  070C                     l1365:
  1092                           
  1093                           ;LCD_Main.c: 285:         _delay((unsigned long)((1000)*(4194304/4000.0)));
  1094  070C  3006               	movlw	6
  1095  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1096  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1097  070F  00AB               	movwf	??_main+2
  1098  0710  3052               	movlw	82
  1099  0711  00AA               	movwf	??_main+1
  1100  0712  30C3               	movlw	195
  1101  0713  00A9               	movwf	??_main
  1102  0714                     u887:
  1103  0714  0BA9               	decfsz	??_main,f
  1104  0715  2F14               	goto	u887
  1105  0716  0BAA               	decfsz	??_main+1,f
  1106  0717  2F14               	goto	u887
  1107  0718  0BAB               	decfsz	??_main+2,f
  1108  0719  2F14               	goto	u887
  1109  071A  0000               	nop
  1110  071B                     l1367:
  1111                           
  1112                           ;LCD_Main.c: 286:         ExposureTime = 1;
  1113  071B  3001               	movlw	1
  1114  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1115  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1116  071E  00C1               	movwf	main@ExposureTime
  1117  071F  3000               	movlw	0
  1118  0720  00C2               	movwf	main@ExposureTime+1
  1119  0721                     l1369:
  1120                           
  1121                           ;LCD_Main.c: 287:         memset(ExpTime, '\0', sizeof(ExpTime));
  1122  0721  3000               	movlw	0
  1123  0722  00F0               	movwf	memset@c
  1124  0723  00F1               	movwf	memset@c+1
  1125  0724  3006               	movlw	6
  1126  0725  00F2               	movwf	memset@n
  1127  0726  3000               	movlw	0
  1128  0727  00F3               	movwf	memset@n+1
  1129  0728  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1130  0729  118A  2399  118A   	fcall	_memset
  1131  072C                     l1371:
  1132                           
  1133                           ;LCD_Main.c: 288:         ExpTime[0] = '1';
  1134  072C  3031               	movlw	49
  1135  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1136  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1137  072F  00A9               	movwf	??_main
  1138  0730  0829               	movf	??_main,w
  1139  0731  00B9               	movwf	main@ExpTime
  1140  0732                     l1373:
  1141                           
  1142                           ;LCD_Main.c: 289:         LCDPutCmd(0x02);
  1143  0732  3002               	movlw	2
  1144  0733  118A  2365  118A   	fcall	_LCDPutCmd
  1145  0736                     l1375:
  1146                           
  1147                           ;LCD_Main.c: 290:         LCDPutStr("    ENLARGER  ");
  1148  0736  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1149  0737  00F6               	movwf	LCDPutStr@str
  1150  0738  3080               	movlw	128
  1151  0739  00F7               	movwf	LCDPutStr@str+1
  1152  073A  118A  23DD  118A   	fcall	_LCDPutStr
  1153  073D                     l1377:
  1154                           
  1155                           ;LCD_Main.c: 291:         LCDGoto(0,1);
  1156  073D  01F6               	clrf	LCDGoto@ln
  1157  073E  0AF6               	incf	LCDGoto@ln,f
  1158  073F  3000               	movlw	0
  1159  0740  118A  2457  118A   	fcall	_LCDGoto
  1160  0743                     l1379:
  1161                           
  1162                           ;LCD_Main.c: 292:         LCDPutStr("    TIMER V1  ");
  1163  0743  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1164  0744  00F6               	movwf	LCDPutStr@str
  1165  0745  3080               	movlw	128
  1166  0746  00F7               	movwf	LCDPutStr@str+1
  1167  0747  118A  23DD  118A   	fcall	_LCDPutStr
  1168  074A                     l1381:
  1169                           
  1170                           ;LCD_Main.c: 293:         _delay((unsigned long)((4000)*(4194304/4000.0)));
  1171  074A  3016               	movlw	22
  1172  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1173  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1174  074D  00AB               	movwf	??_main+2
  1175  074E  3048               	movlw	72
  1176  074F  00AA               	movwf	??_main+1
  1177  0750  3014               	movlw	20
  1178  0751  00A9               	movwf	??_main
  1179  0752                     u897:
  1180  0752  0BA9               	decfsz	??_main,f
  1181  0753  2F52               	goto	u897
  1182  0754  0BAA               	decfsz	??_main+1,f
  1183  0755  2F52               	goto	u897
  1184  0756  0BAB               	decfsz	??_main+2,f
  1185  0757  2F52               	goto	u897
  1186  0758  2F59               	nop2
  1187  0759                     l1383:
  1188                           
  1189                           ;LCD_Main.c: 294:         LCDPutCmd(0x01);
  1190  0759  3001               	movlw	1
  1191  075A  118A  2365  118A   	fcall	_LCDPutCmd
  1192                           
  1193                           ;LCD_Main.c: 295:     }
  1194  075D  2DE7               	goto	l1307
  1195  075E                     l1385:
  1196  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1197  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0760  0844               	movf	main@adc+1,w
  1199  0761  3A80               	xorlw	128
  1200  0762  00FF               	movwf	btemp+1
  1201  0763  3080               	movlw	128
  1202  0764  027F               	subwf	btemp+1,w
  1203  0765  1D03               	skipz
  1204  0766  2F69               	goto	u835
  1205  0767  300A               	movlw	10
  1206  0768  0243               	subwf	main@adc,w
  1207  0769                     u835:
  1208  0769  1803               	skipnc
  1209  076A  2F6C               	goto	u831
  1210  076B  2F6D               	goto	u830
  1211  076C                     u831:
  1212  076C  2FF7               	goto	l104
  1213  076D                     u830:
  1214  076D                     l1387:
  1215                           
  1216                           ;LCD_Main.c: 297:     {;LCD_Main.c: 298:         LCDGoto(0,0);
  1217  076D  01F6               	clrf	LCDGoto@ln
  1218  076E  3000               	movlw	0
  1219  076F  118A  2457  118A   	fcall	_LCDGoto
  1220  0772                     l1389:
  1221                           
  1222                           ;LCD_Main.c: 299:         itoa(ExpTime, ExposureTime, 10);
  1223  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0774  0842               	movf	main@ExposureTime+1,w
  1226  0775  00A5               	movwf	itoa@val+1
  1227  0776  0841               	movf	main@ExposureTime,w
  1228  0777  00A4               	movwf	itoa@val
  1229  0778  300A               	movlw	10
  1230  0779  00A6               	movwf	itoa@base
  1231  077A  3000               	movlw	0
  1232  077B  00A7               	movwf	itoa@base+1
  1233  077C  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1234  077D  118A  23B9  118A   	fcall	_itoa
  1235  0780                     l1391:
  1236                           
  1237                           ;LCD_Main.c: 300:         LCDPutStr(ExpTime);
  1238  0780  3039               	movlw	(low (main@ExpTime| 0))& (0+255)
  1239  0781  00F6               	movwf	LCDPutStr@str
  1240  0782  3000               	movlw	0
  1241  0783  00F7               	movwf	LCDPutStr@str+1
  1242  0784  118A  23DD  118A   	fcall	_LCDPutStr
  1243  0787                     l1393:
  1244                           
  1245                           ;LCD_Main.c: 301:         LCDPutStr(" sec exposure ");
  1246  0787  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1247  0788  00F6               	movwf	LCDPutStr@str
  1248  0789  3080               	movlw	128
  1249  078A  00F7               	movwf	LCDPutStr@str+1
  1250  078B  118A  23DD  118A   	fcall	_LCDPutStr
  1251  078E                     l1395:
  1252                           
  1253                           ;LCD_Main.c: 302:         LCDGoto(0,1);
  1254  078E  01F6               	clrf	LCDGoto@ln
  1255  078F  0AF6               	incf	LCDGoto@ln,f
  1256  0790  3000               	movlw	0
  1257  0791  118A  2457  118A   	fcall	_LCDGoto
  1258  0794                     l1397:
  1259                           
  1260                           ;LCD_Main.c: 303:         LCDPutStr("                ");
  1261  0794  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1262  0795  00F6               	movwf	LCDPutStr@str
  1263  0796  3080               	movlw	128
  1264  0797  00F7               	movwf	LCDPutStr@str+1
  1265  0798  118A  23DD  118A   	fcall	_LCDPutStr
  1266  079B                     l1399:
  1267                           
  1268                           ;LCD_Main.c: 304:         LCDPutCmd(0x02);
  1269  079B  3002               	movlw	2
  1270  079C  118A  2365  118A   	fcall	_LCDPutCmd
  1271  079F                     l1401:
  1272                           
  1273                           ;LCD_Main.c: 305:         RC4 = 0;
  1274  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1275  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1276  07A1  1207               	bcf	7,4	;volatile
  1277  07A2                     l1403:
  1278  07A2                     l1405:
  1279                           
  1280                           ;LCD_Main.c: 307:         for (i=0;i< ExposureTime;i++)
  1281  07A2  01BF               	clrf	main@i
  1282  07A3  01C0               	clrf	main@i+1
  1283  07A4  2FE1               	goto	l1419
  1284  07A5                     l1407:
  1285                           
  1286                           ;LCD_Main.c: 308:         {;LCD_Main.c: 309:             _delay((unsigned long)((915)*(4
      +                          194304/4000.0)));
  1287  07A5  3005               	movlw	5
  1288  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1289  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1290  07A8  00AB               	movwf	??_main+2
  1291  07A9  30DF               	movlw	223
  1292  07AA  00AA               	movwf	??_main+1
  1293  07AB  3003               	movlw	3
  1294  07AC  00A9               	movwf	??_main
  1295  07AD                     u907:
  1296  07AD  0BA9               	decfsz	??_main,f
  1297  07AE  2FAD               	goto	u907
  1298  07AF  0BAA               	decfsz	??_main+1,f
  1299  07B0  2FAD               	goto	u907
  1300  07B1  0BAB               	decfsz	??_main+2,f
  1301  07B2  2FAD               	goto	u907
  1302  07B3                     l1409:
  1303                           
  1304                           ;LCD_Main.c: 310:             itoa(iTime, i+1, 10);
  1305  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1306  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1307  07B5  083F               	movf	main@i,w
  1308  07B6  3E01               	addlw	1
  1309  07B7  00A4               	movwf	itoa@val
  1310  07B8  0840               	movf	main@i+1,w
  1311  07B9  1803               	skipnc
  1312  07BA  3E01               	addlw	1
  1313  07BB  3E00               	addlw	0
  1314  07BC  00A5               	movwf	itoa@val+1
  1315  07BD  300A               	movlw	10
  1316  07BE  00A6               	movwf	itoa@base
  1317  07BF  3000               	movlw	0
  1318  07C0  00A7               	movwf	itoa@base+1
  1319  07C1  3033               	movlw	(low (main@iTime| 0))& (0+255)
  1320  07C2  118A  23B9  118A   	fcall	_itoa
  1321  07C5                     l1411:
  1322                           
  1323                           ;LCD_Main.c: 311:             LCDGoto(0,1);
  1324  07C5  01F6               	clrf	LCDGoto@ln
  1325  07C6  0AF6               	incf	LCDGoto@ln,f
  1326  07C7  3000               	movlw	0
  1327  07C8  118A  2457  118A   	fcall	_LCDGoto
  1328  07CB                     l1413:
  1329                           
  1330                           ;LCD_Main.c: 312:             LCDPutStr(iTime);
  1331  07CB  3033               	movlw	(low (main@iTime| 0))& (0+255)
  1332  07CC  00F6               	movwf	LCDPutStr@str
  1333  07CD  3000               	movlw	0
  1334  07CE  00F7               	movwf	LCDPutStr@str+1
  1335  07CF  118A  23DD  118A   	fcall	_LCDPutStr
  1336  07D2                     l1415:
  1337                           
  1338                           ;LCD_Main.c: 313:             LCDPutStr(" sec last exp");
  1339  07D2  304F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1340  07D3  00F6               	movwf	LCDPutStr@str
  1341  07D4  3080               	movlw	128
  1342  07D5  00F7               	movwf	LCDPutStr@str+1
  1343  07D6  118A  23DD  118A   	fcall	_LCDPutStr
  1344  07D9                     l1417:
  1345                           
  1346                           ;LCD_Main.c: 314:         }
  1347  07D9  3001               	movlw	1
  1348  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1349  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1350  07DC  07BF               	addwf	main@i,f
  1351  07DD  1803               	skipnc
  1352  07DE  0AC0               	incf	main@i+1,f
  1353  07DF  3000               	movlw	0
  1354  07E0  07C0               	addwf	main@i+1,f
  1355  07E1                     l1419:
  1356  07E1  0840               	movf	main@i+1,w
  1357  07E2  3A80               	xorlw	128
  1358  07E3  00A9               	movwf	??_main
  1359  07E4  0842               	movf	main@ExposureTime+1,w
  1360  07E5  3A80               	xorlw	128
  1361  07E6  0229               	subwf	??_main,w
  1362  07E7  1D03               	skipz
  1363  07E8  2FEB               	goto	u845
  1364  07E9  0841               	movf	main@ExposureTime,w
  1365  07EA  023F               	subwf	main@i,w
  1366  07EB                     u845:
  1367  07EB  1C03               	skipc
  1368  07EC  2FEE               	goto	u841
  1369  07ED  2FEF               	goto	u840
  1370  07EE                     u841:
  1371  07EE  2FA5               	goto	l1407
  1372  07EF                     u840:
  1373  07EF                     l107:
  1374                           
  1375                           ;LCD_Main.c: 316:         RC4 = 1;
  1376  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  1377  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  1378  07F1  1607               	bsf	7,4	;volatile
  1379  07F2                     l1421:
  1380                           
  1381                           ;LCD_Main.c: 317:         LCDPutCmd(0x02);
  1382  07F2  3002               	movlw	2
  1383  07F3  118A  2365  118A   	fcall	_LCDPutCmd
  1384                           
  1385                           ;LCD_Main.c: 318:     }
  1386  07F6  2DE7               	goto	l1307
  1387  07F7                     l104:	
  1388                           ;LCD_Main.c: 319:     else
  1389                           
  1390                           
  1391                           ;LCD_Main.c: 320:     {;LCD_Main.c: 321:      RC4 = 1;
  1392  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  1393  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  1394  07F9  1607               	bsf	7,4	;volatile
  1395  07FA  2DE7               	goto	l1307
  1396  07FB  118A  2800         	ljmp	start
  1397  07FD                     __end_of_main:
  1398                           
  1399                           	psect	text1
  1400  0399                     __ptext1:	
  1401 ;; *************** function _memset *****************
  1402 ;; Defined at:
  1403 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memset.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  p1              1    wreg     PTR void 
  1406 ;;		 -> main@ExpTime(6), 
  1407 ;;  c               2    0[COMMON] int 
  1408 ;;  n               2    2[COMMON] unsigned int 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  p1              1    5[COMMON] PTR void 
  1411 ;;		 -> main@ExpTime(6), 
  1412 ;;  p               1    6[COMMON] PTR unsigned char 
  1413 ;;		 -> main@ExpTime(6), 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      PTR void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1423 ;;      Params:         4       0       0       0
  1424 ;;      Locals:         2       0       0       0
  1425 ;;      Temps:          1       0       0       0
  1426 ;;      Totals:         7       0       0       0
  1427 ;;Total ram usage:        7 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436  0399                     _memset:	
  1437                           ;psect for function _memset
  1438                           
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1442                           ;memset@p1 stored from wreg
  1443  0399  00F5               	movwf	memset@p1
  1444  039A                     l1283:
  1445  039A  0875               	movf	memset@p1,w
  1446  039B  00F4               	movwf	??_memset
  1447  039C  0874               	movf	??_memset,w
  1448  039D  00F6               	movwf	memset@p
  1449  039E  2BAA               	goto	l1289
  1450  039F                     l1285:
  1451  039F  0870               	movf	memset@c,w
  1452  03A0  00F4               	movwf	??_memset
  1453  03A1  0876               	movf	memset@p,w
  1454  03A2  0084               	movwf	4
  1455  03A3  0874               	movf	??_memset,w
  1456  03A4  1383               	bcf	3,7	;select IRP bank0
  1457  03A5  0080               	movwf	0
  1458  03A6                     l1287:
  1459  03A6  3001               	movlw	1
  1460  03A7  00F4               	movwf	??_memset
  1461  03A8  0874               	movf	??_memset,w
  1462  03A9  07F6               	addwf	memset@p,f
  1463  03AA                     l1289:
  1464  03AA  3001               	movlw	1
  1465  03AB  02F2               	subwf	memset@n,f
  1466  03AC  3000               	movlw	0
  1467  03AD  1C03               	skipc
  1468  03AE  03F3               	decf	memset@n+1,f
  1469  03AF  02F3               	subwf	memset@n+1,f
  1470  03B0  0A72               	incf	memset@n,w
  1471  03B1  1D03               	skipz
  1472  03B2  2BB7               	goto	u741
  1473  03B3  0A73               	incf	memset@n+1,w
  1474  03B4  1D03               	btfss	3,2
  1475  03B5  2BB7               	goto	u741
  1476  03B6  2BB8               	goto	u740
  1477  03B7                     u741:
  1478  03B7  2B9F               	goto	l1285
  1479  03B8                     u740:
  1480  03B8                     l665:
  1481  03B8  0008               	return
  1482  03B9                     __end_of_memset:
  1483                           
  1484                           	psect	text2
  1485  03B9                     __ptext2:	
  1486 ;; *************** function _itoa *****************
  1487 ;; Defined at:
  1488 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  buf             1    wreg     PTR unsigned char 
  1491 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1492 ;;  val             2    4[BANK0 ] int 
  1493 ;;  base            2    6[BANK0 ] int 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  1496 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1497 ;;  cp              1    0        PTR unsigned char 
  1498 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      PTR unsigned char 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1508 ;;      Params:         0       4       0       0
  1509 ;;      Locals:         0       1       0       0
  1510 ;;      Temps:          1       0       0       0
  1511 ;;      Totals:         1       5       0       0
  1512 ;;Total ram usage:        6 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 2
  1515 ;; This function calls:
  1516 ;;		_utoa
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522  03B9                     _itoa:	
  1523                           ;psect for function _itoa
  1524                           
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1528                           ;itoa@buf stored from wreg
  1529  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1530  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1531  03BB  00A8               	movwf	itoa@buf
  1532  03BC                     l1269:
  1533  03BC                     l1271:
  1534  03BC  1FA5               	btfss	itoa@val+1,7
  1535  03BD  2BBF               	goto	u731
  1536  03BE  2BC0               	goto	u730
  1537  03BF                     u731:
  1538  03BF  2BD0               	goto	l1279
  1539  03C0                     u730:
  1540  03C0                     l1273:
  1541  03C0  302D               	movlw	45
  1542  03C1  00FD               	movwf	??_itoa
  1543  03C2  0828               	movf	itoa@buf,w
  1544  03C3  0084               	movwf	4
  1545  03C4  087D               	movf	??_itoa,w
  1546  03C5  1383               	bcf	3,7	;select IRP bank0
  1547  03C6  0080               	movwf	0
  1548  03C7                     l1275:
  1549  03C7  3001               	movlw	1
  1550  03C8  00FD               	movwf	??_itoa
  1551  03C9  087D               	movf	??_itoa,w
  1552  03CA  07A8               	addwf	itoa@buf,f
  1553  03CB                     l1277:
  1554  03CB  09A4               	comf	itoa@val,f
  1555  03CC  09A5               	comf	itoa@val+1,f
  1556  03CD  0AA4               	incf	itoa@val,f
  1557  03CE  1903               	skipnz
  1558  03CF  0AA5               	incf	itoa@val+1,f
  1559  03D0                     l1279:
  1560  03D0  0825               	movf	itoa@val+1,w
  1561  03D1  00F9               	movwf	utoa@val+1
  1562  03D2  0824               	movf	itoa@val,w
  1563  03D3  00F8               	movwf	utoa@val
  1564  03D4  0827               	movf	itoa@base+1,w
  1565  03D5  00FB               	movwf	utoa@base+1
  1566  03D6  0826               	movf	itoa@base,w
  1567  03D7  00FA               	movwf	utoa@base
  1568  03D8  0828               	movf	itoa@buf,w
  1569  03D9  118A  2543  118A   	fcall	_utoa
  1570  03DC                     l651:
  1571  03DC  0008               	return
  1572  03DD                     __end_of_itoa:
  1573                           
  1574                           	psect	text3
  1575  0543                     __ptext3:	
  1576 ;; *************** function _utoa *****************
  1577 ;; Defined at:
  1578 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\itoa.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  buf             1    wreg     PTR unsigned char 
  1581 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1582 ;;  val             2    8[COMMON] unsigned int 
  1583 ;;  base            2   10[COMMON] int 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1586 ;;		 -> main@iTime(6), main@ExpTime(6), main@Buffer(7), 
  1587 ;;  v               2    0[BANK0 ] unsigned int 
  1588 ;;  c               1    2[BANK0 ] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      PTR unsigned char 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1598 ;;      Params:         4       0       0       0
  1599 ;;      Locals:         0       4       0       0
  1600 ;;      Temps:          1       0       0       0
  1601 ;;      Totals:         5       4       0       0
  1602 ;;Total ram usage:        9 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 1
  1605 ;; This function calls:
  1606 ;;		___lwdiv
  1607 ;;		___lwmod
  1608 ;; This function is called by:
  1609 ;;		_itoa
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613  0543                     _utoa:	
  1614                           ;psect for function _utoa
  1615                           
  1616                           
  1617                           ;incstack = 0
  1618                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1619                           ;utoa@buf stored from wreg
  1620  0543  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0544  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0545  00A3               	movwf	utoa@buf
  1623  0546                     l1179:
  1624  0546  0879               	movf	utoa@val+1,w
  1625  0547  00A1               	movwf	utoa@v+1
  1626  0548  0878               	movf	utoa@val,w
  1627  0549  00A0               	movwf	utoa@v
  1628  054A                     l1181:
  1629  054A  087B               	movf	utoa@base+1,w
  1630  054B  00F1               	movwf	___lwdiv@divisor+1
  1631  054C  087A               	movf	utoa@base,w
  1632  054D  00F0               	movwf	___lwdiv@divisor
  1633  054E  0821               	movf	utoa@v+1,w
  1634  054F  00F3               	movwf	___lwdiv@dividend+1
  1635  0550  0820               	movf	utoa@v,w
  1636  0551  00F2               	movwf	___lwdiv@dividend
  1637  0552  118A  24FF  118A   	fcall	___lwdiv
  1638  0555  0871               	movf	?___lwdiv+1,w
  1639  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0558  00A1               	movwf	utoa@v+1
  1642  0559  0870               	movf	?___lwdiv,w
  1643  055A  00A0               	movwf	utoa@v
  1644  055B                     l1183:
  1645  055B  3001               	movlw	1
  1646  055C  00FC               	movwf	??_utoa
  1647  055D  087C               	movf	??_utoa,w
  1648  055E  07A3               	addwf	utoa@buf,f
  1649  055F                     l1185:
  1650  055F  0820               	movf	utoa@v,w
  1651  0560  0421               	iorwf	utoa@v+1,w
  1652  0561  1D03               	btfss	3,2
  1653  0562  2D64               	goto	u641
  1654  0563  2D65               	goto	u640
  1655  0564                     u641:
  1656  0564  2D4A               	goto	l1181
  1657  0565                     u640:
  1658  0565                     l1187:
  1659  0565  0823               	movf	utoa@buf,w
  1660  0566  0084               	movwf	4
  1661  0567  1383               	bcf	3,7	;select IRP bank0
  1662  0568  0180               	clrf	0
  1663  0569                     l1189:
  1664  0569  3001               	movlw	1
  1665  056A  02A3               	subwf	utoa@buf,f
  1666  056B                     l1191:
  1667  056B  087B               	movf	utoa@base+1,w
  1668  056C  00F1               	movwf	___lwmod@divisor+1
  1669  056D  087A               	movf	utoa@base,w
  1670  056E  00F0               	movwf	___lwmod@divisor
  1671  056F  0879               	movf	utoa@val+1,w
  1672  0570  00F3               	movwf	___lwmod@dividend+1
  1673  0571  0878               	movf	utoa@val,w
  1674  0572  00F2               	movwf	___lwmod@dividend
  1675  0573  118A  2483  118A   	fcall	___lwmod
  1676  0576  0870               	movf	?___lwmod,w
  1677  0577  00FC               	movwf	??_utoa
  1678  0578  087C               	movf	??_utoa,w
  1679  0579  1283               	bcf	3,5	;RP0=0, select bank0
  1680  057A  1303               	bcf	3,6	;RP1=0, select bank0
  1681  057B  00A2               	movwf	utoa@c
  1682  057C                     l1193:
  1683  057C  087B               	movf	utoa@base+1,w
  1684  057D  00F1               	movwf	___lwdiv@divisor+1
  1685  057E  087A               	movf	utoa@base,w
  1686  057F  00F0               	movwf	___lwdiv@divisor
  1687  0580  0879               	movf	utoa@val+1,w
  1688  0581  00F3               	movwf	___lwdiv@dividend+1
  1689  0582  0878               	movf	utoa@val,w
  1690  0583  00F2               	movwf	___lwdiv@dividend
  1691  0584  118A  24FF  118A   	fcall	___lwdiv
  1692  0587  0871               	movf	?___lwdiv+1,w
  1693  0588  00F9               	movwf	utoa@val+1
  1694  0589  0870               	movf	?___lwdiv,w
  1695  058A  00F8               	movwf	utoa@val
  1696  058B                     l1195:
  1697  058B  300A               	movlw	10
  1698  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1699  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1700  058E  0222               	subwf	utoa@c,w
  1701  058F  1C03               	skipc
  1702  0590  2D92               	goto	u651
  1703  0591  2D93               	goto	u650
  1704  0592                     u651:
  1705  0592  2D97               	goto	l657
  1706  0593                     u650:
  1707  0593                     l1197:
  1708  0593  3007               	movlw	7
  1709  0594  00FC               	movwf	??_utoa
  1710  0595  087C               	movf	??_utoa,w
  1711  0596  07A2               	addwf	utoa@c,f
  1712  0597                     l657:
  1713  0597  3030               	movlw	48
  1714  0598  00FC               	movwf	??_utoa
  1715  0599  087C               	movf	??_utoa,w
  1716  059A  07A2               	addwf	utoa@c,f
  1717  059B                     l1199:
  1718  059B  0822               	movf	utoa@c,w
  1719  059C  00FC               	movwf	??_utoa
  1720  059D  0823               	movf	utoa@buf,w
  1721  059E  0084               	movwf	4
  1722  059F  087C               	movf	??_utoa,w
  1723  05A0  1383               	bcf	3,7	;select IRP bank0
  1724  05A1  0080               	movwf	0
  1725  05A2                     l1201:
  1726  05A2  3001               	movlw	1
  1727  05A3  02A3               	subwf	utoa@buf,f
  1728  05A4                     l1203:
  1729  05A4  0878               	movf	utoa@val,w
  1730  05A5  0479               	iorwf	utoa@val+1,w
  1731  05A6  1D03               	btfss	3,2
  1732  05A7  2DA9               	goto	u661
  1733  05A8  2DAA               	goto	u660
  1734  05A9                     u661:
  1735  05A9  2D6B               	goto	l1191
  1736  05AA                     u660:
  1737  05AA                     l1205:
  1738                           
  1739                           ;	Return value of _utoa is never used
  1740  05AA  3001               	movlw	1
  1741  05AB  00FC               	movwf	??_utoa
  1742  05AC  087C               	movf	??_utoa,w
  1743  05AD  07A3               	addwf	utoa@buf,f
  1744  05AE                     l659:
  1745  05AE  0008               	return
  1746  05AF                     __end_of_utoa:
  1747                           
  1748                           	psect	text4
  1749  0483                     __ptext4:	
  1750 ;; *************** function ___lwmod *****************
  1751 ;; Defined at:
  1752 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  divisor         2    0[COMMON] unsigned int 
  1755 ;;  dividend        2    2[COMMON] unsigned int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  counter         1    5[COMMON] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    0[COMMON] unsigned int 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1767 ;;      Params:         4       0       0       0
  1768 ;;      Locals:         1       0       0       0
  1769 ;;      Temps:          1       0       0       0
  1770 ;;      Totals:         6       0       0       0
  1771 ;;Total ram usage:        6 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_utoa
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780  0483                     ___lwmod:	
  1781                           ;psect for function ___lwmod
  1782                           
  1783  0483                     l1149:	
  1784                           ;incstack = 0
  1785                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1786                           
  1787  0483  0870               	movf	___lwmod@divisor,w
  1788  0484  0471               	iorwf	___lwmod@divisor+1,w
  1789  0485  1903               	btfsc	3,2
  1790  0486  2C88               	goto	u581
  1791  0487  2C89               	goto	u580
  1792  0488                     u581:
  1793  0488  2CB8               	goto	l1167
  1794  0489                     u580:
  1795  0489                     l1151:
  1796  0489  01F5               	clrf	___lwmod@counter
  1797  048A  0AF5               	incf	___lwmod@counter,f
  1798  048B  2C97               	goto	l1157
  1799  048C                     l1153:
  1800  048C  3001               	movlw	1
  1801  048D                     u595:
  1802  048D  1003               	clrc
  1803  048E  0DF0               	rlf	___lwmod@divisor,f
  1804  048F  0DF1               	rlf	___lwmod@divisor+1,f
  1805  0490  3EFF               	addlw	-1
  1806  0491  1D03               	skipz
  1807  0492  2C8D               	goto	u595
  1808  0493                     l1155:
  1809  0493  3001               	movlw	1
  1810  0494  00F4               	movwf	??___lwmod
  1811  0495  0874               	movf	??___lwmod,w
  1812  0496  07F5               	addwf	___lwmod@counter,f
  1813  0497                     l1157:
  1814  0497  1FF1               	btfss	___lwmod@divisor+1,7
  1815  0498  2C9A               	goto	u601
  1816  0499  2C9B               	goto	u600
  1817  049A                     u601:
  1818  049A  2C8C               	goto	l1153
  1819  049B                     u600:
  1820  049B                     l1159:
  1821  049B  0871               	movf	___lwmod@divisor+1,w
  1822  049C  0273               	subwf	___lwmod@dividend+1,w
  1823  049D  1D03               	skipz
  1824  049E  2CA1               	goto	u615
  1825  049F  0870               	movf	___lwmod@divisor,w
  1826  04A0  0272               	subwf	___lwmod@dividend,w
  1827  04A1                     u615:
  1828  04A1  1C03               	skipc
  1829  04A2  2CA4               	goto	u611
  1830  04A3  2CA5               	goto	u610
  1831  04A4                     u611:
  1832  04A4  2CAB               	goto	l1163
  1833  04A5                     u610:
  1834  04A5                     l1161:
  1835  04A5  0870               	movf	___lwmod@divisor,w
  1836  04A6  02F2               	subwf	___lwmod@dividend,f
  1837  04A7  0871               	movf	___lwmod@divisor+1,w
  1838  04A8  1C03               	skipc
  1839  04A9  03F3               	decf	___lwmod@dividend+1,f
  1840  04AA  02F3               	subwf	___lwmod@dividend+1,f
  1841  04AB                     l1163:
  1842  04AB  3001               	movlw	1
  1843  04AC                     u625:
  1844  04AC  1003               	clrc
  1845  04AD  0CF1               	rrf	___lwmod@divisor+1,f
  1846  04AE  0CF0               	rrf	___lwmod@divisor,f
  1847  04AF  3EFF               	addlw	-1
  1848  04B0  1D03               	skipz
  1849  04B1  2CAC               	goto	u625
  1850  04B2                     l1165:
  1851  04B2  3001               	movlw	1
  1852  04B3  02F5               	subwf	___lwmod@counter,f
  1853  04B4  1D03               	btfss	3,2
  1854  04B5  2CB7               	goto	u631
  1855  04B6  2CB8               	goto	u630
  1856  04B7                     u631:
  1857  04B7  2C9B               	goto	l1159
  1858  04B8                     u630:
  1859  04B8                     l1167:
  1860  04B8  0873               	movf	___lwmod@dividend+1,w
  1861  04B9  00F1               	movwf	?___lwmod+1
  1862  04BA  0872               	movf	___lwmod@dividend,w
  1863  04BB  00F0               	movwf	?___lwmod
  1864  04BC                     l479:
  1865  04BC  0008               	return
  1866  04BD                     __end_of___lwmod:
  1867                           
  1868                           	psect	text5
  1869  04FF                     __ptext5:	
  1870 ;; *************** function ___lwdiv *****************
  1871 ;; Defined at:
  1872 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  divisor         2    0[COMMON] unsigned int 
  1875 ;;  dividend        2    2[COMMON] unsigned int 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  quotient        2    5[COMMON] unsigned int 
  1878 ;;  counter         1    7[COMMON] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  2    0[COMMON] unsigned int 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1888 ;;      Params:         4       0       0       0
  1889 ;;      Locals:         3       0       0       0
  1890 ;;      Temps:          1       0       0       0
  1891 ;;      Totals:         8       0       0       0
  1892 ;;Total ram usage:        8 bytes
  1893 ;; Hardware stack levels used: 1
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_utoa
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901  04FF                     ___lwdiv:	
  1902                           ;psect for function ___lwdiv
  1903                           
  1904  04FF                     l1123:	
  1905                           ;incstack = 0
  1906                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1907                           
  1908  04FF  01F5               	clrf	___lwdiv@quotient
  1909  0500  01F6               	clrf	___lwdiv@quotient+1
  1910  0501                     l1125:
  1911  0501  0870               	movf	___lwdiv@divisor,w
  1912  0502  0471               	iorwf	___lwdiv@divisor+1,w
  1913  0503  1903               	btfsc	3,2
  1914  0504  2D06               	goto	u511
  1915  0505  2D07               	goto	u510
  1916  0506                     u511:
  1917  0506  2D3E               	goto	l1145
  1918  0507                     u510:
  1919  0507                     l1127:
  1920  0507  01F7               	clrf	___lwdiv@counter
  1921  0508  0AF7               	incf	___lwdiv@counter,f
  1922  0509  2D15               	goto	l1133
  1923  050A                     l1129:
  1924  050A  3001               	movlw	1
  1925  050B                     u525:
  1926  050B  1003               	clrc
  1927  050C  0DF0               	rlf	___lwdiv@divisor,f
  1928  050D  0DF1               	rlf	___lwdiv@divisor+1,f
  1929  050E  3EFF               	addlw	-1
  1930  050F  1D03               	skipz
  1931  0510  2D0B               	goto	u525
  1932  0511                     l1131:
  1933  0511  3001               	movlw	1
  1934  0512  00F4               	movwf	??___lwdiv
  1935  0513  0874               	movf	??___lwdiv,w
  1936  0514  07F7               	addwf	___lwdiv@counter,f
  1937  0515                     l1133:
  1938  0515  1FF1               	btfss	___lwdiv@divisor+1,7
  1939  0516  2D18               	goto	u531
  1940  0517  2D19               	goto	u530
  1941  0518                     u531:
  1942  0518  2D0A               	goto	l1129
  1943  0519                     u530:
  1944  0519                     l1135:
  1945  0519  3001               	movlw	1
  1946  051A                     u545:
  1947  051A  1003               	clrc
  1948  051B  0DF5               	rlf	___lwdiv@quotient,f
  1949  051C  0DF6               	rlf	___lwdiv@quotient+1,f
  1950  051D  3EFF               	addlw	-1
  1951  051E  1D03               	skipz
  1952  051F  2D1A               	goto	u545
  1953  0520  0871               	movf	___lwdiv@divisor+1,w
  1954  0521  0273               	subwf	___lwdiv@dividend+1,w
  1955  0522  1D03               	skipz
  1956  0523  2D26               	goto	u555
  1957  0524  0870               	movf	___lwdiv@divisor,w
  1958  0525  0272               	subwf	___lwdiv@dividend,w
  1959  0526                     u555:
  1960  0526  1C03               	skipc
  1961  0527  2D29               	goto	u551
  1962  0528  2D2A               	goto	u550
  1963  0529                     u551:
  1964  0529  2D31               	goto	l1141
  1965  052A                     u550:
  1966  052A                     l1137:
  1967  052A  0870               	movf	___lwdiv@divisor,w
  1968  052B  02F2               	subwf	___lwdiv@dividend,f
  1969  052C  0871               	movf	___lwdiv@divisor+1,w
  1970  052D  1C03               	skipc
  1971  052E  03F3               	decf	___lwdiv@dividend+1,f
  1972  052F  02F3               	subwf	___lwdiv@dividend+1,f
  1973  0530                     l1139:
  1974  0530  1475               	bsf	___lwdiv@quotient,0
  1975  0531                     l1141:
  1976  0531  3001               	movlw	1
  1977  0532                     u565:
  1978  0532  1003               	clrc
  1979  0533  0CF1               	rrf	___lwdiv@divisor+1,f
  1980  0534  0CF0               	rrf	___lwdiv@divisor,f
  1981  0535  3EFF               	addlw	-1
  1982  0536  1D03               	skipz
  1983  0537  2D32               	goto	u565
  1984  0538                     l1143:
  1985  0538  3001               	movlw	1
  1986  0539  02F7               	subwf	___lwdiv@counter,f
  1987  053A  1D03               	btfss	3,2
  1988  053B  2D3D               	goto	u571
  1989  053C  2D3E               	goto	u570
  1990  053D                     u571:
  1991  053D  2D19               	goto	l1135
  1992  053E                     u570:
  1993  053E                     l1145:
  1994  053E  0876               	movf	___lwdiv@quotient+1,w
  1995  053F  00F1               	movwf	?___lwdiv+1
  1996  0540  0875               	movf	___lwdiv@quotient,w
  1997  0541  00F0               	movwf	?___lwdiv
  1998  0542                     l469:
  1999  0542  0008               	return
  2000  0543                     __end_of___lwdiv:
  2001                           
  2002                           	psect	text6
  2003  042C                     __ptext6:	
  2004 ;; *************** function _LCD_Initialize *****************
  2005 ;; Defined at:
  2006 ;;		line 60 in file "LCD_Main.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2020 ;;      Params:         0       0       0       0
  2021 ;;      Locals:         0       0       0       0
  2022 ;;      Temps:          2       0       0       0
  2023 ;;      Totals:         2       0       0       0
  2024 ;;Total ram usage:        2 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 3
  2027 ;; This function calls:
  2028 ;;		_LCDPutCmd
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034  042C                     _LCD_Initialize:	
  2035                           ;psect for function _LCD_Initialize
  2036                           
  2037  042C                     l1209:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2040                           
  2041                           
  2042                           ;LCD_Main.c: 63: PORTB = 0;
  2043  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2044  042D  1303               	bcf	3,6	;RP1=0, select bank0
  2045  042E  0186               	clrf	6	;volatile
  2046  042F                     l1211:
  2047                           
  2048                           ;LCD_Main.c: 64: PORTC = 0b00010000;
  2049  042F  3010               	movlw	16
  2050  0430  0087               	movwf	7	;volatile
  2051  0431                     l1213:
  2052                           
  2053                           ;LCD_Main.c: 65: TRISB = 0x00;
  2054  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0433  0186               	clrf	6	;volatile
  2057  0434                     l1215:
  2058                           
  2059                           ;LCD_Main.c: 66: TRISC = 0x00;
  2060  0434  0187               	clrf	7	;volatile
  2061  0435                     l1217:
  2062                           
  2063                           ;LCD_Main.c: 69: _delay((unsigned long)((15)*(4194304/4000.0)));
  2064  0435  3015               	movlw	21
  2065  0436  00F7               	movwf	??_LCD_Initialize+1
  2066  0437  306B               	movlw	107
  2067  0438  00F6               	movwf	??_LCD_Initialize
  2068  0439                     u917:
  2069  0439  0BF6               	decfsz	??_LCD_Initialize,f
  2070  043A  2C39               	goto	u917
  2071  043B  0BF7               	decfsz	??_LCD_Initialize+1,f
  2072  043C  2C39               	goto	u917
  2073  043D  2C3E               	nop2
  2074  043E                     l1219:
  2075                           
  2076                           ;LCD_Main.c: 70: LCDPutCmd(0x02);
  2077  043E  3002               	movlw	2
  2078  043F  118A  2365  118A   	fcall	_LCDPutCmd
  2079  0442                     l1221:
  2080                           
  2081                           ;LCD_Main.c: 72: LCDPutCmd(0x28);
  2082  0442  3028               	movlw	40
  2083  0443  118A  2365  118A   	fcall	_LCDPutCmd
  2084  0446                     l1223:
  2085                           
  2086                           ;LCD_Main.c: 74: LCDPutCmd(0x0C);
  2087  0446  300C               	movlw	12
  2088  0447  118A  2365  118A   	fcall	_LCDPutCmd
  2089  044A                     l1225:
  2090                           
  2091                           ;LCD_Main.c: 76: LCDPutCmd(0x06);
  2092  044A  3006               	movlw	6
  2093  044B  118A  2365  118A   	fcall	_LCDPutCmd
  2094  044E                     l1227:
  2095                           
  2096                           ;LCD_Main.c: 78: LCDPutCmd(0x01);
  2097  044E  3001               	movlw	1
  2098  044F  118A  2365  118A   	fcall	_LCDPutCmd
  2099  0452                     l1229:
  2100                           
  2101                           ;LCD_Main.c: 80: LCDPutCmd(0x80);
  2102  0452  3080               	movlw	128
  2103  0453  118A  2365  118A   	fcall	_LCDPutCmd
  2104  0456                     l45:
  2105  0456  0008               	return
  2106  0457                     __end_of_LCD_Initialize:
  2107                           
  2108                           	psect	text7
  2109  03DD                     __ptext7:	
  2110 ;; *************** function _LCDPutStr *****************
  2111 ;; Defined at:
  2112 ;;		line 169 in file "LCD_Main.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  str             2    6[COMMON] PTR const unsigned char 
  2115 ;;		 -> STR_10(14), main@iTime(6), STR_9(17), STR_8(15), 
  2116 ;;		 -> STR_7(15), STR_6(15), STR_5(6), STR_4(16), 
  2117 ;;		 -> STR_3(15), main@ExpTime(6), STR_2(15), STR_1(15), 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  i               1    9[COMMON] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2129 ;;      Params:         2       0       0       0
  2130 ;;      Locals:         1       0       0       0
  2131 ;;      Temps:          1       0       0       0
  2132 ;;      Totals:         4       0       0       0
  2133 ;;Total ram usage:        4 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 3
  2136 ;; This function calls:
  2137 ;;		_LCDPutChar
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143  03DD                     _LCDPutStr:	
  2144                           ;psect for function _LCDPutStr
  2145                           
  2146  03DD                     l1231:	
  2147                           ;incstack = 0
  2148                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2149                           
  2150                           
  2151                           ;LCD_Main.c: 169: void LCDPutStr(const char *str);LCD_Main.c: 170: {;LCD_Main.c: 171: ch
      +                          ar i=0;
  2152  03DD  01F9               	clrf	LCDPutStr@i
  2153                           
  2154                           ;LCD_Main.c: 174: while (str[i])
  2155  03DE  2BF0               	goto	l1237
  2156  03DF                     l1233:
  2157                           
  2158                           ;LCD_Main.c: 175: {;LCD_Main.c: 177: LCDPutChar(str[i++]);
  2159  03DF  0879               	movf	LCDPutStr@i,w
  2160  03E0  0776               	addwf	LCDPutStr@str,w
  2161  03E1  0084               	movwf	4
  2162  03E2  0877               	movf	LCDPutStr@str+1,w
  2163  03E3  1803               	skipnc
  2164  03E4  0A77               	incf	LCDPutStr@str+1,w
  2165  03E5  00FF               	movwf	btemp+1
  2166  03E6  118A  2002  118A   	fcall	stringtab
  2167  03E9  118A  2375  118A   	fcall	_LCDPutChar
  2168  03EC                     l1235:
  2169  03EC  3001               	movlw	1
  2170  03ED  00F8               	movwf	??_LCDPutStr
  2171  03EE  0878               	movf	??_LCDPutStr,w
  2172  03EF  07F9               	addwf	LCDPutStr@i,f
  2173  03F0                     l1237:
  2174                           
  2175                           ;LCD_Main.c: 174: while (str[i])
  2176  03F0  0879               	movf	LCDPutStr@i,w
  2177  03F1  0776               	addwf	LCDPutStr@str,w
  2178  03F2  0084               	movwf	4
  2179  03F3  0877               	movf	LCDPutStr@str+1,w
  2180  03F4  1803               	skipnc
  2181  03F5  0A77               	incf	LCDPutStr@str+1,w
  2182  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2183  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2184  03F8  00FF               	movwf	btemp+1
  2185  03F9  118A  2002  118A   	fcall	stringtab
  2186  03FC  3A00               	xorlw	0
  2187  03FD  1D03               	skipz
  2188  03FE  2C00               	goto	u671
  2189  03FF  2C01               	goto	u670
  2190  0400                     u671:
  2191  0400  2BDF               	goto	l1233
  2192  0401                     u670:
  2193  0401                     l71:
  2194  0401  0008               	return
  2195  0402                     __end_of_LCDPutStr:
  2196                           
  2197                           	psect	text8
  2198  0375                     __ptext8:	
  2199 ;; *************** function _LCDPutChar *****************
  2200 ;; Defined at:
  2201 ;;		line 143 in file "LCD_Main.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  ch              1    wreg     unsigned char 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  ch              1    5[COMMON] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0, pclath, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2215 ;;      Params:         0       0       0       0
  2216 ;;      Locals:         1       0       0       0
  2217 ;;      Temps:          2       0       0       0
  2218 ;;      Totals:         3       0       0       0
  2219 ;;Total ram usage:        3 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 2
  2222 ;; This function calls:
  2223 ;;		_LCDWriteNibble
  2224 ;; This function is called by:
  2225 ;;		_LCDPutStr
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229  0375                     _LCDPutChar:	
  2230                           ;psect for function _LCDPutChar
  2231                           
  2232                           
  2233                           ;incstack = 0
  2234                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  2235                           ;LCDPutChar@ch stored from wreg
  2236  0375  00F5               	movwf	LCDPutChar@ch
  2237  0376                     l1175:
  2238                           
  2239                           ;LCD_Main.c: 143: void LCDPutChar(char ch);LCD_Main.c: 144: {;LCD_Main.c: 145: _delay((u
      +                          nsigned long)((5)*(4194304/4000.0)));
  2240  0376  3007               	movlw	7
  2241  0377  00F4               	movwf	??_LCDPutChar+1
  2242  0378  30CD               	movlw	205
  2243  0379  00F3               	movwf	??_LCDPutChar
  2244  037A                     u927:
  2245  037A  0BF3               	decfsz	??_LCDPutChar,f
  2246  037B  2B7A               	goto	u927
  2247  037C  0BF4               	decfsz	??_LCDPutChar+1,f
  2248  037D  2B7A               	goto	u927
  2249  037E  2B7F               	nop2
  2250  037F                     l1177:
  2251                           
  2252                           ;LCD_Main.c: 148: LCDWriteNibble(ch,1);
  2253  037F  01F1               	clrf	LCDWriteNibble@rs
  2254  0380  0AF1               	incf	LCDWriteNibble@rs,f
  2255  0381  0875               	movf	LCDPutChar@ch,w
  2256  0382  118A  24BD  118A   	fcall	_LCDWriteNibble
  2257  0385                     l62:
  2258  0385  0008               	return
  2259  0386                     __end_of_LCDPutChar:
  2260                           
  2261                           	psect	text9
  2262  0457                     __ptext9:	
  2263 ;; *************** function _LCDGoto *****************
  2264 ;; Defined at:
  2265 ;;		line 182 in file "LCD_Main.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  pos             1    wreg     unsigned char 
  2268 ;;  ln              1    6[COMMON] unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  pos             1   11[COMMON] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2280 ;;      Params:         1       0       0       0
  2281 ;;      Locals:         3       0       0       0
  2282 ;;      Temps:          2       0       0       0
  2283 ;;      Totals:         6       0       0       0
  2284 ;;Total ram usage:        6 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 3
  2287 ;; This function calls:
  2288 ;;		_LCDPutCmd
  2289 ;; This function is called by:
  2290 ;;		_main
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294  0457                     _LCDGoto:	
  2295                           ;psect for function _LCDGoto
  2296                           
  2297                           
  2298                           ;incstack = 0
  2299                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  2300                           ;LCDGoto@pos stored from wreg
  2301  0457  00FB               	movwf	LCDGoto@pos
  2302  0458                     l1239:
  2303                           
  2304                           ;LCD_Main.c: 182: void LCDGoto(char pos,char ln);LCD_Main.c: 183: {;LCD_Main.c: 185: if 
      +                          ((ln > (2 -1)) || (pos > (16 -1)))
  2305  0458  3002               	movlw	2
  2306  0459  0276               	subwf	LCDGoto@ln,w
  2307  045A  1803               	skipnc
  2308  045B  2C5D               	goto	u681
  2309  045C  2C5E               	goto	u680
  2310  045D                     u681:
  2311  045D  2C82               	goto	l77
  2312  045E                     u680:
  2313  045E                     l1241:
  2314  045E  3010               	movlw	16
  2315  045F  027B               	subwf	LCDGoto@pos,w
  2316  0460  1C03               	skipc
  2317  0461  2C63               	goto	u691
  2318  0462  2C64               	goto	u690
  2319  0463                     u691:
  2320  0463  2C65               	goto	l1243
  2321  0464                     u690:
  2322  0464  2C82               	goto	l77
  2323  0465                     l1243:
  2324                           
  2325                           ;LCD_Main.c: 192: LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  2326  0465  0376               	decf	LCDGoto@ln,w
  2327  0466  1903               	btfsc	3,2
  2328  0467  2C69               	goto	u701
  2329  0468  2C6A               	goto	u700
  2330  0469                     u701:
  2331  0469  2C70               	goto	l1247
  2332  046A                     u700:
  2333  046A                     l1245:
  2334  046A  3080               	movlw	128
  2335  046B  047B               	iorwf	LCDGoto@pos,w
  2336  046C  00F9               	movwf	_LCDGoto$138
  2337  046D  3000               	movlw	0
  2338  046E  00FA               	movwf	_LCDGoto$138+1
  2339  046F  2C75               	goto	l1249
  2340  0470                     l1247:
  2341  0470  30C0               	movlw	192
  2342  0471  047B               	iorwf	LCDGoto@pos,w
  2343  0472  00F9               	movwf	_LCDGoto$138
  2344  0473  3000               	movlw	0
  2345  0474  00FA               	movwf	_LCDGoto$138+1
  2346  0475                     l1249:
  2347  0475  0879               	movf	_LCDGoto$138,w
  2348  0476  118A  2365  118A   	fcall	_LCDPutCmd
  2349  0479                     l1251:
  2350                           
  2351                           ;LCD_Main.c: 195: _delay((unsigned long)((5)*(4194304/4000.0)));
  2352  0479  3007               	movlw	7
  2353  047A  00F8               	movwf	??_LCDGoto+1
  2354  047B  30CD               	movlw	205
  2355  047C  00F7               	movwf	??_LCDGoto
  2356  047D                     u937:
  2357  047D  0BF7               	decfsz	??_LCDGoto,f
  2358  047E  2C7D               	goto	u937
  2359  047F  0BF8               	decfsz	??_LCDGoto+1,f
  2360  0480  2C7D               	goto	u937
  2361  0481  2C82               	nop2
  2362  0482                     l77:
  2363  0482  0008               	return
  2364  0483                     __end_of_LCDGoto:
  2365                           
  2366                           	psect	text10
  2367  0365                     __ptext10:	
  2368 ;; *************** function _LCDPutCmd *****************
  2369 ;; Defined at:
  2370 ;;		line 154 in file "LCD_Main.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  ch              1    wreg     unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  ch              1    5[COMMON] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2384 ;;      Params:         0       0       0       0
  2385 ;;      Locals:         1       0       0       0
  2386 ;;      Temps:          2       0       0       0
  2387 ;;      Totals:         3       0       0       0
  2388 ;;Total ram usage:        3 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 2
  2391 ;; This function calls:
  2392 ;;		_LCDWriteNibble
  2393 ;; This function is called by:
  2394 ;;		_LCD_Initialize
  2395 ;;		_LCDGoto
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400  0365                     _LCDPutCmd:	
  2401                           ;psect for function _LCDPutCmd
  2402                           
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  2406                           ;LCDPutCmd@ch stored from wreg
  2407  0365  00F5               	movwf	LCDPutCmd@ch
  2408  0366                     l1171:
  2409                           
  2410                           ;LCD_Main.c: 154: void LCDPutCmd(char ch);LCD_Main.c: 155: {;LCD_Main.c: 156: _delay((un
      +                          signed long)((5)*(4194304/4000.0)));
  2411  0366  3007               	movlw	7
  2412  0367  00F4               	movwf	??_LCDPutCmd+1
  2413  0368  30CD               	movlw	205
  2414  0369  00F3               	movwf	??_LCDPutCmd
  2415  036A                     u947:
  2416  036A  0BF3               	decfsz	??_LCDPutCmd,f
  2417  036B  2B6A               	goto	u947
  2418  036C  0BF4               	decfsz	??_LCDPutCmd+1,f
  2419  036D  2B6A               	goto	u947
  2420  036E  2B6F               	nop2
  2421  036F                     l1173:
  2422                           
  2423                           ;LCD_Main.c: 159: LCDWriteNibble(ch,0);
  2424  036F  01F1               	clrf	LCDWriteNibble@rs
  2425  0370  0875               	movf	LCDPutCmd@ch,w
  2426  0371  118A  24BD  118A   	fcall	_LCDWriteNibble
  2427  0374                     l65:
  2428  0374  0008               	return
  2429  0375                     __end_of_LCDPutCmd:
  2430                           
  2431                           	psect	text11
  2432  04BD                     __ptext11:	
  2433 ;; *************** function _LCDWriteNibble *****************
  2434 ;; Defined at:
  2435 ;;		line 93 in file "LCD_Main.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  ch              1    wreg     unsigned char 
  2438 ;;  rs              1    1[COMMON] unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  ch              1    2[COMMON] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2450 ;;      Params:         1       0       0       0
  2451 ;;      Locals:         1       0       0       0
  2452 ;;      Temps:          0       0       0       0
  2453 ;;      Totals:         2       0       0       0
  2454 ;;Total ram usage:        2 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 1
  2457 ;; This function calls:
  2458 ;;		_ToggleEnable
  2459 ;; This function is called by:
  2460 ;;		_LCDPutChar
  2461 ;;		_LCDPutCmd
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465  04BD                     _LCDWriteNibble:	
  2466                           ;psect for function _LCDWriteNibble
  2467                           
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0+pclath+cstack]
  2471                           ;LCDWriteNibble@ch stored from wreg
  2472  04BD  00F2               	movwf	LCDWriteNibble@ch
  2473  04BE                     l1079:
  2474                           
  2475                           ;LCD_Main.c: 93: void LCDWriteNibble(char ch, char rs);LCD_Main.c: 94: {;LCD_Main.c: 96:
      +                           PORTBbits.RB6 = rs;
  2476  04BE  0C71               	rrf	LCDWriteNibble@rs,w
  2477  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2478  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2479  04C1  1C03               	skipc
  2480  04C2  1306               	bcf	6,6	;volatile
  2481  04C3  1803               	skipnc
  2482  04C4  1706               	bsf	6,6	;volatile
  2483  04C5                     l1081:
  2484                           
  2485                           ;LCD_Main.c: 99: PORTBbits.RB7 = 0;
  2486  04C5  1386               	bcf	6,7	;volatile
  2487  04C6                     l1083:
  2488                           
  2489                           ;LCD_Main.c: 103: RB0 = 0x00;
  2490  04C6  1006               	bcf	6,0	;volatile
  2491  04C7                     l1085:
  2492                           
  2493                           ;LCD_Main.c: 104: RB1 = 0x00;
  2494  04C7  1086               	bcf	6,1	;volatile
  2495  04C8                     l1087:
  2496                           
  2497                           ;LCD_Main.c: 105: RB2 = 0x00;
  2498  04C8  1106               	bcf	6,2	;volatile
  2499  04C9                     l1089:
  2500                           
  2501                           ;LCD_Main.c: 106: RB3 = 0x00;
  2502  04C9  1186               	bcf	6,3	;volatile
  2503  04CA                     l1091:
  2504                           
  2505                           ;LCD_Main.c: 108:     if ((ch&0x10) == 0x10)
  2506  04CA  1E72               	btfss	LCDWriteNibble@ch,4
  2507  04CB  2CCD               	goto	u431
  2508  04CC  2CCE               	goto	u430
  2509  04CD                     u431:
  2510  04CD  2CCF               	goto	l51
  2511  04CE                     u430:
  2512  04CE                     l1093:
  2513                           
  2514                           ;LCD_Main.c: 109:             RB0 = 1;
  2515  04CE  1406               	bsf	6,0	;volatile
  2516  04CF                     l51:
  2517                           
  2518                           ;LCD_Main.c: 110:     if ((ch&0x20) == 0x20)
  2519  04CF  1EF2               	btfss	LCDWriteNibble@ch,5
  2520  04D0  2CD2               	goto	u441
  2521  04D1  2CD3               	goto	u440
  2522  04D2                     u441:
  2523  04D2  2CD4               	goto	l52
  2524  04D3                     u440:
  2525  04D3                     l1095:
  2526                           
  2527                           ;LCD_Main.c: 111:             RB1 = 1;
  2528  04D3  1486               	bsf	6,1	;volatile
  2529  04D4                     l52:
  2530                           
  2531                           ;LCD_Main.c: 112:     if ((ch&0x40) == 0x40)
  2532  04D4  1F72               	btfss	LCDWriteNibble@ch,6
  2533  04D5  2CD7               	goto	u451
  2534  04D6  2CD8               	goto	u450
  2535  04D7                     u451:
  2536  04D7  2CD9               	goto	l53
  2537  04D8                     u450:
  2538  04D8                     l1097:
  2539                           
  2540                           ;LCD_Main.c: 113:             RB2 = 1;
  2541  04D8  1506               	bsf	6,2	;volatile
  2542  04D9                     l53:
  2543                           
  2544                           ;LCD_Main.c: 114:     if ((ch&0x80) == 0x80)
  2545  04D9  1FF2               	btfss	LCDWriteNibble@ch,7
  2546  04DA  2CDC               	goto	u461
  2547  04DB  2CDD               	goto	u460
  2548  04DC                     u461:
  2549  04DC  2CDE               	goto	l1101
  2550  04DD                     u460:
  2551  04DD                     l1099:
  2552                           
  2553                           ;LCD_Main.c: 115:             RB3 = 1;
  2554  04DD  1586               	bsf	6,3	;volatile
  2555  04DE                     l1101:
  2556                           
  2557                           ;LCD_Main.c: 117: ToggleEnable();
  2558  04DE  118A  2386  118A   	fcall	_ToggleEnable
  2559  04E1                     l1103:
  2560                           
  2561                           ;LCD_Main.c: 121: RB0 = 0x00;
  2562  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2563  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2564  04E3  1006               	bcf	6,0	;volatile
  2565  04E4                     l1105:
  2566                           
  2567                           ;LCD_Main.c: 122: RB1 = 0x00;
  2568  04E4  1086               	bcf	6,1	;volatile
  2569  04E5                     l1107:
  2570                           
  2571                           ;LCD_Main.c: 123: RB2 = 0x00;
  2572  04E5  1106               	bcf	6,2	;volatile
  2573  04E6                     l1109:
  2574                           
  2575                           ;LCD_Main.c: 124: RB3 = 0x00;
  2576  04E6  1186               	bcf	6,3	;volatile
  2577  04E7                     l1111:
  2578                           
  2579                           ;LCD_Main.c: 126:     if ((ch&0x01) == 0x01)
  2580  04E7  1C72               	btfss	LCDWriteNibble@ch,0
  2581  04E8  2CEA               	goto	u471
  2582  04E9  2CEB               	goto	u470
  2583  04EA                     u471:
  2584  04EA  2CEC               	goto	l55
  2585  04EB                     u470:
  2586  04EB                     l1113:
  2587                           
  2588                           ;LCD_Main.c: 127:             RB0 = 1;
  2589  04EB  1406               	bsf	6,0	;volatile
  2590  04EC                     l55:
  2591                           
  2592                           ;LCD_Main.c: 128:     if ((ch&0x02) == 0x02)
  2593  04EC  1CF2               	btfss	LCDWriteNibble@ch,1
  2594  04ED  2CEF               	goto	u481
  2595  04EE  2CF0               	goto	u480
  2596  04EF                     u481:
  2597  04EF  2CF1               	goto	l56
  2598  04F0                     u480:
  2599  04F0                     l1115:
  2600                           
  2601                           ;LCD_Main.c: 129:             RB1 = 1;
  2602  04F0  1486               	bsf	6,1	;volatile
  2603  04F1                     l56:
  2604                           
  2605                           ;LCD_Main.c: 130:     if ((ch&0x04) == 0x04)
  2606  04F1  1D72               	btfss	LCDWriteNibble@ch,2
  2607  04F2  2CF4               	goto	u491
  2608  04F3  2CF5               	goto	u490
  2609  04F4                     u491:
  2610  04F4  2CF6               	goto	l57
  2611  04F5                     u490:
  2612  04F5                     l1117:
  2613                           
  2614                           ;LCD_Main.c: 131:             RB2 = 1;
  2615  04F5  1506               	bsf	6,2	;volatile
  2616  04F6                     l57:
  2617                           
  2618                           ;LCD_Main.c: 132:     if ((ch&0x08) == 0x08)
  2619  04F6  1DF2               	btfss	LCDWriteNibble@ch,3
  2620  04F7  2CF9               	goto	u501
  2621  04F8  2CFA               	goto	u500
  2622  04F9                     u501:
  2623  04F9  2CFB               	goto	l1121
  2624  04FA                     u500:
  2625  04FA                     l1119:
  2626                           
  2627                           ;LCD_Main.c: 133:             RB3 = 1;
  2628  04FA  1586               	bsf	6,3	;volatile
  2629  04FB                     l1121:
  2630                           
  2631                           ;LCD_Main.c: 135:  ToggleEnable();
  2632  04FB  118A  2386  118A   	fcall	_ToggleEnable
  2633  04FE                     l59:
  2634  04FE  0008               	return
  2635  04FF                     __end_of_LCDWriteNibble:
  2636                           
  2637                           	psect	text12
  2638  0386                     __ptext12:	
  2639 ;; *************** function _ToggleEnable *****************
  2640 ;; Defined at:
  2641 ;;		line 83 in file "LCD_Main.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2655 ;;      Params:         0       0       0       0
  2656 ;;      Locals:         0       0       0       0
  2657 ;;      Temps:          1       0       0       0
  2658 ;;      Totals:         1       0       0       0
  2659 ;;Total ram usage:        1 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_LCDWriteNibble
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668  0386                     _ToggleEnable:	
  2669                           ;psect for function _ToggleEnable
  2670                           
  2671  0386                     l1073:	
  2672                           ;incstack = 0
  2673                           ; Regs used in _ToggleEnable: [wreg]
  2674                           
  2675                           
  2676                           ;LCD_Main.c: 85: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2677  0386  3003               	movlw	3
  2678  0387  00F0               	movwf	??_ToggleEnable
  2679  0388                     u957:
  2680  0388  0BF0               	decfsz	??_ToggleEnable,f
  2681  0389  2B88               	goto	u957
  2682  038A                     l1075:
  2683                           
  2684                           ;LCD_Main.c: 86: PORTCbits.RC5 = 1;
  2685  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2686  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2687  038C  1687               	bsf	7,5	;volatile
  2688                           
  2689                           ;LCD_Main.c: 87: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2690  038D  3003               	movlw	3
  2691  038E  00F0               	movwf	??_ToggleEnable
  2692  038F                     u967:
  2693  038F  0BF0               	decfsz	??_ToggleEnable,f
  2694  0390  2B8F               	goto	u967
  2695  0391                     l1077:
  2696                           
  2697                           ;LCD_Main.c: 88: PORTCbits.RC5 = 0;
  2698  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0393  1287               	bcf	7,5	;volatile
  2701                           
  2702                           ;LCD_Main.c: 89: _delay((unsigned long)((10)*(4194304/4000000.0)));
  2703  0394  3003               	movlw	3
  2704  0395  00F0               	movwf	??_ToggleEnable
  2705  0396                     u977:
  2706  0396  0BF0               	decfsz	??_ToggleEnable,f
  2707  0397  2B96               	goto	u977
  2708  0398                     l48:
  2709  0398  0008               	return
  2710  0399                     __end_of_ToggleEnable:
  2711                           
  2712                           	psect	text13
  2713  0402                     __ptext13:	
  2714 ;; *************** function _ADC_Read *****************
  2715 ;; Defined at:
  2716 ;;		line 209 in file "LCD_Main.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  channel         1    wreg     unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  channel         1    4[COMMON] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    0[COMMON] unsigned int 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2730 ;;      Params:         2       0       0       0
  2731 ;;      Locals:         1       0       0       0
  2732 ;;      Temps:          2       0       0       0
  2733 ;;      Totals:         5       0       0       0
  2734 ;;Total ram usage:        5 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_main
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743  0402                     _ADC_Read:	
  2744                           ;psect for function _ADC_Read
  2745                           
  2746                           
  2747                           ;incstack = 0
  2748                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2749                           ;ADC_Read@channel stored from wreg
  2750  0402  00F4               	movwf	ADC_Read@channel
  2751  0403                     l1259:
  2752                           
  2753                           ;LCD_Main.c: 209: unsigned int ADC_Read(unsigned char channel);LCD_Main.c: 211: {;LCD_Ma
      +                          in.c: 213:   ADCON0 &= 0x11000101;
  2754  0403  3001               	movlw	1
  2755  0404  00F2               	movwf	??_ADC_Read
  2756  0405  0872               	movf	??_ADC_Read,w
  2757  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0408  059F               	andwf	31,f	;volatile
  2760                           
  2761                           ;LCD_Main.c: 215:   ADCON0 |= channel<<3;
  2762  0409  0874               	movf	ADC_Read@channel,w	;volatile
  2763  040A  00F2               	movwf	??_ADC_Read
  2764  040B  3002               	movlw	2
  2765  040C                     u715:
  2766  040C  1003               	clrc
  2767  040D  0DF2               	rlf	??_ADC_Read,f
  2768  040E  3EFF               	addlw	-1
  2769  040F  1D03               	skipz
  2770  0410  2C0C               	goto	u715
  2771  0411  1003               	clrc
  2772  0412  0D72               	rlf	??_ADC_Read,w
  2773  0413  00F3               	movwf	??_ADC_Read+1
  2774  0414  0873               	movf	??_ADC_Read+1,w
  2775  0415  049F               	iorwf	31,f	;volatile
  2776  0416                     l1261:
  2777                           
  2778                           ;LCD_Main.c: 217:   _delay((unsigned long)((2)*(4194304/4000.0)));
  2779  0416  3003               	movlw	3
  2780  0417  00F3               	movwf	??_ADC_Read+1
  2781  0418  30B8               	movlw	184
  2782  0419  00F2               	movwf	??_ADC_Read
  2783  041A                     u987:
  2784  041A  0BF2               	decfsz	??_ADC_Read,f
  2785  041B  2C1A               	goto	u987
  2786  041C  0BF3               	decfsz	??_ADC_Read+1,f
  2787  041D  2C1A               	goto	u987
  2788  041E                     l1263:
  2789                           
  2790                           ;LCD_Main.c: 219:   GO_nDONE = 1;
  2791  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2792  041F  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0420  149F               	bsf	31,1	;volatile
  2794  0421                     l87:	
  2795                           ;LCD_Main.c: 221:   while(GO_nDONE);
  2796                           
  2797  0421  189F               	btfsc	31,1	;volatile
  2798  0422  2C24               	goto	u721
  2799  0423  2C25               	goto	u720
  2800  0424                     u721:
  2801  0424  2C21               	goto	l87
  2802  0425                     u720:
  2803  0425                     l1265:
  2804                           
  2805                           ;LCD_Main.c: 223:   return ((ADRESH<<8)+ADRESL);
  2806  0425  081E               	movf	30,w	;volatile
  2807  0426  00F1               	movwf	?_ADC_Read+1
  2808  0427  1683               	bsf	3,5	;RP0=1, select bank1
  2809  0428  1303               	bcf	3,6	;RP1=0, select bank1
  2810  0429  081E               	movf	30,w	;volatile
  2811  042A  00F0               	movwf	?_ADC_Read
  2812  042B                     l90:
  2813  042B  0008               	return
  2814  042C                     __end_of_ADC_Read:
  2815                           
  2816                           	psect	text14
  2817  0359                     __ptext14:	
  2818 ;; *************** function _ADC_Initialize *****************
  2819 ;; Defined at:
  2820 ;;		line 200 in file "LCD_Main.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2834 ;;      Params:         0       0       0       0
  2835 ;;      Locals:         0       0       0       0
  2836 ;;      Temps:          0       0       0       0
  2837 ;;      Totals:         0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847  0359                     _ADC_Initialize:	
  2848                           ;psect for function _ADC_Initialize
  2849                           
  2850  0359                     l1253:	
  2851                           ;incstack = 0
  2852                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2853                           
  2854                           
  2855                           ;LCD_Main.c: 202:   ANSELH = 0x00;
  2856  0359  1683               	bsf	3,5	;RP0=1, select bank3
  2857  035A  1703               	bsf	3,6	;RP1=1, select bank3
  2858  035B  0189               	clrf	9	;volatile
  2859  035C                     l1255:
  2860                           
  2861                           ;LCD_Main.c: 203:   ADCON0 = 0b01000001;
  2862  035C  3041               	movlw	65
  2863  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2864  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2865  035F  009F               	movwf	31	;volatile
  2866  0360                     l1257:
  2867                           
  2868                           ;LCD_Main.c: 205:   ADCON1 = 0b11000000;
  2869  0360  30C0               	movlw	192
  2870  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2871  0362  1303               	bcf	3,6	;RP1=0, select bank1
  2872  0363  009F               	movwf	31	;volatile
  2873  0364                     l84:
  2874  0364  0008               	return
  2875  0365                     __end_of_ADC_Initialize:
  2876  007E                     btemp	set	126	;btemp
  2877  007E                     wtemp0	set	126
  2878                           
  2879                           	psect	idloc
  2880                           
  2881                           ;Config register IDLOC0 @ 0x2000
  2882                           ;	unspecified, using default values
  2883  2000                     	org	8192
  2884  2000  3FFF               	dw	16383
  2885                           
  2886                           ;Config register IDLOC1 @ 0x2001
  2887                           ;	unspecified, using default values
  2888  2001                     	org	8193
  2889  2001  3FFF               	dw	16383
  2890                           
  2891                           ;Config register IDLOC2 @ 0x2002
  2892                           ;	unspecified, using default values
  2893  2002                     	org	8194
  2894  2002  3FFF               	dw	16383
  2895                           
  2896                           ;Config register IDLOC3 @ 0x2003
  2897                           ;	unspecified, using default values
  2898  2003                     	org	8195
  2899  2003  3FFF               	dw	16383
  2900                           
  2901                           	psect	config
  2902                           
  2903                           ;Config register CONFIG1 @ 0x2007
  2904                           ;	Oscillator Selection bits
  2905                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2906                           ;	Watchdog Timer Enable bit
  2907                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2908                           ;	Power-up Timer Enable bit
  2909                           ;	PWRTE = ON, PWRT enabled
  2910                           ;	RE3/MCLR pin function select bit
  2911                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2912                           ;	Code Protection bit
  2913                           ;	CP = OFF, Program memory code protection is disabled
  2914                           ;	Data Code Protection bit
  2915                           ;	CPD = OFF, Data memory code protection is disabled
  2916                           ;	Brown Out Reset Selection bits
  2917                           ;	BOREN = ON, BOR enabled
  2918                           ;	Internal External Switchover bit
  2919                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2920                           ;	Fail-Safe Clock Monitor Enabled bit
  2921                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2922                           ;	Low Voltage Programming Enable bit
  2923                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2924                           ;	In-Circuit Debugger Mode bit
  2925                           ;	DEBUG = 0x1, unprogrammed default
  2926  2007                     	org	8199
  2927  2007  23E1               	dw	9185
  2928                           
  2929                           ;Config register CONFIG2 @ 0x2008
  2930                           ;	Brown-out Reset Selection bit
  2931                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2932                           ;	Flash Program Memory Self Write Enable bits
  2933                           ;	WRT = OFF, Write protection off
  2934  2008                     	org	8200
  2935  2008  3FFF               	dw	16383

Data Sizes:
    Strings     98
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      37
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> main@ExpTime(BANK0[6]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@iTime(BANK0[6]), main@ExpTime(BANK0[6]), main@Buffer(BANK0[7]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[14]), main@iTime(BANK0[6]), STR_9(CODE[17]), STR_8(CODE[15]), 
		 -> STR_7(CODE[15]), STR_6(CODE[15]), STR_5(CODE[6]), STR_4(CODE[16]), 
		 -> STR_3(CODE[15]), main@ExpTime(BANK0[6]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDWriteNibble->_ToggleEnable

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    6798
                                              9 BANK0     28    28      0
                     _ADC_Initialize
                           _ADC_Read
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                               _itoa
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     281
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2352
                                             13 COMMON     1     1      0
                                              4 BANK0      5     1      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     372
                                              6 COMMON     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            4     2      2    1526
                                              6 COMMON     4     2      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1    1266
                                              6 COMMON     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     372
                                              3 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     350
                                              1 COMMON     2     1      1
                       _ToggleEnable
 ---------------------------------------------------------------------------------
 (4) _ToggleEnable                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
         _ToggleEnable
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     25      25       3       46.2%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jun 04 15:54:55 2022

         _LCD_Initialize 042C                        pc 0002                       l51 04CF  
            ?_LCDPutChar 0070                       l52 04D4                       l53 04D9  
                     l45 0456                       l62 0385                       l55 04EC  
                     l71 0401                       l48 0398                       l56 04F1  
                     l57 04F6                       l65 0374                       l90 042B  
                     l59 04FE                       l84 0364                       l77 0482  
                     l87 0421              main@ExpTime 0039                       fsr 0004  
                    l104 07F7                      l107 07EF                      l651 03DC  
                    l469 0542                      l479 04BC                      l657 0597  
                    l665 03B8                      l659 05AE                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RC4 003C                      u500 04FA                      u501 04F9  
                    u430 04CE                      u510 0507                      u431 04CD  
                    u511 0506                      u440 04D3                      u600 049B  
                    u441 04D2                      u601 049A                      u450 04D8  
                    u530 0519                      u610 04A5                      u451 04D7  
                    u531 0518                      u611 04A4                      u460 04DD  
                    u700 046A                      u461 04DC                      u701 0469  
                    u525 050B                      u470 04EB                      u550 052A  
                    u630 04B8                      u471 04EA                      u551 0529  
                    u631 04B7                      u615 04A1                      u720 0425  
                    u480 04F0                      u640 0565                      u800 069E  
                    u721 0424                      u481 04EF                      u545 051A  
                    u625 04AC                      u641 0564                      u801 069D  
                    u490 04F5                      u570 053E                      u650 0593  
                    u730 03C0                      u810 06ED                      u715 040C  
                    u491 04F4                      u571 053D                      u555 0526  
                    u651 0592                      u731 03BF                      u811 06EC  
                    u580 0489                      u660 05AA                      u740 03B8  
                    u820 06FC                      u565 0532                      u581 0488  
                    u661 05A9                      u741 03B7                      u821 06FB  
                    u805 069A                      u670 0401                      u830 076D  
                    u750 060C                      u671 0400                      u831 076C  
                    u815 06E9                      u751 060B                      u680 045E  
                    u840 07EF                      u760 061B                      u681 045D  
                    u841 07EE                      u825 06F8                      u761 061A  
                    u690 0464                      u770 0630                      u691 0463  
                    u595 048D                      u907 07AD                      u835 0769  
                    u771 062F                      u755 0608                      u780 067A  
                    u917 0439                      u845 07EB                      u781 0679  
                    u765 0617                      u790 0689                      u927 037A  
                    u791 0688                      u775 062C                      u937 047D  
                    u785 0676                      u857 05DC                      u947 036A  
                    u795 0685                      u867 0663                      u957 0388  
                    u877 06D1                      u967 038F                      u887 0714  
                    u977 0396                      u897 0752                      u987 041A  
                    fsr0 0004                      indf 0000          __end_of_LCDGoto 0483  
                   l1101 04DE                     l1111 04E7                     l1103 04E1  
                   l1121 04FB                     l1113 04EB                     l1105 04E4  
                   l1201 05A2                     l1115 04F0                     l1107 04E5  
                   l1211 042F                     l1131 0511                     l1123 04FF  
                   l1203 05A4                     l1117 04F5                     l1109 04E6  
                   l1221 0442                     l1213 0431                     l1141 0531  
                   l1133 0515                     l1125 0501                     l1205 05AA  
                   l1301 05C7                     l1119 04FA                     l1231 03DD  
                   l1223 0446                     l1215 0434                     l1143 0538  
                   l1135 0519                     l1127 0507                     l1151 0489  
                   l1311 05FD                     l1303 05CD                     l1073 0386  
                   l1081 04C5                     l1241 045E                     l1233 03DF  
                   l1225 044A                     l1217 0435                     l1209 042C  
                   l1137 052A                     l1129 050A                     l1145 053E  
                   l1161 04A5                     l1153 048C                     l1401 079F  
                   l1321 0636                     l1313 060C                     l1305 05E3  
                   l1075 038A                     l1091 04CA                     l1083 04C6  
                   l1171 0366                     l1251 0479                     l1243 0465  
                   l1235 03EC                     l1227 044E                     l1219 043E  
                   l1139 0530                     l1163 04AB                     l1155 0493  
                   l1411 07C5                     l1403 07A2                     l1331 065B  
                   l1323 0644                     l1315 061B                     l1307 05E7  
                   l1253 0359                     l1261 0416                     l1077 0391  
                   l1093 04CE                     l1085 04C7                     l1173 036F  
                   l1245 046A                     l1237 03F0                     l1229 0452  
                   l1165 04B2                     l1157 0497                     l1149 0483  
                   l1181 054A                     l1421 07F2                     l1413 07CB  
                   l1405 07A2                     l1341 069E                     l1325 0649  
                   l1317 0623                     l1333 066B                     l1309 05F1  
                   l1255 035C                     l1263 041E                     l1095 04D3  
                   l1087 04C8                     l1079 04BE                     l1247 0470  
                   l1239 0458                     l1175 0376                     l1159 049B  
                   l1167 04B8                     l1191 056B                     l1183 055B  
                   l1271 03BC                     l1415 07D2                     l1407 07A5  
                   l1351 06C5                     l1343 06A4                     l1335 067A  
                   l1327 0650                     l1319 0630                     l1257 0360  
                   l1265 0425                     l1097 04D8                     l1089 04C9  
                   l1249 0475                     l1177 037F                     l1193 057C  
                   l1185 055F                     l1273 03C0                     l1417 07D9  
                   l1409 07B3                     l1361 06FC                     l1353 06C9  
                   l1345 06B2                     l1337 0689                     l1329 0657  
                   l1259 0403                     l1099 04DD                     l1195 058B  
                   l1187 0565                     l1179 0546                     l1275 03C7  
                   l1283 039A                     l1419 07E1                     l1371 072C  
                   l1363 0705                     l1355 06D8                     l1347 06B7  
                   l1339 0691                     l1291 05AF                     l1197 0593  
                   l1189 0569                     l1277 03CB                     l1269 03BC  
                   l1285 039F                     l1381 074A                     l1373 0732  
                   l1365 070C                     l1349 06BE                     l1357 06DE  
                   l1293 05B2                     l1199 059B                     l1279 03D0  
                   l1287 03A6                     l1391 0780                     l1383 0759  
                   l1375 0736                     l1367 071B                     l1359 06ED  
                   l1295 05B8                     l1289 03AA                     l1393 0787  
                   l1377 073D                     l1369 0721                     l1385 075E  
                   l1297 05BB                     l1395 078E                     l1387 076D  
                   l1379 0743                     l1299 05C0                     l1397 0794  
                   l1389 0772                     l1399 079B                     STR_1 0042  
                   STR_2 0033                     STR_3 0051                     STR_4 0023  
                   STR_5 006E                     STR_6 0042                     STR_7 0033  
                   STR_8 0051                     STR_9 0012                     _main 05AF  
                   _itoa 03B9                     btemp 007E                     _utoa 0543  
       __end_of_ADC_Read 042C                     start 0000   __end_of_LCD_Initialize 0457  
            LCDPutCmd@ch 0075                    ?_main 0070                    ?_itoa 0024  
                  STR_10 0060                    ?_utoa 0078          __end_of___lwdiv 0543  
        __end_of___lwmod 04BD                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    main@i 003F  
                  pclath 000A                    utoa@c 0022                    utoa@v 0020  
                  status 0003                    wtemp0 007E          ?_LCD_Initialize 0070  
        __initialization 07FD             __end_of_main 07FD             __end_of_itoa 03DD  
           __end_of_utoa 05AF                   ??_main 0029                   ??_itoa 007D  
                 ??_utoa 007C                ??_LCDGoto 0077        __end_of_LCDPutCmd 0375  
           LCDPutChar@ch 0075        __end_of_LCDPutStr 0402                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _ANSELH 0189             LCDPutStr@str 0076           _LCDWriteNibble 04BD  
              ??___lwdiv 0074                ??___lwmod 0074          ADC_Read@channel 0074  
                 _memset 0399                ?_ADC_Read 0070   __end_of_LCDWriteNibble 04FF  
__end_of__initialization 07FD                LCDGoto@ln 0076           __pcstackCOMMON 0070  
           ??_LCDPutChar 0073               ??_ADC_Read 0072          ?_LCDWriteNibble 0071  
     __end_of_LCDPutChar 0386               __pmaintext 05AF                  ?_memset 0070  
                _LCDGoto 0457               __stringtab 0002         ??_LCD_Initialize 0076  
                ___lwdiv 04FF                  ___lwmod 0483                  __ptext1 0399  
                __ptext2 03B9                  __ptext3 0543                  __ptext4 0483  
                __ptext5 04FF                  __ptext6 042C                  __ptext7 03DD  
                __ptext8 0375                  __ptext9 0457            ?_ToggleEnable 0070  
              _LCDPutCmd 0365                  main@adc 0043                _LCDPutStr 03DD  
   end_of_initialization 07FD                  itoa@buf 0028                  memset@c 0070  
                itoa@val 0024                  memset@n 0072                  memset@p 0076  
                utoa@buf 0023                  utoa@val 0078           ??_ToggleEnable 0070  
              _PORTBbits 0006                _PORTCbits 0007               main@Buffer 002C  
             ?_LCDPutCmd 0070               ?_LCDPutStr 0076               LCDGoto@pos 007B  
             LCDPutStr@i 0079           _ADC_Initialize 0359           __end_of_memset 03B9  
       main@ExposureTime 0041      start_initialization 07FD         ??_LCDWriteNibble 0072  
 __end_of_ADC_Initialize 0365                 ??_memset 0074                 ?_LCDGoto 0076  
              ___latbits 0001            __pcstackBANK0 0020              ??_LCDPutCmd 0073  
            ??_LCDPutStr 0078     __end_of_ToggleEnable 0399         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070          ?_ADC_Initialize 0070  
       LCDWriteNibble@ch 0072         LCDWriteNibble@rs 0071                __pstrings 0002  
               _ADC_Read 0402         ___lwdiv@quotient 0075              _LCDGoto$138 0079  
               _GO_nDONE 00F9              __stringbase 0011                main@iTime 0033  
     __end_of__stringtab 0012          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 0365                 __ptext11 04BD                 __ptext12 0386  
               __ptext13 0402                 __ptext14 0359               _LCDPutChar 0375  
           _ToggleEnable 0386                 itoa@base 0026                 memset@p1 0075  
       ___lwmod@dividend 0072         ??_ADC_Initialize 0070                stringcode 000C  
               utoa@base 007A          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 000C                 stringtab 0002  
